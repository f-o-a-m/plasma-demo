// Generated by purs bundle 0.12.1
var PS = {};
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  var composeFlipped = function (dictSemigroupoid) {
      return function (f) {
          return function (g) {
              return compose(dictSemigroupoid)(g)(f);
          };
      };
  };
  exports["compose"] = compose;
  exports["Semigroupoid"] = Semigroupoid;
  exports["composeFlipped"] = composeFlipped;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS["Control.Semigroupoid"] = PS["Control.Semigroupoid"] || {});
(function(exports) {
    "use strict";

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        if (xs === ys) return true;
        if (xs.length !== ys.length) return false;
        for (var i = 0; i < xs.length; i++) {
          if (!f(xs[i])(ys[i])) return false;
        }
        return true;
      };
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
    "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Symbol"];      
  var SProxy = (function () {
      function SProxy() {

      };
      SProxy.value = new SProxy();
      return SProxy;
  })();
  var IsSymbol = function (reflectSymbol) {
      this.reflectSymbol = reflectSymbol;
  };
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["IsSymbol"] = IsSymbol;
  exports["reflectSymbol"] = reflectSymbol;
  exports["SProxy"] = SProxy;
})(PS["Data.Symbol"] = PS["Data.Symbol"] || {});
(function(exports) {
    "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
    "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showCharImpl = function (c) {
    var code = c.charCodeAt(0);
    if (code < 0x20 || code === 0x7F) {
      switch (c) {
        case "\x07": return "'\\a'";
        case "\b": return "'\\b'";
        case "\f": return "'\\f'";
        case "\n": return "'\\n'";
        case "\r": return "'\\r'";
        case "\t": return "'\\t'";
        case "\v": return "'\\v'";
      }
      return "'\\" + code.toString(10) + "'";
    }
    return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
      function (c, i) {
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };

  exports.cons = function (head) {
    return function (tail) {
      return [head].concat(tail);
    };
  };

  exports.join = function (separator) {
    return function (xs) {
      return xs.join(separator);
    };
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
    "use strict";

  exports.unsafeGet = function (label) {
    return function (rec) {
      return rec[label];
    };
  };

  exports.unsafeSet = function (label) {
    return function (value) {
      return function (rec) {
        var copy = {};
        for (var key in rec) {
          if ({}.hasOwnProperty.call(rec, key)) {
            copy[key] = rec[key];
          }
        }
        copy[label] = value;
        return copy;
      };
    };
  };
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Record.Unsafe"];
  exports["unsafeGet"] = $foreign.unsafeGet;
  exports["unsafeSet"] = $foreign.unsafeSet;
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var RLProxy = (function () {
      function RLProxy() {

      };
      RLProxy.value = new RLProxy();
      return RLProxy;
  })();
  exports["RLProxy"] = RLProxy;
})(PS["Type.Data.RowList"] = PS["Type.Data.RowList"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Show = function (show) {
      this.show = show;
  };
  var ShowRecordFields = function (showRecordFields) {
      this.showRecordFields = showRecordFields;
  };
  var showString = new Show($foreign.showStringImpl);
  var showRecordFieldsNil = new ShowRecordFields(function (v) {
      return function (v1) {
          return [  ];
      };
  });
  var showRecordFields = function (dict) {
      return dict.showRecordFields;
  };
  var showRecord = function (dictRowToList) {
      return function (dictShowRecordFields) {
          return new Show(function (record) {
              var v = showRecordFields(dictShowRecordFields)(Type_Data_RowList.RLProxy.value)(record);
              if (v.length === 0) {
                  return "{}";
              };
              return $foreign.join(" ")([ "{", $foreign.join(", ")(v), "}" ]);
          });
      };
  };                                                 
  var showInt = new Show($foreign.showIntImpl);
  var showChar = new Show($foreign.showCharImpl);
  var showBoolean = new Show(function (v) {
      if (v) {
          return "true";
      };
      if (!v) {
          return "false";
      };
      throw new Error("Failed pattern match at Data.Show line 20, column 1 - line 20, column 37: " + [ v.constructor.name ]);
  });
  var show = function (dict) {
      return dict.show;
  };
  var showRecordFieldsCons = function (dictIsSymbol) {
      return function (dictShowRecordFields) {
          return function (dictShow) {
              return new ShowRecordFields(function (v) {
                  return function (record) {
                      var tail = showRecordFields(dictShowRecordFields)(Type_Data_RowList.RLProxy.value)(record);
                      var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                      var focus = Record_Unsafe.unsafeGet(key)(record);
                      return $foreign.cons($foreign.join(": ")([ key, show(dictShow)(focus) ]))(tail);
                  };
              });
          };
      };
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["ShowRecordFields"] = ShowRecordFields;
  exports["showRecordFields"] = showRecordFields;
  exports["showBoolean"] = showBoolean;
  exports["showInt"] = showInt;
  exports["showChar"] = showChar;
  exports["showString"] = showString;
  exports["showRecord"] = showRecord;
  exports["showRecordFieldsNil"] = showRecordFieldsNil;
  exports["showRecordFieldsCons"] = showRecordFieldsCons;
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.HeytingAlgebra"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_Row = PS["Type.Data.Row"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var implies = function (dict) {
      return dict.implies;
  };
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  var conj = function (dict) {
      return dict.conj;
  };
  exports["HeytingAlgebra"] = HeytingAlgebra;
  exports["tt"] = tt;
  exports["ff"] = ff;
  exports["implies"] = implies;
  exports["conj"] = conj;
  exports["disj"] = disj;
  exports["not"] = not;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Eq = function (eq) {
      this.eq = eq;
  }; 
  var eqString = new Eq($foreign.refEq);
  var eqNumber = new Eq($foreign.refEq);
  var eqInt = new Eq($foreign.refEq);
  var eqChar = new Eq($foreign.refEq);
  var eqBoolean = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  };
  var eqArray = function (dictEq) {
      return new Eq($foreign.eqArrayImpl(eq(dictEq)));
  };
  var notEq = function (dictEq) {
      return function (x) {
          return function (y) {
              return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
          };
      };
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["eqBoolean"] = eqBoolean;
  exports["eqInt"] = eqInt;
  exports["eqNumber"] = eqNumber;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
  exports["eqArray"] = eqArray;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
    "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
    "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];                 
  var Category = function (Semigroupoid0, identity) {
      this.Semigroupoid0 = Semigroupoid0;
      this.identity = identity;
  };
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["Category"] = Category;
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS["Control.Category"] = PS["Control.Category"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS["Data.Boolean"] = PS["Data.Boolean"] || {});
(function(exports) {
    "use strict";

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
    "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Semigroup"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Semigroup = function (append) {
      this.append = append;
  };
  var SemigroupRecord = function (appendRecord) {
      this.appendRecord = appendRecord;
  }; 
  var semigroupUnit = new Semigroup(function (v) {
      return function (v1) {
          return Data_Unit.unit;
      };
  });
  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupRecordNil = new SemigroupRecord(function (v) {
      return function (v1) {
          return function (v2) {
              return {};
          };
      };
  });
  var semigroupArray = new Semigroup($foreign.concatArray);
  var appendRecord = function (dict) {
      return dict.appendRecord;
  };
  var semigroupRecord = function (dictRowToList) {
      return function (dictSemigroupRecord) {
          return new Semigroup(appendRecord(dictSemigroupRecord)(Type_Data_RowList.RLProxy.value));
      };
  };
  var append = function (dict) {
      return dict.append;
  };
  var semigroupFn = function (dictSemigroup) {
      return new Semigroup(function (f) {
          return function (g) {
              return function (x) {
                  return append(dictSemigroup)(f(x))(g(x));
              };
          };
      });
  };
  var semigroupRecordCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictSemigroupRecord) {
              return function (dictSemigroup) {
                  return new SemigroupRecord(function (v) {
                      return function (ra) {
                          return function (rb) {
                              var tail = appendRecord(dictSemigroupRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                              var insert = Record_Unsafe.unsafeSet(key);
                              var get = Record_Unsafe.unsafeGet(key);
                              return insert(append(dictSemigroup)(get(ra))(get(rb)))(tail);
                          };
                      };
                  });
              };
          };
      };
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["SemigroupRecord"] = SemigroupRecord;
  exports["appendRecord"] = appendRecord;
  exports["semigroupString"] = semigroupString;
  exports["semigroupUnit"] = semigroupUnit;
  exports["semigroupFn"] = semigroupFn;
  exports["semigroupArray"] = semigroupArray;
  exports["semigroupRecord"] = semigroupRecord;
  exports["semigroupRecordNil"] = semigroupRecordNil;
  exports["semigroupRecordCons"] = semigroupRecordCons;
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];                 
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  var eqOrdering = new Data_Eq.Eq(function (v) {
      return function (v1) {
          if (v instanceof LT && v1 instanceof LT) {
              return true;
          };
          if (v instanceof GT && v1 instanceof GT) {
              return true;
          };
          if (v instanceof EQ && v1 instanceof EQ) {
              return true;
          };
          return false;
      };
  });
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
  exports["eqOrdering"] = eqOrdering;
})(PS["Data.Ordering"] = PS["Data.Ordering"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];                 
  var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
  exports["unsafeCompare"] = unsafeCompare;
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
    "use strict";

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
    "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Semiring"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_Row = PS["Type.Data.Row"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };
  var zero = function (dict) {
      return dict.zero;
  };                                                                            
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  var one = function (dict) {
      return dict.one;
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var add = function (dict) {
      return dict.add;
  };
  exports["Semiring"] = Semiring;
  exports["add"] = add;
  exports["zero"] = zero;
  exports["mul"] = mul;
  exports["one"] = one;
  exports["semiringInt"] = semiringInt;
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Ring = function (Semiring0, sub) {
      this.Semiring0 = Semiring0;
      this.sub = sub;
  };
  var sub = function (dict) {
      return dict.sub;
  };                  
  var ringInt = new Ring(function () {
      return Data_Semiring.semiringInt;
  }, $foreign.intSub);
  var negate = function (dictRing) {
      return function (a) {
          return sub(dictRing)(Data_Semiring.zero(dictRing.Semiring0()))(a);
      };
  };
  exports["Ring"] = Ring;
  exports["sub"] = sub;
  exports["negate"] = negate;
  exports["ringInt"] = ringInt;
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord_Unsafe = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Ord = function (Eq0, compare) {
      this.Eq0 = Eq0;
      this.compare = compare;
  }; 
  var ordString = new Ord(function () {
      return Data_Eq.eqString;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordNumber = new Ord(function () {
      return Data_Eq.eqNumber;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordChar = new Ord(function () {
      return Data_Eq.eqChar;
  }, Data_Ord_Unsafe.unsafeCompare);
  var compare = function (dict) {
      return dict.compare;
  };
  var comparing = function (dictOrd) {
      return function (f) {
          return function (x) {
              return function (y) {
                  return compare(dictOrd)(f(x))(f(y));
              };
          };
      };
  };
  var greaterThan = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.GT) {
                  return true;
              };
              return false;
          };
      };
  };
  var greaterThanOrEq = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.LT) {
                  return false;
              };
              return true;
          };
      };
  };
  var lessThan = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.LT) {
                  return true;
              };
              return false;
          };
      };
  };
  var max = function (dictOrd) {
      return function (x) {
          return function (y) {
              var v = compare(dictOrd)(x)(y);
              if (v instanceof Data_Ordering.LT) {
                  return y;
              };
              if (v instanceof Data_Ordering.EQ) {
                  return x;
              };
              if (v instanceof Data_Ordering.GT) {
                  return x;
              };
              throw new Error("Failed pattern match at Data.Ord line 128, column 3 - line 131, column 12: " + [ v.constructor.name ]);
          };
      };
  };
  var min = function (dictOrd) {
      return function (x) {
          return function (y) {
              var v = compare(dictOrd)(x)(y);
              if (v instanceof Data_Ordering.LT) {
                  return x;
              };
              if (v instanceof Data_Ordering.EQ) {
                  return x;
              };
              if (v instanceof Data_Ordering.GT) {
                  return y;
              };
              throw new Error("Failed pattern match at Data.Ord line 119, column 3 - line 122, column 12: " + [ v.constructor.name ]);
          };
      };
  };
  var abs = function (dictOrd) {
      return function (dictRing) {
          return function (x) {
              var $53 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
              if ($53) {
                  return x;
              };
              return Data_Ring.negate(dictRing)(x);
          };
      };
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["lessThan"] = lessThan;
  exports["greaterThan"] = greaterThan;
  exports["greaterThanOrEq"] = greaterThanOrEq;
  exports["comparing"] = comparing;
  exports["min"] = min;
  exports["max"] = max;
  exports["abs"] = abs;
  exports["ordInt"] = ordInt;
  exports["ordNumber"] = ordNumber;
  exports["ordString"] = ordString;
  exports["ordChar"] = ordChar;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];                 
  var on = function (f) {
      return function (g) {
          return function (x) {
              return function (y) {
                  return f(g(x))(g(y));
              };
          };
      };
  };
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  var applyFlipped = function (x) {
      return function (f) {
          return f(x);
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
  exports["applyFlipped"] = applyFlipped;
  exports["on"] = on;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];                 
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var mapFlipped = function (dictFunctor) {
      return function (fa) {
          return function (f) {
              return map(dictFunctor)(f)(fa);
          };
      };
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var voidLeft = function (dictFunctor) {
      return function (f) {
          return function (x) {
              return map(dictFunctor)(Data_Function["const"](x))(f);
          };
      };
  };
  var voidRight = function (dictFunctor) {
      return function (x) {
          return map(dictFunctor)(Data_Function["const"](x));
      };
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["mapFlipped"] = mapFlipped;
  exports["void"] = $$void;
  exports["voidRight"] = voidRight;
  exports["voidLeft"] = voidLeft;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];                 
  var Alt = function (Functor0, alt) {
      this.Functor0 = Functor0;
      this.alt = alt;
  };                                                       
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS["Control.Alt"] = PS["Control.Alt"] || {});
(function(exports) {
    "use strict";

  exports.arrayApply = function (fs) {
    return function (xs) {
      var l = fs.length;
      var k = xs.length;
      var result = new Array(l*k);
      var n = 0;
      for (var i = 0; i < l; i++) {
        var f = fs[i];
        for (var j = 0; j < k; j++) {
          result[n++] = f(xs[j]);
        }
      }
      return result;
    };
  };
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];                 
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  }; 
  var applyArray = new Apply(function () {
      return Data_Functor.functorArray;
  }, $foreign.arrayApply);
  var apply = function (dict) {
      return dict.apply;
  };
  var applyFirst = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"])(a))(b);
          };
      };
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  var lift2 = function (dictApply) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
              };
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applyFirst"] = applyFirst;
  exports["applySecond"] = applySecond;
  exports["lift2"] = lift2;
  exports["applyArray"] = applyArray;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];                 
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var unless = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (!v) {
                  return v1;
              };
              if (v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative line 62, column 1 - line 62, column 65: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var when = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative line 57, column 1 - line 57, column 63: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  }; 
  var applicativeArray = new Applicative(function () {
      return Control_Apply.applyArray;
  }, function (x) {
      return [ x ];
  });
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["unless"] = unless;
  exports["when"] = when;
  exports["applicativeArray"] = applicativeArray;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
    "use strict";

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];                 
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };
  var Discard = function (discard) {
      this.discard = discard;
  };
  var discard = function (dict) {
      return dict.discard;
  }; 
  var bindArray = new Bind(function () {
      return Control_Apply.applyArray;
  }, $foreign.arrayBind);
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var composeKleisliFlipped = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bindFlipped(dictBind)(f)(g(a));
              };
          };
      };
  };
  var composeKleisli = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bind(dictBind)(f(a))(g);
              };
          };
      };
  };
  var discardUnit = new Discard(function (dictBind) {
      return bind(dictBind);
  });
  var join = function (dictBind) {
      return function (m) {
          return bind(dictBind)(m)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["Discard"] = Discard;
  exports["discard"] = discard;
  exports["join"] = join;
  exports["composeKleisli"] = composeKleisli;
  exports["composeKleisliFlipped"] = composeKleisliFlipped;
  exports["bindArray"] = bindArray;
  exports["discardUnit"] = discardUnit;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Data_Functor = PS["Data.Functor"];                 
  var Plus = function (Alt0, empty) {
      this.Alt0 = Alt0;
      this.empty = empty;
  };       
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;
})(PS["Control.Plus"] = PS["Control.Plus"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor = PS["Data.Functor"];                 
  var Alternative = function (Applicative0, Plus1) {
      this.Applicative0 = Applicative0;
      this.Plus1 = Plus1;
  };
  exports["Alternative"] = Alternative;
})(PS["Control.Alternative"] = PS["Control.Alternative"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];                 
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  }; 
  var liftM1 = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(a)(function (v) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(f(v));
              });
          };
      };
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["liftM1"] = liftM1;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];                 
  var MonadZero = function (Alternative1, Monad0) {
      this.Alternative1 = Alternative1;
      this.Monad0 = Monad0;
  }; 
  var guard = function (dictMonadZero) {
      return function (v) {
          if (v) {
              return Control_Applicative.pure((dictMonadZero.Alternative1()).Applicative0())(Data_Unit.unit);
          };
          if (!v) {
              return Control_Plus.empty((dictMonadZero.Alternative1()).Plus1());
          };
          throw new Error("Failed pattern match at Control.MonadZero line 54, column 1 - line 54, column 52: " + [ v.constructor.name ]);
      };
  };
  exports["MonadZero"] = MonadZero;
  exports["guard"] = guard;
})(PS["Control.MonadZero"] = PS["Control.MonadZero"] || {});
(function(exports) {
    "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;

  exports.topChar = String.fromCharCode(65535);
  exports.bottomChar = String.fromCharCode(0);
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Bounded"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Unit = PS["Data.Unit"];                 
  var Bounded = function (Ord0, bottom, top) {
      this.Ord0 = Ord0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };                                            
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var boundedChar = new Bounded(function () {
      return Data_Ord.ordChar;
  }, $foreign.bottomChar, $foreign.topChar);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["Bounded"] = Bounded;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
  exports["boundedChar"] = boundedChar;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
    "use strict";

  exports.intDegree = function (x) {
    return Math.min(Math.abs(x), 2147483647);
  };

  // See the Euclidean definition in
  // https://en.m.wikipedia.org/wiki/Modulo_operation.
  exports.intDiv = function (x) {
    return function (y) {
      if (y === 0) return 0;
      return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
  };

  exports.intMod = function (x) {
    return function (y) {
      if (y === 0) return 0;
      var yy = Math.abs(y);
      return ((x % yy) + yy) % yy;
    };
  };
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];                 
  var CommutativeRing = function (Ring0) {
      this.Ring0 = Ring0;
  }; 
  var commutativeRingInt = new CommutativeRing(function () {
      return Data_Ring.ringInt;
  });
  exports["CommutativeRing"] = CommutativeRing;
  exports["commutativeRingInt"] = commutativeRingInt;
})(PS["Data.CommutativeRing"] = PS["Data.CommutativeRing"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.EuclideanRing"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];                 
  var EuclideanRing = function (CommutativeRing0, degree, div, mod) {
      this.CommutativeRing0 = CommutativeRing0;
      this.degree = degree;
      this.div = div;
      this.mod = mod;
  };
  var mod = function (dict) {
      return dict.mod;
  }; 
  var euclideanRingInt = new EuclideanRing(function () {
      return Data_CommutativeRing.commutativeRingInt;
  }, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
  var div = function (dict) {
      return dict.div;
  };
  var degree = function (dict) {
      return dict.degree;
  };
  exports["EuclideanRing"] = EuclideanRing;
  exports["degree"] = degree;
  exports["div"] = div;
  exports["mod"] = mod;
  exports["euclideanRingInt"] = euclideanRingInt;
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Monoid = function (Semigroup0, mempty) {
      this.Semigroup0 = Semigroup0;
      this.mempty = mempty;
  };
  var MonoidRecord = function (SemigroupRecord0, memptyRecord) {
      this.SemigroupRecord0 = SemigroupRecord0;
      this.memptyRecord = memptyRecord;
  };
  var monoidUnit = new Monoid(function () {
      return Data_Semigroup.semigroupUnit;
  }, Data_Unit.unit);
  var monoidString = new Monoid(function () {
      return Data_Semigroup.semigroupString;
  }, "");
  var monoidRecordNil = new MonoidRecord(function () {
      return Data_Semigroup.semigroupRecordNil;
  }, function (v) {
      return {};
  });                        
  var monoidArray = new Monoid(function () {
      return Data_Semigroup.semigroupArray;
  }, [  ]);
  var memptyRecord = function (dict) {
      return dict.memptyRecord;
  };
  var monoidRecord = function (dictRowToList) {
      return function (dictMonoidRecord) {
          return new Monoid(function () {
              return Data_Semigroup.semigroupRecord(dictRowToList)(dictMonoidRecord.SemigroupRecord0());
          }, memptyRecord(dictMonoidRecord)(Type_Data_RowList.RLProxy.value));
      };
  };
  var mempty = function (dict) {
      return dict.mempty;
  };
  var monoidFn = function (dictMonoid) {
      return new Monoid(function () {
          return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());
      }, function (v) {
          return mempty(dictMonoid);
      });
  };
  var monoidRecordCons = function (dictIsSymbol) {
      return function (dictMonoid) {
          return function (dictCons) {
              return function (dictMonoidRecord) {
                  return new MonoidRecord(function () {
                      return Data_Semigroup.semigroupRecordCons(dictIsSymbol)(dictCons)(dictMonoidRecord.SemigroupRecord0())(dictMonoid.Semigroup0());
                  }, function (v) {
                      var tail = memptyRecord(dictMonoidRecord)(Type_Data_RowList.RLProxy.value);
                      var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                      var insert = Record_Unsafe.unsafeSet(key);
                      return insert(mempty(dictMonoid))(tail);
                  });
              };
          };
      };
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["MonoidRecord"] = MonoidRecord;
  exports["memptyRecord"] = memptyRecord;
  exports["monoidUnit"] = monoidUnit;
  exports["monoidFn"] = monoidFn;
  exports["monoidString"] = monoidString;
  exports["monoidArray"] = monoidArray;
  exports["monoidRecord"] = monoidRecord;
  exports["monoidRecordNil"] = monoidRecordNil;
  exports["monoidRecordCons"] = monoidRecordCons;
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var semigroupMaybe = function (dictSemigroup) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              if (v instanceof Nothing) {
                  return v1;
              };
              if (v1 instanceof Nothing) {
                  return v;
              };
              if (v instanceof Just && v1 instanceof Just) {
                  return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
              };
              throw new Error("Failed pattern match at Data.Maybe line 174, column 1 - line 174, column 62: " + [ v.constructor.name, v1.constructor.name ]);
          };
      });
  };
  var monoidMaybe = function (dictSemigroup) {
      return new Data_Monoid.Monoid(function () {
          return semigroupMaybe(dictSemigroup);
      }, Nothing.value);
  };
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 217, column 1 - line 217, column 51: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          var $__unused = function (dictPartial1) {
              return function ($dollar35) {
                  return $dollar35;
              };
          };
          return $__unused(dictPartial)((function () {
              if (v instanceof Just) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Data.Maybe line 268, column 1 - line 268, column 46: " + [ v.constructor.name ]);
          })());
      };
  }; 
  var eqMaybe = function (dictEq) {
      return new Data_Eq.Eq(function (x) {
          return function (y) {
              if (x instanceof Nothing && y instanceof Nothing) {
                  return true;
              };
              if (x instanceof Just && y instanceof Just) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0);
              };
              return false;
          };
      });
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 67, column 1 - line 67, column 35: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 125, column 1 - line 125, column 33: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeMaybe = new Control_Applicative.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  var monadMaybe = new Control_Monad.Monad(function () {
      return applicativeMaybe;
  }, function () {
      return bindMaybe;
  });
  var altMaybe = new Control_Alt.Alt(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nothing) {
              return v1;
          };
          return v;
      };
  });
  var plusMaybe = new Control_Plus.Plus(function () {
      return altMaybe;
  }, Nothing.value);
  var alternativeMaybe = new Control_Alternative.Alternative(function () {
      return applicativeMaybe;
  }, function () {
      return plusMaybe;
  });
  var monadZeroMaybe = new Control_MonadZero.MonadZero(function () {
      return alternativeMaybe;
  }, function () {
      return monadMaybe;
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["fromMaybe"] = fromMaybe;
  exports["isJust"] = isJust;
  exports["isNothing"] = isNothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["altMaybe"] = altMaybe;
  exports["plusMaybe"] = plusMaybe;
  exports["alternativeMaybe"] = alternativeMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["monadMaybe"] = monadMaybe;
  exports["monadZeroMaybe"] = monadZeroMaybe;
  exports["semigroupMaybe"] = semigroupMaybe;
  exports["monoidMaybe"] = monoidMaybe;
  exports["eqMaybe"] = eqMaybe;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];                 
  var Conj = function (x) {
      return x;
  };
  var semigroupConj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var monoidConj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupConj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
  };
  exports["Conj"] = Conj;
  exports["semigroupConj"] = semigroupConj;
  exports["monoidConj"] = monoidConj;
})(PS["Data.Monoid.Conj"] = PS["Data.Monoid.Conj"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];                 
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var monoidDisj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
  };
  exports["Disj"] = Disj;
  exports["semigroupDisj"] = semigroupDisj;
  exports["monoidDisj"] = monoidDisj;
})(PS["Data.Monoid.Disj"] = PS["Data.Monoid.Disj"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Semigroup_First = PS["Data.Semigroup.First"];
  var Data_Semigroup_Last = PS["Data.Semigroup.Last"];
  var Prelude = PS["Prelude"];                 
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };
  var under = function (dictNewtype) {
      return function (dictNewtype1) {
          return function (v) {
              return function (f) {
                  return function ($71) {
                      return unwrap(dictNewtype1)(f(wrap(dictNewtype)($71)));
                  };
              };
          };
      };
  };
  var un = function (dictNewtype) {
      return function (v) {
          return unwrap(dictNewtype);
      };
  };
  var over = function (dictNewtype) {
      return function (dictNewtype1) {
          return function (v) {
              return function (f) {
                  return function ($78) {
                      return wrap(dictNewtype1)(f(unwrap(dictNewtype)($78)));
                  };
              };
          };
      };
  };                        
  var newtypeDisj = new Newtype(function (v) {
      return v;
  }, Data_Monoid_Disj.Disj);
  var newtypeConj = new Newtype(function (v) {
      return v;
  }, Data_Monoid_Conj.Conj);
  var alaF = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (v) {
                      return function (f) {
                          return function ($80) {
                              return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($80)));
                          };
                      };
                  };
              };
          };
      };
  };
  var ala = function (dictFunctor) {
      return function (dictNewtype) {
          return function (dictNewtype1) {
              return function (v) {
                  return function (f) {
                      return Data_Functor.map(dictFunctor)(unwrap(dictNewtype))(f(wrap(dictNewtype1)));
                  };
              };
          };
      };
  };
  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
  exports["Newtype"] = Newtype;
  exports["un"] = un;
  exports["ala"] = ala;
  exports["alaF"] = alaF;
  exports["over"] = over;
  exports["under"] = under;
  exports["newtypeConj"] = newtypeConj;
  exports["newtypeDisj"] = newtypeDisj;
})(PS["Data.Newtype"] = PS["Data.Newtype"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];                 
  var First = function (x) {
      return x;
  };
  var semigroupFirst = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          if (v instanceof Data_Maybe.Just) {
              return v;
          };
          return v1;
      };
  });                                  
  var newtypeFirst = new Data_Newtype.Newtype(function (n) {
      return n;
  }, First);
  var monoidFirst = new Data_Monoid.Monoid(function () {
      return semigroupFirst;
  }, Data_Maybe.Nothing.value);
  exports["First"] = First;
  exports["newtypeFirst"] = newtypeFirst;
  exports["semigroupFirst"] = semigroupFirst;
  exports["monoidFirst"] = monoidFirst;
})(PS["Data.Maybe.First"] = PS["Data.Maybe.First"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var oneOf = function (dictFoldable) {
      return function (dictPlus) {
          return foldr(dictFoldable)(Control_Alt.alt(dictPlus.Alt0()))(Control_Plus.empty(dictPlus));
      };
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)(function ($195) {
                  return Control_Apply.applySecond(dictApplicative.Apply0())(f($195));
              })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var for_ = function (dictApplicative) {
      return function (dictFoldable) {
          return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false,
                                  acc: x
                              };
                          };
                          return {
                              init: false,
                              acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true,
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  }; 
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var fold = function (dictFoldable) {
      return function (dictMonoid) {
          return foldMap(dictFoldable)(dictMonoid)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var any = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeDisj)(Data_Newtype.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
      };
  };
  var elem = function (dictFoldable) {
      return function (dictEq) {
          return function ($199) {
              return any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Eq.eq(dictEq)($199));
          };
      };
  };
  var all = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeConj)(Data_Newtype.newtypeConj)(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));
      };
  };
  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["fold"] = fold;
  exports["traverse_"] = traverse_;
  exports["for_"] = for_;
  exports["oneOf"] = oneOf;
  exports["intercalate"] = intercalate;
  exports["all"] = all;
  exports["any"] = any;
  exports["elem"] = elem;
  exports["foldableArray"] = foldableArray;
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
    "use strict";

  exports.mapWithIndexArray = function (f) {
    return function (xs) {
      var l = xs.length;
      var result = Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(i)(xs[i]);
      }
      return result;
    };
  };
})(PS["Data.FunctorWithIndex"] = PS["Data.FunctorWithIndex"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.FunctorWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var FunctorWithIndex = function (Functor0, mapWithIndex) {
      this.Functor0 = Functor0;
      this.mapWithIndex = mapWithIndex;
  };
  var mapWithIndex = function (dict) {
      return dict.mapWithIndex;
  }; 
  var functorWithIndexArray = new FunctorWithIndex(function () {
      return Data_Functor.functorArray;
  }, $foreign.mapWithIndexArray);
  exports["FunctorWithIndex"] = FunctorWithIndex;
  exports["mapWithIndex"] = mapWithIndex;
  exports["functorWithIndexArray"] = functorWithIndexArray;
})(PS["Data.FunctorWithIndex"] = PS["Data.FunctorWithIndex"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Category = PS["Control.Category"];                 
  var Bifunctor = function (bimap) {
      this.bimap = bimap;
  };
  var bimap = function (dict) {
      return dict.bimap;
  };
  var lmap = function (dictBifunctor) {
      return function (f) {
          return bimap(dictBifunctor)(f)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["bimap"] = bimap;
  exports["Bifunctor"] = Bifunctor;
  exports["lmap"] = lmap;
})(PS["Data.Bifunctor"] = PS["Data.Bifunctor"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var FoldableWithIndex = function (Foldable0, foldMapWithIndex, foldlWithIndex, foldrWithIndex) {
      this.Foldable0 = Foldable0;
      this.foldMapWithIndex = foldMapWithIndex;
      this.foldlWithIndex = foldlWithIndex;
      this.foldrWithIndex = foldrWithIndex;
  };
  var foldrWithIndex = function (dict) {
      return dict.foldrWithIndex;
  };
  var foldlWithIndex = function (dict) {
      return dict.foldlWithIndex;
  };
  var foldMapWithIndexDefaultR = function (dictFoldableWithIndex) {
      return function (dictMonoid) {
          return function (f) {
              return foldrWithIndex(dictFoldableWithIndex)(function (i) {
                  return function (x) {
                      return function (acc) {
                          return Data_Semigroup.append(dictMonoid.Semigroup0())(f(i)(x))(acc);
                      };
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableWithIndexArray = new FoldableWithIndex(function () {
      return Data_Foldable.foldableArray;
  }, function (dictMonoid) {
      return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
  }, function (f) {
      return function (z) {
          return function ($47) {
              return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (y) {
                  return function (v) {
                      return f(v.value0)(y)(v.value1);
                  };
              })(z)(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create)($47));
          };
      };
  }, function (f) {
      return function (z) {
          return function ($48) {
              return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (v) {
                  return function (y) {
                      return f(v.value0)(v.value1)(y);
                  };
              })(z)(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create)($48));
          };
      };
  });
  var foldMapWithIndex = function (dict) {
      return dict.foldMapWithIndex;
  };
  exports["FoldableWithIndex"] = FoldableWithIndex;
  exports["foldrWithIndex"] = foldrWithIndex;
  exports["foldlWithIndex"] = foldlWithIndex;
  exports["foldMapWithIndex"] = foldMapWithIndex;
  exports["foldMapWithIndexDefaultR"] = foldMapWithIndexDefaultR;
  exports["foldableWithIndexArray"] = foldableWithIndexArray;
})(PS["Data.FoldableWithIndex"] = PS["Data.FoldableWithIndex"] || {});
(function(exports) {
    "use strict";

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function array1(a) {
      return [a];
    }

    function array2(a) {
      return function (b) {
        return [a, b];
      };
    }

    function array3(a) {
      return function (b) {
        return function (c) {
          return [a, b, c];
        };
      };
    }

    function concat2(xs) {
      return function (ys) {
        return xs.concat(ys);
      };
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            return function (array) {
              function go(bot, top) {
                switch (top - bot) {
                case 0: return pure([]);
                case 1: return map(array1)(f(array[bot]));
                case 2: return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));
                case 3: return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                default:
                  // This slightly tricky pivot selection aims to produce two
                  // even-length partitions where possible.
                  var pivot = bot + Math.floor((top - bot) / 4) * 2;
                  return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                }
              }
              return go(0, array.length);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Traversable_Accum = PS["Data.Traversable.Accum"];
  var Data_Traversable_Accum_Internal = PS["Data.Traversable.Accum.Internal"];
  var Prelude = PS["Prelude"];                 
  var Traversable = function (Foldable1, Functor0, sequence, traverse) {
      this.Foldable1 = Foldable1;
      this.Functor0 = Functor0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Data_Functor.functorArray;
  }, function (dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
      return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  var $$for = function (dictApplicative) {
      return function (dictTraversable) {
          return function (x) {
              return function (f) {
                  return traverse(dictTraversable)(dictApplicative)(f)(x);
              };
          };
      };
  };
  exports["Traversable"] = Traversable;
  exports["traverse"] = traverse;
  exports["sequence"] = sequence;
  exports["sequenceDefault"] = sequenceDefault;
  exports["for"] = $$for;
  exports["traversableArray"] = traversableArray;
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Traversable_Accum = PS["Data.Traversable.Accum"];
  var Data_Traversable_Accum_Internal = PS["Data.Traversable.Accum.Internal"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var TraversableWithIndex = function (FoldableWithIndex1, FunctorWithIndex0, Traversable2, traverseWithIndex) {
      this.FoldableWithIndex1 = FoldableWithIndex1;
      this.FunctorWithIndex0 = FunctorWithIndex0;
      this.Traversable2 = Traversable2;
      this.traverseWithIndex = traverseWithIndex;
  };
  var traverseWithIndexDefault = function (dictTraversableWithIndex) {
      return function (dictApplicative) {
          return function (f) {
              return function ($19) {
                  return Data_Traversable.sequence(dictTraversableWithIndex.Traversable2())(dictApplicative)(Data_FunctorWithIndex.mapWithIndex(dictTraversableWithIndex.FunctorWithIndex0())(f)($19));
              };
          };
      };
  };
  var traverseWithIndex = function (dict) {
      return dict.traverseWithIndex;
  }; 
  var traversableWithIndexArray = new TraversableWithIndex(function () {
      return Data_FoldableWithIndex.foldableWithIndexArray;
  }, function () {
      return Data_FunctorWithIndex.functorWithIndexArray;
  }, function () {
      return Data_Traversable.traversableArray;
  }, function (dictApplicative) {
      return traverseWithIndexDefault(traversableWithIndexArray)(dictApplicative);
  });
  exports["TraversableWithIndex"] = TraversableWithIndex;
  exports["traverseWithIndex"] = traverseWithIndex;
  exports["traverseWithIndexDefault"] = traverseWithIndexDefault;
  exports["traversableWithIndexArray"] = traversableWithIndexArray;
})(PS["Data.TraversableWithIndex"] = PS["Data.TraversableWithIndex"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof Left) {
              return new Left(m.value0);
          };
          if (m instanceof Right) {
              return new Right(f(m.value0));
          };
          throw new Error("Failed pattern match at Data.Either line 38, column 8 - line 38, column 52: " + [ m.constructor.name ]);
      };
  });
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 238, column 1 - line 238, column 64: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return new Left(v(v2.value0));
              };
              if (v2 instanceof Right) {
                  return new Right(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Data.Either line 46, column 1 - line 46, column 45: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  var applyEither = new Control_Apply.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Data_Functor.map(functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either line 82, column 1 - line 82, column 41: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindEither = new Control_Bind.Bind(function () {
      return applyEither;
  }, either(function (e) {
      return function (v) {
          return new Left(e);
      };
  })(function (a) {
      return function (f) {
          return f(a);
      };
  }));
  var applicativeEither = new Control_Applicative.Applicative(function () {
      return applyEither;
  }, Right.create);
  var monadEither = new Control_Monad.Monad(function () {
      return applicativeEither;
  }, function () {
      return bindEither;
  });
  var altEither = new Control_Alt.Alt(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return v1;
          };
          return v;
      };
  });
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;
  exports["altEither"] = altEither;
  exports["bindEither"] = bindEither;
  exports["monadEither"] = monadEither;
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];                 
  var Min = function (x) {
      return x;
  };
  var semigroupMin = function (dictOrd) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_Ord.min(dictOrd)(v)(v1);
          };
      });
  };
  var newtypeMin = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Min);
  exports["Min"] = Min;
  exports["newtypeMin"] = newtypeMin;
  exports["semigroupMin"] = semigroupMin;
})(PS["Data.Ord.Min"] = PS["Data.Ord.Min"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord_Max = PS["Data.Ord.Max"];
  var Data_Ord_Min = PS["Data.Ord.Min"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Foldable1 = function (Foldable0, fold1, foldMap1) {
      this.Foldable0 = Foldable0;
      this.fold1 = fold1;
      this.foldMap1 = foldMap1;
  };
  var foldMap1 = function (dict) {
      return dict.foldMap1;
  };
  var minimum = function (dictOrd) {
      return function (dictFoldable1) {
          return Data_Newtype.ala(Data_Functor.functorFn)(Data_Ord_Min.newtypeMin)(Data_Ord_Min.newtypeMin)(Data_Ord_Min.Min)(foldMap1(dictFoldable1)(Data_Ord_Min.semigroupMin(dictOrd)));
      };
  }; 
  var fold1 = function (dict) {
      return dict.fold1;
  };
  exports["Foldable1"] = Foldable1;
  exports["foldMap1"] = foldMap1;
  exports["fold1"] = fold1;
  exports["minimum"] = minimum;
})(PS["Data.Semigroup.Foldable"] = PS["Data.Semigroup.Foldable"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var Identity = function (x) {
      return x;
  };
  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (m) {
          return f(m);
      };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
      return applyIdentity;
  }, function (v) {
      return function (f) {
          return f(v);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS["Data.Identity"] = PS["Data.Identity"] || {});
(function(exports) {
    "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Effect"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Prelude = PS["Prelude"];                 
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  var semigroupEffect = function (dictSemigroup) {
      return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyEffect)(Data_Semigroup.append(dictSemigroup)));
  };
  var monoidEffect = function (dictMonoid) {
      return new Data_Monoid.Monoid(function () {
          return semigroupEffect(dictMonoid.Semigroup0());
      }, $foreign.pureE(Data_Monoid.mempty(dictMonoid)));
  };
  exports["functorEffect"] = functorEffect;
  exports["applyEffect"] = applyEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
  exports["monadEffect"] = monadEffect;
  exports["semigroupEffect"] = semigroupEffect;
  exports["monoidEffect"] = monoidEffect;
})(PS["Effect"] = PS["Effect"] || {});
(function(exports) {
    "use strict";

  // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
    "use strict";

  // module Partial

  exports.crashWith = function () {
    return function (msg) {
      throw new Error(msg);
    };
  };
})(PS["Partial"] = PS["Partial"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Partial"];
  exports["crashWith"] = $foreign.crashWith;
})(PS["Partial"] = PS["Partial"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Partial.Unsafe"];
  var Partial = PS["Partial"];                 
  var unsafePartialBecause = function (v) {
      return function (x) {
          return $foreign.unsafePartial(function (dictPartial) {
              return x(dictPartial);
          });
      };
  };
  var unsafeCrashWith = function (msg) {
      return $foreign.unsafePartial(function (dictPartial) {
          return Partial.crashWith(dictPartial)(msg);
      });
  };
  exports["unsafePartialBecause"] = unsafePartialBecause;
  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Ref = PS["Effect.Ref"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var Loop = (function () {
      function Loop(value0) {
          this.value0 = value0;
      };
      Loop.create = function (value0) {
          return new Loop(value0);
      };
      return Loop;
  })();
  var Done = (function () {
      function Done(value0) {
          this.value0 = value0;
      };
      Done.create = function (value0) {
          return new Done(value0);
      };
      return Done;
  })();
  var MonadRec = function (Monad0, tailRecM) {
      this.Monad0 = Monad0;
      this.tailRecM = tailRecM;
  };
  var tailRecM = function (dict) {
      return dict.tailRecM;
  };
  var tailRec = function (f) {
      var go = function ($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v) {
              if (v instanceof Loop) {
                  $copy_v = f(v.value0);
                  return;
              };
              if (v instanceof Done) {
                  $tco_done = true;
                  return v.value0;
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class line 91, column 3 - line 91, column 25: " + [ v.constructor.name ]);
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($copy_v);
          };
          return $tco_result;
      };
      return function ($53) {
          return go(f($53));
      };
  }; 
  var monadRecEither = new MonadRec(function () {
      return Data_Either.monadEither;
  }, function (f) {
      return function (a0) {
          var g = function (v) {
              if (v instanceof Data_Either.Left) {
                  return new Done(new Data_Either.Left(v.value0));
              };
              if (v instanceof Data_Either.Right && v.value0 instanceof Loop) {
                  return new Loop(f(v.value0.value0));
              };
              if (v instanceof Data_Either.Right && v.value0 instanceof Done) {
                  return new Done(new Data_Either.Right(v.value0.value0));
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class line 119, column 7 - line 119, column 33: " + [ v.constructor.name ]);
          };
          return tailRec(g)(f(a0));
      };
  });
  var bifunctorStep = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Loop) {
                  return new Loop(v(v2.value0));
              };
              if (v2 instanceof Done) {
                  return new Done(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class line 27, column 1 - line 27, column 41: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  exports["Loop"] = Loop;
  exports["Done"] = Done;
  exports["MonadRec"] = MonadRec;
  exports["tailRec"] = tailRec;
  exports["tailRecM"] = tailRecM;
  exports["bifunctorStep"] = bifunctorStep;
  exports["monadRecEither"] = monadRecEither;
})(PS["Control.Monad.Rec.Class"] = PS["Control.Monad.Rec.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor = PS["Data.Functor"];                 
  var MonadPlus = function (MonadZero0) {
      this.MonadZero0 = MonadZero0;
  };
  exports["MonadPlus"] = MonadPlus;
})(PS["Control.MonadPlus"] = PS["Control.MonadPlus"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Distributive = PS["Data.Distributive"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Type_Equality = PS["Type.Equality"];                 
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var uncurry = function (f) {
      return function (v) {
          return f(v.value0)(v.value1);
      };
  };
  var snd = function (v) {
      return v.value1;
  }; 
  var semigroupTuple = function (dictSemigroup) {
      return function (dictSemigroup1) {
          return new Data_Semigroup.Semigroup(function (v) {
              return function (v1) {
                  return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), Data_Semigroup.append(dictSemigroup1)(v.value1)(v1.value1));
              };
          });
      };
  };
  var monoidTuple = function (dictMonoid) {
      return function (dictMonoid1) {
          return new Data_Monoid.Monoid(function () {
              return semigroupTuple(dictMonoid.Semigroup0())(dictMonoid1.Semigroup0());
          }, new Tuple(Data_Monoid.mempty(dictMonoid), Data_Monoid.mempty(dictMonoid1)));
      };
  };
  var lookup = function (dictFoldable) {
      return function (dictEq) {
          return function (a) {
              return function ($312) {
                  return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(Data_Foldable.foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
                      var $163 = Data_Eq.eq(dictEq)(a)(v.value0);
                      if ($163) {
                          return new Data_Maybe.Just(v.value1);
                      };
                      return Data_Maybe.Nothing.value;
                  })($312));
              };
          };
      };
  };                                                                                                    
  var fst = function (v) {
      return v.value0;
  };
  var curry = function (f) {
      return function (a) {
          return function (b) {
              return f(new Tuple(a, b));
          };
      };
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["curry"] = curry;
  exports["uncurry"] = uncurry;
  exports["lookup"] = lookup;
  exports["semigroupTuple"] = semigroupTuple;
  exports["monoidTuple"] = monoidTuple;
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
    "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
    "use strict";

  exports.unfoldr1ArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var tuple = f(value);
                result.push(fst(tuple));
                var maybe = snd(tuple);
                if (isNothing(maybe)) return result;
                value = fromJust(maybe);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Unfoldable1"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Tuple = PS["Data.Tuple"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var Unfoldable1 = function (unfoldr1) {
      this.unfoldr1 = unfoldr1;
  };
  var unfoldr1 = function (dict) {
      return dict.unfoldr1;
  };
  var unfoldable1Array = new Unfoldable1($foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable1"] = Unfoldable1;
  exports["unfoldr1"] = unfoldr1;
  exports["unfoldable1Array"] = unfoldable1Array;
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Unfoldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var Unfoldable = function (Unfoldable10, unfoldr) {
      this.Unfoldable10 = Unfoldable10;
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  };
  var unfoldableArray = new Unfoldable(function () {
      return Data_Unfoldable1.unfoldable1Array;
  }, $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable"] = Unfoldable;
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Prelude = PS["Prelude"];                 
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var singleton = function (dictPlus) {
      return function (a) {
          return new NonEmpty(a, Control_Plus.empty(dictPlus));
      };
  };
  var showNonEmpty = function (dictShow) {
      return function (dictShow1) {
          return new Data_Show.Show(function (v) {
              return "(NonEmpty " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
          });
      };
  };
  var functorNonEmpty = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (m) {
              return new NonEmpty(f(m.value0), Data_Functor.map(dictFunctor)(f)(m.value1));
          };
      });
  };
  var foldableNonEmpty = function (dictFoldable) {
      return new Data_Foldable.Foldable(function (dictMonoid) {
          return function (f) {
              return function (v) {
                  return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
              };
          };
      }, function (f) {
          return function (b) {
              return function (v) {
                  return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
              };
          };
      }, function (f) {
          return function (b) {
              return function (v) {
                  return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
              };
          };
      });
  };
  var foldable1NonEmpty = function (dictFoldable) {
      return new Data_Semigroup_Foldable.Foldable1(function () {
          return foldableNonEmpty(dictFoldable);
      }, function (dictSemigroup) {
          return Data_Semigroup_Foldable.foldMap1(foldable1NonEmpty(dictFoldable))(dictSemigroup)(Control_Category.identity(Control_Category.categoryFn));
      }, function (dictSemigroup) {
          return function (f) {
              return function (v) {
                  return Data_Foldable.foldl(dictFoldable)(function (s) {
                      return function (a1) {
                          return Data_Semigroup.append(dictSemigroup)(s)(f(a1));
                      };
                  })(f(v.value0))(v.value1);
              };
          };
      });
  };
  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
  exports["showNonEmpty"] = showNonEmpty;
  exports["functorNonEmpty"] = functorNonEmpty;
  exports["foldableNonEmpty"] = foldableNonEmpty;
  exports["foldable1NonEmpty"] = foldable1NonEmpty;
})(PS["Data.NonEmpty"] = PS["Data.NonEmpty"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Prelude = PS["Prelude"];                 
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var NonEmptyList = function (x) {
      return x;
  };
  var toList = function (v) {
      return new Cons(v.value0, v.value1);
  };
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              return function ($174) {
                  return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f($174));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function ($copy_b) {
          return function ($copy_v) {
              var $tco_var_b = $copy_b;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(b, v) {
                  if (v instanceof Nil) {
                      $tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      $tco_var_b = f(b)(v.value0);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Types line 81, column 12 - line 83, column 30: " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_b, $copy_v);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
          return function ($175) {
              return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev($175));
          };
      };
  });
  var foldableNonEmptyList = Data_NonEmpty.foldableNonEmpty(foldableList);
  var functorList = new Data_Functor.Functor(function (f) {
      return Data_Foldable.foldr(foldableList)(function (x) {
          return function (acc) {
              return new Cons(f(x), acc);
          };
      })(Nil.value);
  });
  var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
      return function (ys) {
          return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
      };
  });
  var monoidList = new Data_Monoid.Monoid(function () {
      return semigroupList;
  }, Nil.value);
  var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function (v) {
      return function (as$prime) {
          return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime)));
      };
  });
  var showList = function (dictShow) {
      return new Data_Show.Show(function (v) {
          if (v instanceof Nil) {
              return "Nil";
          };
          return "(" + (Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(" : ")(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) + " : Nil)");
      });
  };
  var showNonEmptyList = function (dictShow) {
      return new Data_Show.Show(function (v) {
          return "(NonEmptyList " + (Data_Show.show(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow)))(v) + ")");
      });
  }; 
  var unfoldable1List = new Data_Unfoldable1.Unfoldable1(function (f) {
      return function (b) {
          var go = function ($copy_source) {
              return function ($copy_memo) {
                  var $tco_var_source = $copy_source;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(source, memo) {
                      var v = f(source);
                      if (v.value1 instanceof Data_Maybe.Just) {
                          $tco_var_source = v.value1.value0;
                          $copy_memo = new Cons(v.value0, memo);
                          return;
                      };
                      if (v.value1 instanceof Data_Maybe.Nothing) {
                          $tco_done = true;
                          return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(new Cons(v.value0, memo));
                      };
                      throw new Error("Failed pattern match at Data.List.Types line 105, column 22 - line 107, column 61: " + [ v.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_source, $copy_memo);
                  };
                  return $tco_result;
              };
          };
          return go(b)(Nil.value);
      };
  });
  var unfoldableList = new Data_Unfoldable.Unfoldable(function () {
      return unfoldable1List;
  }, function (f) {
      return function (b) {
          var go = function ($copy_source) {
              return function ($copy_memo) {
                  var $tco_var_source = $copy_source;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(source, memo) {
                      var v = f(source);
                      if (v instanceof Data_Maybe.Nothing) {
                          $tco_done = true;
                          return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
                      };
                      if (v instanceof Data_Maybe.Just) {
                          $tco_var_source = v.value0.value1;
                          $copy_memo = new Cons(v.value0.value0, memo);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.List.Types line 112, column 22 - line 114, column 52: " + [ v.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_source, $copy_memo);
                  };
                  return $tco_result;
              };
          };
          return go(b)(Nil.value);
      };
  });
  var applyList = new Control_Apply.Apply(function () {
      return functorList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types line 127, column 1 - line 127, column 33: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applyNonEmptyList = new Control_Apply.Apply(function () {
      return functorNonEmptyList;
  }, function (v) {
      return function (v1) {
          return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
      };
  });
  var applicativeList = new Control_Applicative.Applicative(function () {
      return applyList;
  }, function (a) {
      return new Cons(a, Nil.value);
  });                                              
  var altList = new Control_Alt.Alt(function () {
      return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
      return altList;
  }, Nil.value);
  var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
      return applyNonEmptyList;
  }, function ($188) {
      return NonEmptyList(Data_NonEmpty.singleton(plusList)($188));
  });
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["NonEmptyList"] = NonEmptyList;
  exports["toList"] = toList;
  exports["showList"] = showList;
  exports["semigroupList"] = semigroupList;
  exports["monoidList"] = monoidList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["unfoldable1List"] = unfoldable1List;
  exports["unfoldableList"] = unfoldableList;
  exports["applyList"] = applyList;
  exports["applicativeList"] = applicativeList;
  exports["altList"] = altList;
  exports["plusList"] = plusList;
  exports["showNonEmptyList"] = showNonEmptyList;
  exports["functorNonEmptyList"] = functorNonEmptyList;
  exports["applyNonEmptyList"] = applyNonEmptyList;
  exports["applicativeNonEmptyList"] = applicativeNonEmptyList;
  exports["semigroupNonEmptyList"] = semigroupNonEmptyList;
  exports["foldableNonEmptyList"] = foldableNonEmptyList;
})(PS["Data.List.Types"] = PS["Data.List.Types"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                                                   
  var uncons = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just({
              head: v.value0,
              tail: v.value1
          });
      };
      throw new Error("Failed pattern match at Data.List line 259, column 1 - line 259, column 66: " + [ v.constructor.name ]);
  };
  var toUnfoldable = function (dictUnfoldable) {
      return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
              return new Data_Tuple.Tuple(rec.head, rec.tail);
          })(uncons(xs));
      });
  };
  var tail = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value1);
      };
      throw new Error("Failed pattern match at Data.List line 245, column 1 - line 245, column 43: " + [ v.constructor.name ]);
  };
  var span = function (v) {
      return function (v1) {
          if (v1 instanceof Data_List_Types.Cons && v(v1.value0)) {
              var v2 = span(v)(v1.value1);
              return {
                  init: new Data_List_Types.Cons(v1.value0, v2.init),
                  rest: v2.rest
              };
          };
          return {
              init: Data_List_Types.Nil.value,
              rest: v1
          };
      };
  };
  var singleton = function (a) {
      return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
  };
  var reverse = (function () {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return acc;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List line 368, column 3 - line 368, column 19: " + [ acc.constructor.name, v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
              };
              return $tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var unsnoc = function (lst) {
      var go = function ($copy_v) {
          return function ($copy_acc) {
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v, acc) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return new Data_Maybe.Just({
                          revInit: acc,
                          last: v.value0
                      });
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      $tco_var_v = v.value1;
                      $copy_acc = new Data_List_Types.Cons(v.value0, acc);
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List line 270, column 3 - line 270, column 23: " + [ v.constructor.name, acc.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_v, $copy_acc);
              };
              return $tco_result;
          };
      };
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (h) {
          return {
              init: reverse(h.revInit),
              last: h.last
          };
      })(go(lst)(Data_List_Types.Nil.value));
  };
  var $$null = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };
  var manyRec = function (dictMonadRec) {
      return function (dictAlternative) {
          return function (p) {
              var go = function (acc) {
                  return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(Control_Alt.alt((dictAlternative.Plus1()).Alt0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Control_Monad_Rec_Class.Loop.create)(p))(Control_Applicative.pure(dictAlternative.Applicative0())(new Control_Monad_Rec_Class.Done(Data_Unit.unit))))(function (v) {
                      return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep)(function (v1) {
                          return new Data_List_Types.Cons(v1, acc);
                      })(function (v1) {
                          return reverse(acc);
                      })(v));
                  });
              };
              return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go)(Data_List_Types.Nil.value);
          };
      };
  };    
  var last = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return new Data_Maybe.Just(v.value0);
          };
          if (v instanceof Data_List_Types.Cons) {
              $copy_v = v.value1;
              return;
          };
          $tco_done = true;
          return Data_Maybe.Nothing.value;
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var init = function (lst) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return v.init;
      })(unsnoc(lst));
  };
  var head = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value0);
      };
      throw new Error("Failed pattern match at Data.List line 230, column 1 - line 230, column 22: " + [ v.constructor.name ]);
  };
  var fromFoldable = function (dictFoldable) {
      return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
  };
  exports["toUnfoldable"] = toUnfoldable;
  exports["fromFoldable"] = fromFoldable;
  exports["singleton"] = singleton;
  exports["manyRec"] = manyRec;
  exports["null"] = $$null;
  exports["head"] = head;
  exports["last"] = last;
  exports["tail"] = tail;
  exports["init"] = init;
  exports["uncons"] = uncons;
  exports["unsnoc"] = unsnoc;
  exports["reverse"] = reverse;
  exports["span"] = span;
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var wrappedOperation = function (name) {
      return function (f) {
          return function (v) {
              var v1 = f(new Data_List_Types.Cons(v.value0, v.value1));
              if (v1 instanceof Data_List_Types.Cons) {
                  return new Data_NonEmpty.NonEmpty(v1.value0, v1.value1);
              };
              if (v1 instanceof Data_List_Types.Nil) {
                  return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
              };
              throw new Error("Failed pattern match at Data.List.NonEmpty line 91, column 3 - line 93, column 81: " + [ v1.constructor.name ]);
          };
      };
  };
  var toList = function (v) {
      return new Data_List_Types.Cons(v.value0, v.value1);
  };
  var singleton = function ($165) {
      return Data_List_Types.NonEmptyList(Data_NonEmpty.singleton(Data_List_Types.plusList)($165));
  };
  var reverse = wrappedOperation("reverse")(Data_List.reverse);
  var cons = function (y) {
      return function (v) {
          return new Data_NonEmpty.NonEmpty(y, new Data_List_Types.Cons(v.value0, v.value1));
      };
  };
  exports["toList"] = toList;
  exports["singleton"] = singleton;
  exports["cons"] = cons;
  exports["reverse"] = reverse;
})(PS["Data.List.NonEmpty"] = PS["Data.List.NonEmpty"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];                 
  var Bold = (function () {
      function Bold() {

      };
      Bold.value = new Bold();
      return Bold;
  })();
  var Dim = (function () {
      function Dim() {

      };
      Dim.value = new Dim();
      return Dim;
  })();
  var Italic = (function () {
      function Italic() {

      };
      Italic.value = new Italic();
      return Italic;
  })();
  var Underline = (function () {
      function Underline() {

      };
      Underline.value = new Underline();
      return Underline;
  })();
  var Inverse = (function () {
      function Inverse() {

      };
      Inverse.value = new Inverse();
      return Inverse;
  })();
  var Strikethrough = (function () {
      function Strikethrough() {

      };
      Strikethrough.value = new Strikethrough();
      return Strikethrough;
  })();
  var ToEnd = (function () {
      function ToEnd() {

      };
      ToEnd.value = new ToEnd();
      return ToEnd;
  })();
  var FromBeginning = (function () {
      function FromBeginning() {

      };
      FromBeginning.value = new FromBeginning();
      return FromBeginning;
  })();
  var Entire = (function () {
      function Entire() {

      };
      Entire.value = new Entire();
      return Entire;
  })();
  var Black = (function () {
      function Black() {

      };
      Black.value = new Black();
      return Black;
  })();
  var Red = (function () {
      function Red() {

      };
      Red.value = new Red();
      return Red;
  })();
  var Green = (function () {
      function Green() {

      };
      Green.value = new Green();
      return Green;
  })();
  var Yellow = (function () {
      function Yellow() {

      };
      Yellow.value = new Yellow();
      return Yellow;
  })();
  var Blue = (function () {
      function Blue() {

      };
      Blue.value = new Blue();
      return Blue;
  })();
  var Magenta = (function () {
      function Magenta() {

      };
      Magenta.value = new Magenta();
      return Magenta;
  })();
  var Cyan = (function () {
      function Cyan() {

      };
      Cyan.value = new Cyan();
      return Cyan;
  })();
  var White = (function () {
      function White() {

      };
      White.value = new White();
      return White;
  })();
  var BrightBlack = (function () {
      function BrightBlack() {

      };
      BrightBlack.value = new BrightBlack();
      return BrightBlack;
  })();
  var BrightRed = (function () {
      function BrightRed() {

      };
      BrightRed.value = new BrightRed();
      return BrightRed;
  })();
  var BrightGreen = (function () {
      function BrightGreen() {

      };
      BrightGreen.value = new BrightGreen();
      return BrightGreen;
  })();
  var BrightYellow = (function () {
      function BrightYellow() {

      };
      BrightYellow.value = new BrightYellow();
      return BrightYellow;
  })();
  var BrightBlue = (function () {
      function BrightBlue() {

      };
      BrightBlue.value = new BrightBlue();
      return BrightBlue;
  })();
  var BrightMagenta = (function () {
      function BrightMagenta() {

      };
      BrightMagenta.value = new BrightMagenta();
      return BrightMagenta;
  })();
  var BrightCyan = (function () {
      function BrightCyan() {

      };
      BrightCyan.value = new BrightCyan();
      return BrightCyan;
  })();
  var BrightWhite = (function () {
      function BrightWhite() {

      };
      BrightWhite.value = new BrightWhite();
      return BrightWhite;
  })();
  var Reset = (function () {
      function Reset() {

      };
      Reset.value = new Reset();
      return Reset;
  })();
  var PMode = (function () {
      function PMode(value0) {
          this.value0 = value0;
      };
      PMode.create = function (value0) {
          return new PMode(value0);
      };
      return PMode;
  })();
  var PForeground = (function () {
      function PForeground(value0) {
          this.value0 = value0;
      };
      PForeground.create = function (value0) {
          return new PForeground(value0);
      };
      return PForeground;
  })();
  var PBackground = (function () {
      function PBackground(value0) {
          this.value0 = value0;
      };
      PBackground.create = function (value0) {
          return new PBackground(value0);
      };
      return PBackground;
  })();
  var Up = (function () {
      function Up(value0) {
          this.value0 = value0;
      };
      Up.create = function (value0) {
          return new Up(value0);
      };
      return Up;
  })();
  var Down = (function () {
      function Down(value0) {
          this.value0 = value0;
      };
      Down.create = function (value0) {
          return new Down(value0);
      };
      return Down;
  })();
  var Forward = (function () {
      function Forward(value0) {
          this.value0 = value0;
      };
      Forward.create = function (value0) {
          return new Forward(value0);
      };
      return Forward;
  })();
  var Back = (function () {
      function Back(value0) {
          this.value0 = value0;
      };
      Back.create = function (value0) {
          return new Back(value0);
      };
      return Back;
  })();
  var NextLine = (function () {
      function NextLine(value0) {
          this.value0 = value0;
      };
      NextLine.create = function (value0) {
          return new NextLine(value0);
      };
      return NextLine;
  })();
  var PreviousLine = (function () {
      function PreviousLine(value0) {
          this.value0 = value0;
      };
      PreviousLine.create = function (value0) {
          return new PreviousLine(value0);
      };
      return PreviousLine;
  })();
  var HorizontalAbsolute = (function () {
      function HorizontalAbsolute(value0) {
          this.value0 = value0;
      };
      HorizontalAbsolute.create = function (value0) {
          return new HorizontalAbsolute(value0);
      };
      return HorizontalAbsolute;
  })();
  var Position = (function () {
      function Position(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Position.create = function (value0) {
          return function (value1) {
              return new Position(value0, value1);
          };
      };
      return Position;
  })();
  var EraseData = (function () {
      function EraseData(value0) {
          this.value0 = value0;
      };
      EraseData.create = function (value0) {
          return new EraseData(value0);
      };
      return EraseData;
  })();
  var EraseLine = (function () {
      function EraseLine(value0) {
          this.value0 = value0;
      };
      EraseLine.create = function (value0) {
          return new EraseLine(value0);
      };
      return EraseLine;
  })();
  var ScrollUp = (function () {
      function ScrollUp(value0) {
          this.value0 = value0;
      };
      ScrollUp.create = function (value0) {
          return new ScrollUp(value0);
      };
      return ScrollUp;
  })();
  var ScrollDown = (function () {
      function ScrollDown(value0) {
          this.value0 = value0;
      };
      ScrollDown.create = function (value0) {
          return new ScrollDown(value0);
      };
      return ScrollDown;
  })();
  var Graphics = (function () {
      function Graphics(value0) {
          this.value0 = value0;
      };
      Graphics.create = function (value0) {
          return new Graphics(value0);
      };
      return Graphics;
  })();
  var SavePosition = (function () {
      function SavePosition() {

      };
      SavePosition.value = new SavePosition();
      return SavePosition;
  })();
  var RestorePosition = (function () {
      function RestorePosition() {

      };
      RestorePosition.value = new RestorePosition();
      return RestorePosition;
  })();
  var QueryPosition = (function () {
      function QueryPosition() {

      };
      QueryPosition.value = new QueryPosition();
      return QueryPosition;
  })();
  var HideCursor = (function () {
      function HideCursor() {

      };
      HideCursor.value = new HideCursor();
      return HideCursor;
  })();
  var ShowCursor = (function () {
      function ShowCursor() {

      };
      ShowCursor.value = new ShowCursor();
      return ShowCursor;
  })();
  var prefix = "\x1b[";
  var eraseParamToString = function (ep) {
      if (ep instanceof ToEnd) {
          return "0";
      };
      if (ep instanceof FromBeginning) {
          return "1";
      };
      if (ep instanceof Entire) {
          return "2";
      };
      throw new Error("Failed pattern match at Ansi.Codes line 86, column 3 - line 91, column 1: " + [ ep.constructor.name ]);
  }; 
  var colorSuffix = "m";
  var colorCode = function (c) {
      if (c instanceof Black) {
          return 30;
      };
      if (c instanceof Red) {
          return 31;
      };
      if (c instanceof Green) {
          return 32;
      };
      if (c instanceof Yellow) {
          return 33;
      };
      if (c instanceof Blue) {
          return 34;
      };
      if (c instanceof Magenta) {
          return 35;
      };
      if (c instanceof Cyan) {
          return 36;
      };
      if (c instanceof White) {
          return 37;
      };
      if (c instanceof BrightBlack) {
          return 90;
      };
      if (c instanceof BrightRed) {
          return 91;
      };
      if (c instanceof BrightGreen) {
          return 92;
      };
      if (c instanceof BrightYellow) {
          return 93;
      };
      if (c instanceof BrightBlue) {
          return 94;
      };
      if (c instanceof BrightMagenta) {
          return 95;
      };
      if (c instanceof BrightCyan) {
          return 96;
      };
      if (c instanceof BrightWhite) {
          return 97;
      };
      throw new Error("Failed pattern match at Ansi.Codes line 155, column 3 - line 171, column 20: " + [ c.constructor.name ]);
  };
  var codeForRenderingMode = function (m) {
      if (m instanceof Bold) {
          return 1;
      };
      if (m instanceof Dim) {
          return 2;
      };
      if (m instanceof Italic) {
          return 3;
      };
      if (m instanceof Underline) {
          return 4;
      };
      if (m instanceof Inverse) {
          return 7;
      };
      if (m instanceof Strikethrough) {
          return 9;
      };
      throw new Error("Failed pattern match at Ansi.Codes line 123, column 3 - line 131, column 1: " + [ m.constructor.name ]);
  };
  var graphicsParamToString = function (gp) {
      if (gp instanceof Reset) {
          return "0";
      };
      if (gp instanceof PMode) {
          return Data_Show.show(Data_Show.showInt)(codeForRenderingMode(gp.value0));
      };
      if (gp instanceof PForeground) {
          return Data_Show.show(Data_Show.showInt)(colorCode(gp.value0));
      };
      if (gp instanceof PBackground) {
          return Data_Show.show(Data_Show.showInt)(colorCode(gp.value0) + 10 | 0);
      };
      throw new Error("Failed pattern match at Ansi.Codes line 104, column 3 - line 108, column 45: " + [ gp.constructor.name ]);
  };
  var escapeCodeToString = (function () {
      var go = function (c) {
          if (c instanceof Up) {
              return Data_Show.show(Data_Show.showInt)(c.value0) + "A";
          };
          if (c instanceof Down) {
              return Data_Show.show(Data_Show.showInt)(c.value0) + "B";
          };
          if (c instanceof Forward) {
              return Data_Show.show(Data_Show.showInt)(c.value0) + "C";
          };
          if (c instanceof Back) {
              return Data_Show.show(Data_Show.showInt)(c.value0) + "D";
          };
          if (c instanceof NextLine) {
              return Data_Show.show(Data_Show.showInt)(c.value0) + "E";
          };
          if (c instanceof PreviousLine) {
              return Data_Show.show(Data_Show.showInt)(c.value0) + "F";
          };
          if (c instanceof HorizontalAbsolute) {
              return Data_Show.show(Data_Show.showInt)(c.value0) + "G";
          };
          if (c instanceof Position) {
              return Data_Show.show(Data_Show.showInt)(c.value0) + (";" + (Data_Show.show(Data_Show.showInt)(c.value1) + "H"));
          };
          if (c instanceof EraseData) {
              return eraseParamToString(c.value0) + "J";
          };
          if (c instanceof EraseLine) {
              return eraseParamToString(c.value0) + "K";
          };
          if (c instanceof ScrollUp) {
              return Data_Show.show(Data_Show.showInt)(c.value0) + "S";
          };
          if (c instanceof ScrollDown) {
              return Data_Show.show(Data_Show.showInt)(c.value0) + "T";
          };
          if (c instanceof Graphics) {
              return Data_Foldable.intercalate(Data_List_Types.foldableNonEmptyList)(Data_Monoid.monoidString)(";")(Data_Functor.map(Data_List_Types.functorNonEmptyList)(graphicsParamToString)(c.value0)) + colorSuffix;
          };
          if (c instanceof SavePosition) {
              return "s";
          };
          if (c instanceof RestorePosition) {
              return "u";
          };
          if (c instanceof QueryPosition) {
              return "6n";
          };
          if (c instanceof HideCursor) {
              return "?25l";
          };
          if (c instanceof ShowCursor) {
              return "?25h";
          };
          throw new Error("Failed pattern match at Ansi.Codes line 47, column 5 - line 67, column 3: " + [ c.constructor.name ]);
      };
      return function ($234) {
          return (function (v) {
              return prefix + v;
          })(go($234));
      };
  })();
  exports["prefix"] = prefix;
  exports["colorSuffix"] = colorSuffix;
  exports["Up"] = Up;
  exports["Down"] = Down;
  exports["Forward"] = Forward;
  exports["Back"] = Back;
  exports["NextLine"] = NextLine;
  exports["PreviousLine"] = PreviousLine;
  exports["HorizontalAbsolute"] = HorizontalAbsolute;
  exports["Position"] = Position;
  exports["EraseData"] = EraseData;
  exports["EraseLine"] = EraseLine;
  exports["ScrollUp"] = ScrollUp;
  exports["ScrollDown"] = ScrollDown;
  exports["Graphics"] = Graphics;
  exports["SavePosition"] = SavePosition;
  exports["RestorePosition"] = RestorePosition;
  exports["QueryPosition"] = QueryPosition;
  exports["HideCursor"] = HideCursor;
  exports["ShowCursor"] = ShowCursor;
  exports["escapeCodeToString"] = escapeCodeToString;
  exports["ToEnd"] = ToEnd;
  exports["FromBeginning"] = FromBeginning;
  exports["Entire"] = Entire;
  exports["eraseParamToString"] = eraseParamToString;
  exports["Reset"] = Reset;
  exports["PMode"] = PMode;
  exports["PForeground"] = PForeground;
  exports["PBackground"] = PBackground;
  exports["graphicsParamToString"] = graphicsParamToString;
  exports["Bold"] = Bold;
  exports["Dim"] = Dim;
  exports["Italic"] = Italic;
  exports["Underline"] = Underline;
  exports["Inverse"] = Inverse;
  exports["Strikethrough"] = Strikethrough;
  exports["codeForRenderingMode"] = codeForRenderingMode;
  exports["Black"] = Black;
  exports["Red"] = Red;
  exports["Green"] = Green;
  exports["Yellow"] = Yellow;
  exports["Blue"] = Blue;
  exports["Magenta"] = Magenta;
  exports["Cyan"] = Cyan;
  exports["White"] = White;
  exports["BrightBlack"] = BrightBlack;
  exports["BrightRed"] = BrightRed;
  exports["BrightGreen"] = BrightGreen;
  exports["BrightYellow"] = BrightYellow;
  exports["BrightBlue"] = BrightBlue;
  exports["BrightMagenta"] = BrightMagenta;
  exports["BrightCyan"] = BrightCyan;
  exports["BrightWhite"] = BrightWhite;
  exports["colorCode"] = colorCode;
})(PS["Ansi.Codes"] = PS["Ansi.Codes"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Ansi_Codes = PS["Ansi.Codes"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Prelude = PS["Prelude"];                 
  var withGraphics = function (params) {
      return function (text) {
          return Ansi_Codes.escapeCodeToString(new Ansi_Codes.Graphics(params)) + (text + Ansi_Codes.escapeCodeToString(new Ansi_Codes.Graphics(Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(Ansi_Codes.Reset.value))));
      };
  };                                                                                                                              
  var foreground = function (c) {
      return Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(new Ansi_Codes.PForeground(c));
  };
  exports["withGraphics"] = withGraphics;
  exports["foreground"] = foreground;
})(PS["Ansi.Output"] = PS["Ansi.Output"] || {});
(function(exports) {var theGlobalLevel = null;

  exports.getLogLevelWithDefault = function (defaultLogLevel) {
      return function () {
          if (theGlobalLevel == null) {
              return defaultLogLevel;
          } else {
            return theGlobalLevel;
          };
      };
  };

  exports.setLogLevel = function (newValue) {
      return function() {
          theGlobalLevel = newValue;
      };
  };
})(PS["Chanterelle.Internal.Logging"] = PS["Chanterelle.Internal.Logging"] || {});
(function(exports) {exports.jsonStringifyWithSpaces = function (spaces) {
      return function (json) {
          return JSON.stringify(json, null, spaces);
      };
  };
})(PS["Chanterelle.Internal.Utils.Json"] = PS["Chanterelle.Internal.Utils.Json"] || {});
(function(exports) {
    "use strict";

  exports.showErrorImpl = function (err) {
    return err.stack || err.toString();
  };

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.message = function (e) {
    return e.message;
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };

  exports.catchException = function (c) {
    return function (t) {
      return function () {
        try {
          return t();
        } catch (e) {
          if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
            return c(e)();
          } else {
            return c(new Error(e.toString()))();
          }
        }
      };
    };
  };
})(PS["Effect.Exception"] = PS["Effect.Exception"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Effect.Exception"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];                 
  var $$try = function (action) {
      return $foreign.catchException(function ($0) {
          return Control_Applicative.pure(Effect.applicativeEffect)(Data_Either.Left.create($0));
      })(Data_Functor.map(Effect.functorEffect)(Data_Either.Right.create)(action));
  };
  var $$throw = function ($1) {
      return $foreign.throwException($foreign.error($1));
  };                                                                               
  var showError = new Data_Show.Show($foreign.showErrorImpl);
  exports["throw"] = $$throw;
  exports["try"] = $$try;
  exports["showError"] = showError;
  exports["error"] = $foreign.error;
  exports["message"] = $foreign.message;
  exports["catchException"] = $foreign.catchException;
})(PS["Effect.Exception"] = PS["Effect.Exception"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Exception = PS["Effect.Exception"];
  var Prelude = PS["Prelude"];                 
  var MonadThrow = function (Monad0, throwError) {
      this.Monad0 = Monad0;
      this.throwError = throwError;
  };
  var MonadError = function (MonadThrow0, catchError) {
      this.MonadThrow0 = MonadThrow0;
      this.catchError = catchError;
  };
  var throwError = function (dict) {
      return dict.throwError;
  };                                                      
  var catchError = function (dict) {
      return dict.catchError;
  };
  var $$try = function (dictMonadError) {
      return function (a) {
          return catchError(dictMonadError)(Data_Functor.map(((((dictMonadError.MonadThrow0()).Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Right.create)(a))(function ($21) {
              return Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0())(Data_Either.Left.create($21));
          });
      };
  };
  exports["catchError"] = catchError;
  exports["throwError"] = throwError;
  exports["MonadThrow"] = MonadThrow;
  exports["MonadError"] = MonadError;
  exports["try"] = $$try;
})(PS["Control.Monad.Error.Class"] = PS["Control.Monad.Error.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Prelude = PS["Prelude"];                 
  var MonadAsk = function (Monad0, ask) {
      this.Monad0 = Monad0;
      this.ask = ask;
  };
  var ask = function (dict) {
      return dict.ask;
  };
  exports["ask"] = ask;
  exports["MonadAsk"] = MonadAsk;
})(PS["Control.Monad.Reader.Class"] = PS["Control.Monad.Reader.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var MonadState = function (Monad0, state) {
      this.Monad0 = Monad0;
      this.state = state;
  };
  var state = function (dict) {
      return dict.state;
  };
  var put = function (dictMonadState) {
      return function (s) {
          return state(dictMonadState)(function (v) {
              return new Data_Tuple.Tuple(Data_Unit.unit, s);
          });
      };
  };
  var modify_ = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
          });
      };
  };
  var get = function (dictMonadState) {
      return state(dictMonadState)(function (s) {
          return new Data_Tuple.Tuple(s, s);
      });
  };
  exports["state"] = state;
  exports["MonadState"] = MonadState;
  exports["get"] = get;
  exports["put"] = put;
  exports["modify_"] = modify_;
})(PS["Control.Monad.State.Class"] = PS["Control.Monad.State.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Prelude = PS["Prelude"];                 
  var MonadTrans = function (lift) {
      this.lift = lift;
  };
  var lift = function (dict) {
      return dict.lift;
  };
  exports["lift"] = lift;
  exports["MonadTrans"] = MonadTrans;
})(PS["Control.Monad.Trans.Class"] = PS["Control.Monad.Trans.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];                 
  var MonadTell = function (Monad0, tell) {
      this.Monad0 = Monad0;
      this.tell = tell;
  };
  var tell = function (dict) {
      return dict.tell;
  };
  exports["tell"] = tell;
  exports["MonadTell"] = MonadTell;
})(PS["Control.Monad.Writer.Class"] = PS["Control.Monad.Writer.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Effect = PS["Effect"];                 
  var MonadEffect = function (Monad0, liftEffect) {
      this.Monad0 = Monad0;
      this.liftEffect = liftEffect;
  };
  var monadEffectEffect = new MonadEffect(function () {
      return Effect.monadEffect;
  }, Control_Category.identity(Control_Category.categoryFn));
  var liftEffect = function (dict) {
      return dict.liftEffect;
  };
  exports["liftEffect"] = liftEffect;
  exports["MonadEffect"] = MonadEffect;
  exports["monadEffectEffect"] = monadEffectEffect;
})(PS["Effect.Class"] = PS["Effect.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Effect_Class = PS["Effect.Class"];
  var Prelude = PS["Prelude"];                 
  var ExceptT = function (x) {
      return x;
  };
  var withExceptT = function (dictFunctor) {
      return function (f) {
          return function (v) {
              var mapLeft = function (v1) {
                  return function (v2) {
                      if (v2 instanceof Data_Either.Right) {
                          return new Data_Either.Right(v2.value0);
                      };
                      if (v2 instanceof Data_Either.Left) {
                          return new Data_Either.Left(v1(v2.value0));
                      };
                      throw new Error("Failed pattern match at Control.Monad.Except.Trans line 42, column 3 - line 42, column 32: " + [ v1.constructor.name, v2.constructor.name ]);
                  };
              };
              return ExceptT(Data_Functor.map(dictFunctor)(mapLeft(f))(v));
          };
      };
  };
  var runExceptT = function (v) {
      return v;
  };          
  var monadTransExceptT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      return function (m) {
          return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
              return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v));
          });
      };
  });
  var mapExceptT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorExceptT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
      });
  };
  var except = function (dictApplicative) {
      return function ($96) {
          return ExceptT(Control_Applicative.pure(dictApplicative)($96));
      };
  };
  var monadExceptT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeExceptT(dictMonad);
      }, function () {
          return bindExceptT(dictMonad);
      });
  };
  var bindExceptT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyExceptT(dictMonad);
      }, function (v) {
          return function (k) {
              return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function ($97) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($97));
              })(function (a) {
                  var v1 = k(a);
                  return v1;
              }));
          };
      });
  };
  var applyExceptT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadExceptT(dictMonad)));
  };
  var applicativeExceptT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyExceptT(dictMonad);
      }, function ($98) {
          return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($98)));
      });
  };
  var monadEffectExceptT = function (dictMonadEffect) {
      return new Effect_Class.MonadEffect(function () {
          return monadExceptT(dictMonadEffect.Monad0());
      }, function ($99) {
          return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadEffect.Monad0())(Effect_Class.liftEffect(dictMonadEffect)($99));
      });
  };
  var monadThrowExceptT = function (dictMonad) {
      return new Control_Monad_Error_Class.MonadThrow(function () {
          return monadExceptT(dictMonad);
      }, function ($102) {
          return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($102)));
      });
  };
  var altExceptT = function (dictSemigroup) {
      return function (dictMonad) {
          return new Control_Alt.Alt(function () {
              return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
          }, function (v) {
              return function (v1) {
                  return Control_Bind.bind(dictMonad.Bind1())(v)(function (v2) {
                      if (v2 instanceof Data_Either.Right) {
                          return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v2.value0));
                      };
                      if (v2 instanceof Data_Either.Left) {
                          return Control_Bind.bind(dictMonad.Bind1())(v1)(function (v3) {
                              if (v3 instanceof Data_Either.Right) {
                                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v3.value0));
                              };
                              if (v3 instanceof Data_Either.Left) {
                                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(v2.value0)(v3.value0)));
                              };
                              throw new Error("Failed pattern match at Control.Monad.Except.Trans line 86, column 9 - line 88, column 49: " + [ v3.constructor.name ]);
                          });
                      };
                      throw new Error("Failed pattern match at Control.Monad.Except.Trans line 82, column 5 - line 88, column 49: " + [ v2.constructor.name ]);
                  });
              };
          });
      };
  };
  var plusExceptT = function (dictMonoid) {
      return function (dictMonad) {
          return new Control_Plus.Plus(function () {
              return altExceptT(dictMonoid.Semigroup0())(dictMonad);
          }, Control_Monad_Error_Class.throwError(monadThrowExceptT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
      };
  };
  exports["ExceptT"] = ExceptT;
  exports["runExceptT"] = runExceptT;
  exports["withExceptT"] = withExceptT;
  exports["mapExceptT"] = mapExceptT;
  exports["except"] = except;
  exports["functorExceptT"] = functorExceptT;
  exports["applyExceptT"] = applyExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadExceptT"] = monadExceptT;
  exports["altExceptT"] = altExceptT;
  exports["plusExceptT"] = plusExceptT;
  exports["monadTransExceptT"] = monadTransExceptT;
  exports["monadEffectExceptT"] = monadEffectExceptT;
  exports["monadThrowExceptT"] = monadThrowExceptT;
})(PS["Control.Monad.Except.Trans"] = PS["Control.Monad.Except.Trans"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Maybe_Trans = PS["Control.Monad.Maybe.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Prelude = PS["Prelude"];                 
  var note = function (a) {
      return Data_Maybe.maybe(new Data_Either.Left(a))(Data_Either.Right.create);
  };
  var hush = Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
  exports["hush"] = hush;
  exports["note"] = note;
})(PS["Control.Error.Util"] = PS["Control.Error.Util"] || {});
(function(exports) {
    "use strict";

  function id(x) {
    return x;
  }

  exports.fromBoolean = id;
  exports.fromNumber = id;
  exports.fromString = id;
  exports.fromArray = id;
  exports.fromObject = id;

  exports.stringify = function (j) {
    return JSON.stringify(j);
  };

  var objToString = Object.prototype.toString;

  function isArray(a) {
    return objToString.call(a) === "[object Array]";
  }

  exports._caseJson = function (isNull, isBool, isNum, isStr, isArr, isObj, j) {
    if (j == null) return isNull();
    else if (typeof j === "boolean") return isBool(j);
    else if (typeof j === "number") return isNum(j);
    else if (typeof j === "string") return isStr(j);
    else if (objToString.call(j) === "[object Array]")
      return isArr(j);
    else return isObj(j);
  };
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function(exports) {
    "use strict";

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Function.Uncurried"];
  var Data_Unit = PS["Data.Unit"];
  exports["runFn4"] = $foreign.runFn4;
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
    "use strict";

  exports._copyST = function (m) {
    return function () {
      var r = {};
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  };

  exports.empty = {};

  exports.runST = function (f) {
    return f();
  };

  exports._fmapObject = function (m0, f) {
    var m = {};
    for (var k in m0) {
      if (hasOwnProperty.call(m0, k)) {
        m[k] = f(m0[k]);
      }
    }
    return m;
  };

  exports._mapWithKey = function (m0, f) {
    var m = {};
    for (var k in m0) {
      if (hasOwnProperty.call(m0, k)) {
        m[k] = f(k)(m0[k]);
      }
    }
    return m;
  };

  exports._foldM = function (bind) {
    return function (f) {
      return function (mz) {
        return function (m) {
          var acc = mz;
          function g(k) {
            return function (z) {
              return f(z)(k)(m[k]);
            };
          }
          for (var k in m) {
            if (hasOwnProperty.call(m, k)) {
              acc = bind(acc)(g(k));
            }
          }
          return acc;
        };
      };
    };
  };

  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  function toArrayWithKey(f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }

  exports.toArrayWithKey = toArrayWithKey;
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});
(function(exports) {
    "use strict";

  exports.map_ = function (f) {
    return function (a) {
      return function () {
        return f(a());
      };
    };
  };

  exports.pure_ = function (a) {
    return function () {
      return a;
    };
  };

  exports.bind_ = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.foreach = function (as) {
    return function (f) {
      return function () {
        for (var i = 0, l = as.length; i < l; i++) {
          f(as[i])();
        }
      };
    };
  };

  exports.new = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports["modify'"] = function (f) {
    return function (ref) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

  exports.write = function (a) {
    return function (ref) {
      return function () {
        return ref.value = a; // eslint-disable-line no-return-assign
      };
    };
  };
})(PS["Control.Monad.ST.Internal"] = PS["Control.Monad.ST.Internal"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Control.Monad.ST.Internal"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var modify = function (f) {
      return $foreign["modify'"](function (s) {
          var s$prime = f(s);
          return {
              state: s$prime,
              value: s$prime
          };
      });
  };
  var functorST = new Data_Functor.Functor($foreign.map_);
  var monadST = new Control_Monad.Monad(function () {
      return applicativeST;
  }, function () {
      return bindST;
  });
  var bindST = new Control_Bind.Bind(function () {
      return applyST;
  }, $foreign.bind_);
  var applyST = new Control_Apply.Apply(function () {
      return functorST;
  }, Control_Monad.ap(monadST));
  var applicativeST = new Control_Applicative.Applicative(function () {
      return applyST;
  }, $foreign.pure_);
  exports["modify"] = modify;
  exports["functorST"] = functorST;
  exports["applyST"] = applyST;
  exports["applicativeST"] = applicativeST;
  exports["bindST"] = bindST;
  exports["monadST"] = monadST;
  exports["foreach"] = $foreign.foreach;
  exports["new"] = $foreign["new"];
  exports["read"] = $foreign.read;
  exports["write"] = $foreign.write;
})(PS["Control.Monad.ST.Internal"] = PS["Control.Monad.ST.Internal"] || {});
(function(exports) {
    "use strict";

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = new Array(step * (end - start) + 1);
      var i = start, n = 0;
      while (i !== end) {
        result[n++] = i;
        i += step;
      }
      result[n] = i;
      return result;
    };
  };

  var replicateFill = function (count) {
    return function (value) {
      if (count < 1) {
        return [];
      }
      var result = new Array(count);
      return result.fill(value);
    };
  };

  var replicatePolyfill = function (count) {
    return function (value) {
      var result = [];
      var n = 0;
      for (var i = 0; i < count; i++) {
        result[n++] = value;
      }
      return result;
    };
  };

  // In browsers that have Array.prototype.fill we use it, as it's faster.
  exports.replicate = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;

  exports.fromFoldableImpl = (function () {
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }
    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  exports.snoc = function (l) {
    return function (e) {
      var l1 = l.slice();
      l1.push(e);
      return l1;
    };
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  //------------------------------------------------------------------------------
  // Transformations -------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.reverse = function (l) {
    return l.slice().reverse();
  };

  exports.concat = function (xss) {
    if (xss.length <= 10000) {
      // This method is faster, but it crashes on big arrays.
      // So we use it when can and fallback to simple variant otherwise.
      return Array.prototype.concat.apply([], xss);
    }

    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  //------------------------------------------------------------------------------
  // Sorting ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.sortImpl = function (f) {
    return function (l) {
      return l.slice().sort(function (x, y) {
        return f(x)(y);
      });
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  exports.drop = function (n) {
    return function (l) {
      return n < 1 ? l : l.slice(n);
    };
  };

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };

  //------------------------------------------------------------------------------
  // Partial ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.unsafeIndexImpl = function (xs) {
    return function (n) {
      return xs[n];
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
    "use strict";

  exports.empty = function () {
    return [];
  };

  exports.pushAll = function (as) {
    return function (xs) {
      return function () {
        return xs.push.apply(xs, as);
      };
    };
  };
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function(exports) {
    "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Array.ST"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Monad_ST_Internal = PS["Control.Monad.ST.Internal"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                 
  var unsafeThaw = function ($11) {
      return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)($11);
  };
  var unsafeFreeze = function ($12) {
      return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)($12);
  };
  var push = function (a) {
      return $foreign.pushAll([ a ]);
  };
  exports["push"] = push;
  exports["unsafeFreeze"] = unsafeFreeze;
  exports["unsafeThaw"] = unsafeThaw;
  exports["empty"] = $foreign.empty;
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Monad_ST_Internal = PS["Control.Monad.ST.Internal"];
  var Control_Monad_ST_Ref = PS["Control.Monad.ST.Ref"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semiring = PS["Data.Semiring"];
  var Prelude = PS["Prelude"];                 
  var Iterator = (function () {
      function Iterator(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Iterator.create = function (value0) {
          return function (value1) {
              return new Iterator(value0, value1);
          };
      };
      return Iterator;
  })();
  var peek = function (v) {
      return function __do() {
          var v1 = Control_Monad_ST_Internal.read(v.value1)();
          return v.value0(v1);
      };
  };
  var next = function (v) {
      return function __do() {
          var v1 = Control_Monad_ST_Internal.read(v.value1)();
          var v2 = Control_Monad_ST_Internal.modify(function (v2) {
              return v2 + 1 | 0;
          })(v.value1)();
          return v.value0(v1);
      };
  };
  var pushWhile = function (p) {
      return function (iter) {
          return function (array) {
              return function __do() {
                  var v = Control_Monad_ST_Internal["new"](false)();
                  while (Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST_Internal.read(v))()) {
                      (function __do() {
                          var v1 = peek(iter)();
                          if (v1 instanceof Data_Maybe.Just && p(v1.value0)) {
                              var v2 = Data_Array_ST.push(v1.value0)(array)();
                              return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(next(iter))();
                          };
                          return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Control_Monad_ST_Internal.write(true)(v))();
                      })();
                  };
                  return {};
              };
          };
      };
  };                                                    
  var iterator = function (f) {
      return Data_Functor.map(Control_Monad_ST_Internal.functorST)(Iterator.create(f))(Control_Monad_ST_Internal["new"](0));
  };
  var iterate = function (iter) {
      return function (f) {
          return function __do() {
              var v = Control_Monad_ST_Internal["new"](false)();
              while (Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST_Internal.read(v))()) {
                  (function __do() {
                      var v1 = next(iter)();
                      if (v1 instanceof Data_Maybe.Just) {
                          return f(v1.value0)();
                      };
                      if (v1 instanceof Data_Maybe.Nothing) {
                          return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Control_Monad_ST_Internal.write(true)(v))();
                      };
                      throw new Error("Failed pattern match at Data.Array.ST.Iterator line 42, column 5 - line 44, column 47: " + [ v1.constructor.name ]);
                  })();
              };
              return {};
          };
      };
  };
  exports["iterator"] = iterator;
  exports["iterate"] = iterate;
  exports["next"] = next;
  exports["peek"] = peek;
  exports["pushWhile"] = pushWhile;
})(PS["Data.Array.ST.Iterator"] = PS["Data.Array.ST.Iterator"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Array"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Monad_ST_Internal = PS["Control.Monad.ST.Internal"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array_NonEmpty_Internal = PS["Data.Array.NonEmpty.Internal"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Array_ST_Iterator = PS["Data.Array.ST.Iterator"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var zip = $foreign.zipWith(Data_Tuple.Tuple.create);                                
  var unsafeIndex = function (dictPartial) {
      return $foreign.unsafeIndexImpl;
  };
  var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x,
              tail: xs
          });
      };
  });
  var toUnfoldable = function (dictUnfoldable) {
      return function (xs) {
          var len = $foreign.length(xs);
          var f = function (i) {
              if (i < len) {
                  return new Data_Maybe.Just(new Data_Tuple.Tuple(unsafeIndex()(xs)(i), i + 1 | 0));
              };
              if (Data_Boolean.otherwise) {
                  return Data_Maybe.Nothing.value;
              };
              throw new Error("Failed pattern match at Data.Array line 143, column 3 - line 145, column 26: " + [ i.constructor.name ]);
          };
          return Data_Unfoldable.unfoldr(dictUnfoldable)(f)(0);
      };
  }; 
  var sortBy = function (comp) {
      return function (xs) {
          var comp$prime = function (x) {
              return function (y) {
                  var v = comp(x)(y);
                  if (v instanceof Data_Ordering.GT) {
                      return 1;
                  };
                  if (v instanceof Data_Ordering.EQ) {
                      return 0;
                  };
                  if (v instanceof Data_Ordering.LT) {
                      return -1 | 0;
                  };
                  throw new Error("Failed pattern match at Data.Array line 702, column 15 - line 707, column 1: " + [ v.constructor.name ]);
              };
          };
          return $foreign.sortImpl(comp$prime)(xs);
      };
  };
  var sortWith = function (dictOrd) {
      return function (f) {
          return sortBy(Data_Ord.comparing(dictOrd)(f));
      };
  };
  var sort = function (dictOrd) {
      return function (xs) {
          return sortBy(Data_Ord.compare(dictOrd))(xs);
      };
  };
  var singleton = function (a) {
      return [ a ];
  };
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };
  var mapWithIndex = function (f) {
      return function (xs) {
          return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
      };
  };                                                                                  
  var init = function (xs) {
      if ($$null(xs)) {
          return Data_Maybe.Nothing.value;
      };
      if (Data_Boolean.otherwise) {
          return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));
      };
      throw new Error("Failed pattern match at Data.Array line 323, column 1 - line 323, column 45: " + [ xs.constructor.name ]);
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var last = function (xs) {
      return index(xs)($foreign.length(xs) - 1 | 0);
  };
  var unsnoc = function (xs) {
      return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return function (v1) {
              return {
                  init: v,
                  last: v1
              };
          };
      })(init(xs)))(last(xs));
  };
  var head = function (xs) {
      return index(xs)(0);
  };
  var nubBy = function (comp) {
      return function (xs) {
          var indexedAndSorted = sortBy(function (x) {
              return function (y) {
                  return comp(Data_Tuple.snd(x))(Data_Tuple.snd(y));
              };
          })(mapWithIndex(Data_Tuple.Tuple.create)(xs));
          var v = head(indexedAndSorted);
          if (v instanceof Data_Maybe.Nothing) {
              return [  ];
          };
          if (v instanceof Data_Maybe.Just) {
              return Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.snd)(sortWith(Data_Ord.ordInt)(Data_Tuple.fst)((function __do() {
                  var v1 = Data_Array_ST.unsafeThaw(singleton(v.value0))();
                  Control_Monad_ST_Internal.foreach(indexedAndSorted)(function (v2) {
                      return function __do() {
                          var v3 = Data_Functor.map(Control_Monad_ST_Internal.functorST)(function ($111) {
                              return Data_Tuple.snd((function ($112) {
                                  return Data_Maybe.fromJust()(last($112));
                              })($111));
                          })(Data_Array_ST.unsafeFreeze(v1))();
                          return Control_Applicative.when(Control_Monad_ST_Internal.applicativeST)(Data_Eq.notEq(Data_Ordering.eqOrdering)(comp(v3)(v2.value1))(Data_Ordering.EQ.value))(Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(v2)(v1)))();
                      };
                  })();
                  return Data_Array_ST.unsafeFreeze(v1)();
              })()));
          };
          throw new Error("Failed pattern match at Data.Array line 903, column 17 - line 911, column 29: " + [ v.constructor.name ]);
      };
  };
  var nub = function (dictOrd) {
      return nubBy(Data_Ord.compare(dictOrd));
  };
  var groupBy = function (op) {
      return function (xs) {
          return (function __do() {
              var v = Data_Array_ST.empty();
              var v1 = Data_Array_ST_Iterator.iterator(function (v1) {
                  return index(xs)(v1);
              })();
              Data_Array_ST_Iterator.iterate(v1)(function (x) {
                  return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(function __do() {
                      var v2 = Data_Array_ST.empty();
                      var v3 = Data_Array_ST.push(x)(v2)();
                      Data_Array_ST_Iterator.pushWhile(op(x))(v1)(v2)();
                      var v4 = Data_Array_ST.unsafeFreeze(v2)();
                      return Data_Array_ST.push(v4)(v)();
                  });
              })();
              return Data_Array_ST.unsafeFreeze(v)();
          })();
      };
  };
  var fromFoldable = function (dictFoldable) {
      return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };
  var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
  var mapMaybe = function (f) {
      return concatMap(function ($114) {
          return Data_Maybe.maybe([  ])(singleton)(f($114));
      });
  };
  var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));
  exports["fromFoldable"] = fromFoldable;
  exports["toUnfoldable"] = toUnfoldable;
  exports["singleton"] = singleton;
  exports["null"] = $$null;
  exports["head"] = head;
  exports["last"] = last;
  exports["init"] = init;
  exports["uncons"] = uncons;
  exports["unsnoc"] = unsnoc;
  exports["index"] = index;
  exports["concatMap"] = concatMap;
  exports["mapMaybe"] = mapMaybe;
  exports["catMaybes"] = catMaybes;
  exports["mapWithIndex"] = mapWithIndex;
  exports["sort"] = sort;
  exports["sortBy"] = sortBy;
  exports["sortWith"] = sortWith;
  exports["groupBy"] = groupBy;
  exports["nub"] = nub;
  exports["nubBy"] = nubBy;
  exports["zip"] = zip;
  exports["unsafeIndex"] = unsafeIndex;
  exports["range"] = $foreign.range;
  exports["replicate"] = $foreign.replicate;
  exports["length"] = $foreign.length;
  exports["cons"] = $foreign.cons;
  exports["snoc"] = $foreign.snoc;
  exports["reverse"] = $foreign.reverse;
  exports["concat"] = $foreign.concat;
  exports["filter"] = $foreign.filter;
  exports["slice"] = $foreign.slice;
  exports["drop"] = $foreign.drop;
  exports["zipWith"] = $foreign.zipWith;
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
    "use strict";

  exports["new"] = function () {
    return {};
  };

  exports.poke = function (k) {
    return function (v) {
      return function (m) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };
})(PS["Foreign.Object.ST"] = PS["Foreign.Object.ST"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Foreign.Object.ST"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  exports["new"] = $foreign["new"];
  exports["poke"] = $foreign.poke;
})(PS["Foreign.Object.ST"] = PS["Foreign.Object.ST"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Foreign.Object"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Monad_ST_Internal = PS["Control.Monad.ST.Internal"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Foreign_Object_ST = PS["Foreign.Object.ST"];
  var Prelude = PS["Prelude"];
  var Type_Row_Homogeneous = PS["Type.Row.Homogeneous"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                 
  var values = $foreign.toArrayWithKey(function (v) {
      return function (v1) {
          return v1;
      };
  });
  var toUnfoldable = function (dictUnfoldable) {
      return function ($45) {
          return Data_Array.toUnfoldable(dictUnfoldable)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)($45));
      };
  };                                                             
  var thawST = $foreign._copyST;
  var singleton = function (k) {
      return function (v) {
          return $foreign.runST(Control_Bind.bindFlipped(Control_Monad_ST_Internal.bindST)(Foreign_Object_ST.poke(k)(v))(Foreign_Object_ST["new"]));
      };
  };
  var mutate = function (f) {
      return function (m) {
          return $foreign.runST(function __do() {
              var v = thawST(m)();
              var v1 = f(v)();
              return v;
          });
      };
  };                                                                                                 
  var mapWithKey = function (f) {
      return function (m) {
          return $foreign._mapWithKey(m, f);
      };
  };
  var lookup = Data_Function_Uncurried.runFn4($foreign._lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var insert = function (k) {
      return function (v) {
          return mutate(Foreign_Object_ST.poke(k)(v));
      };
  };
  var functorObject = new Data_Functor.Functor(function (f) {
      return function (m) {
          return $foreign._fmapObject(m, f);
      };
  });
  var functorWithIndexObject = new Data_FunctorWithIndex.FunctorWithIndex(function () {
      return functorObject;
  }, mapWithKey);
  var fromFoldable = function (dictFoldable) {
      return function (l) {
          return $foreign.runST(function __do() {
              var v = Foreign_Object_ST["new"]();
              Data_Foldable.for_(Control_Monad_ST_Internal.applicativeST)(Data_Foldable.foldableArray)(Data_Array.fromFoldable(dictFoldable)(l))(function (v1) {
                  return Foreign_Object_ST.poke(v1.value0)(v1.value1)(v);
              })();
              return v;
          });
      };
  };
  var foldM = function (dictMonad) {
      return function (f) {
          return function (z) {
              return $foreign._foldM(Control_Bind.bind(dictMonad.Bind1()))(f)(Control_Applicative.pure(dictMonad.Applicative0())(z));
          };
      };
  };
  var union = function (m) {
      return mutate(function (s) {
          return foldM(Control_Monad_ST_Internal.monadST)(function (s$prime) {
              return function (k) {
                  return function (v) {
                      return Foreign_Object_ST.poke(k)(v)(s$prime);
                  };
              };
          })(s)(m);
      });
  };
  var fold = $foreign._foldM(Data_Function.applyFlipped);
  var foldMap = function (dictMonoid) {
      return function (f) {
          return fold(function (acc) {
              return function (k) {
                  return function (v) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(k)(v));
                  };
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  };
  var foldableObject = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return foldMap(dictMonoid)(Data_Function["const"](f));
      };
  }, function (f) {
      return fold(function (z) {
          return function (v) {
              return f(z);
          };
      });
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
          };
      };
  });
  var foldableWithIndexObject = new Data_FoldableWithIndex.FoldableWithIndex(function () {
      return foldableObject;
  }, function (dictMonoid) {
      return foldMap(dictMonoid);
  }, function (f) {
      return fold(Data_Function.flip(f));
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Tuple.uncurry(f))(z)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)(m));
          };
      };
  });
  var traversableWithIndexObject = new Data_TraversableWithIndex.TraversableWithIndex(function () {
      return foldableWithIndexObject;
  }, function () {
      return functorWithIndexObject;
  }, function () {
      return traversableObject;
  }, function (dictApplicative) {
      return function (f) {
          return function (ms) {
              return fold(function (acc) {
                  return function (k) {
                      return function (v) {
                          return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Function.flip(insert(k)))(acc))(f(k)(v));
                      };
                  };
              })(Control_Applicative.pure(dictApplicative)($foreign.empty))(ms);
          };
      };
  });
  var traversableObject = new Data_Traversable.Traversable(function () {
      return foldableObject;
  }, function () {
      return functorObject;
  }, function (dictApplicative) {
      return Data_Traversable.traverse(traversableObject)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
  }, function (dictApplicative) {
      return function ($47) {
          return Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexObject)(dictApplicative)(Data_Function["const"]($47));
      };
  });
  exports["singleton"] = singleton;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["toUnfoldable"] = toUnfoldable;
  exports["fromFoldable"] = fromFoldable;
  exports["mapWithKey"] = mapWithKey;
  exports["values"] = values;
  exports["union"] = union;
  exports["fold"] = fold;
  exports["foldMap"] = foldMap;
  exports["foldM"] = foldM;
  exports["thawST"] = thawST;
  exports["functorObject"] = functorObject;
  exports["functorWithIndexObject"] = functorWithIndexObject;
  exports["foldableObject"] = foldableObject;
  exports["foldableWithIndexObject"] = foldableWithIndexObject;
  exports["traversableObject"] = traversableObject;
  exports["traversableWithIndexObject"] = traversableWithIndexObject;
  exports["empty"] = $foreign.empty;
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Argonaut.Core"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Foreign_Object = PS["Foreign.Object"];
  var Prelude = PS["Prelude"];                 
  var verbJsonType = function (def) {
      return function (f) {
          return function (g) {
              return g(def)(f);
          };
      };
  };
  var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var jsonSingletonObject = function (key) {
      return function (val) {
          return $foreign.fromObject(Foreign_Object.singleton(key)(val));
      };
  };                                            
  var jsonEmptyObject = $foreign.fromObject(Foreign_Object.empty);
  var isJsonType = verbJsonType(false)(Data_Function["const"](true));
  var caseJsonString = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._caseJson(Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };                                        
  var caseJsonObject = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._caseJson(Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, j);
          };
      };
  };                                        
  var toObject = toJsonType(caseJsonObject);
  var caseJsonNumber = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._caseJson(Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };                                        
  var toNumber = toJsonType(caseJsonNumber);
  var caseJsonNull = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._caseJson(f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };
  var isNull = isJsonType(caseJsonNull);
  var caseJsonBoolean = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._caseJson(Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };                                          
  var caseJsonArray = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._caseJson(Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), j);
          };
      };
  };                                      
  var toArray = toJsonType(caseJsonArray);
  exports["caseJsonNull"] = caseJsonNull;
  exports["caseJsonBoolean"] = caseJsonBoolean;
  exports["caseJsonNumber"] = caseJsonNumber;
  exports["caseJsonString"] = caseJsonString;
  exports["caseJsonArray"] = caseJsonArray;
  exports["caseJsonObject"] = caseJsonObject;
  exports["isNull"] = isNull;
  exports["toNumber"] = toNumber;
  exports["toArray"] = toArray;
  exports["toObject"] = toObject;
  exports["jsonEmptyObject"] = jsonEmptyObject;
  exports["jsonSingletonObject"] = jsonSingletonObject;
  exports["fromBoolean"] = $foreign.fromBoolean;
  exports["fromNumber"] = $foreign.fromNumber;
  exports["fromString"] = $foreign.fromString;
  exports["fromArray"] = $foreign.fromArray;
  exports["fromObject"] = $foreign.fromObject;
  exports["stringify"] = $foreign.stringify;
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function(exports) {
    "use strict";

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };

  exports.fromStringAsImpl = function (just) {
    return function (nothing) {
      return function (radix) {
        var digits;
        if (radix < 11) {
          digits = "[0-" + (radix - 1).toString() + "]";
        } else if (radix === 11) {
          digits = "[0-9a]";
        } else {
          digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
        }
        var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");

        return function (s) {
          /* jshint bitwise: false */
          if (pattern.test(s)) {
            var i = parseInt(s, radix);
            return (i | 0) === i ? just(i) : nothing;
          } else {
            return nothing;
          }
        };
      };
    };
  };

  exports.rem = function (x) {
    return function (y) {
      return x % y;
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* globals exports */
  "use strict";         

  exports.infinity = Infinity;
})(PS["Global"] = PS["Global"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Global"];
  exports["infinity"] = $foreign.infinity;
})(PS["Global"] = PS["Global"] || {});
(function(exports) {
    "use strict";        

  exports.floor = Math.floor;

  exports.round = Math.round;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Math"];
  exports["floor"] = $foreign.floor;
  exports["round"] = $foreign.round;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Int"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_DivisionRing = PS["Data.DivisionRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Global = PS["Global"];
  var $$Math = PS["Math"];
  var Prelude = PS["Prelude"];
  var hexadecimal = 16;
  var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var fromString = fromStringAs(10);
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (x === Global.infinity) {
          return 0;
      };
      if (x === -Global.infinity) {
          return 0;
      };
      if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
          return Data_Bounded.top(Data_Bounded.boundedInt);
      };
      if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
          return Data_Bounded.bottom(Data_Bounded.boundedInt);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.fromMaybe(0)(fromNumber(x));
      };
      throw new Error("Failed pattern match at Data.Int line 66, column 1 - line 66, column 29: " + [ x.constructor.name ]);
  };
  var round = function ($23) {
      return unsafeClamp($$Math.round($23));
  };
  var floor = function ($24) {
      return unsafeClamp($$Math.floor($24));
  };
  exports["fromNumber"] = fromNumber;
  exports["floor"] = floor;
  exports["round"] = round;
  exports["fromString"] = fromString;
  exports["hexadecimal"] = hexadecimal;
  exports["fromStringAs"] = fromStringAs;
  exports["toNumber"] = $foreign.toNumber;
  exports["rem"] = $foreign.rem;
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List = PS["Data.List"];
  var Data_List_Lazy = PS["Data.List.Lazy"];
  var Data_List_Lazy_Types = PS["Data.List.Lazy.Types"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var values = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map.Internal line 612, column 1 - line 612, column 40: " + [ v.constructor.name ]);
  };
  var singleton = function (k) {
      return function (v) {
          return new Two(Leaf.value, k, v, Leaf.value);
      };
  };
  var toUnfoldable = function (dictUnfoldable) {
      return function (m) {
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof Leaf) {
                          $copy_v = v.value1;
                          return;
                      };
                      if (v.value0 instanceof Two && (v.value0.value0 instanceof Leaf && v.value0.value3 instanceof Leaf)) {
                          $tco_done = true;
                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), v.value1));
                      };
                      if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {
                          $tco_done = true;
                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                      };
                      if (v.value0 instanceof Two) {
                          $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                          return;
                      };
                      if (v.value0 instanceof Three) {
                          $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value6, v.value1)))));
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal line 577, column 18 - line 586, column 71: " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal line 576, column 3 - line 576, column 19: " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
      };
  };
  var lookup = function (dictOrd) {
      return function (k) {
          var comp = Data_Ord.compare(dictOrd);
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Leaf) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Two) {
                      var v2 = comp(k)(v.value1);
                      if (v2 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      if (v2 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  if (v instanceof Three) {
                      var v3 = comp(k)(v.value1);
                      if (v3 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      var v4 = comp(k)(v.value4);
                      if (v4 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value5);
                      };
                      if (v3 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      if (v4 instanceof Data_Ordering.GT) {
                          $copy_v = v.value6;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal line 200, column 5 - line 200, column 22: " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return go;
      };
  };
  var member = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.isJust(lookup(dictOrd)(k)(m));
          };
      };
  }; 
  var fromZipper = function ($copy_dictOrd) {
      return function ($copy_v) {
          return function ($copy_tree) {
              var $tco_var_dictOrd = $copy_dictOrd;
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(dictOrd, v, tree) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return tree;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                          return;
                      };
                      if (v.value0 instanceof TwoRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                          return;
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal line 418, column 3 - line 423, column 88: " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal line 415, column 1 - line 415, column 80: " + [ v.constructor.name, tree.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
              };
              return $tco_result;
          };
      };
  };
  var insert = function (dictOrd) {
      return function (k) {
          return function (v) {
              var up = function ($copy_v1) {
                  return function ($copy_v2) {
                      var $tco_var_v1 = $copy_v1;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(v1, v2) {
                          if (v1 instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
                          };
                          if (v1 instanceof Data_List_Types.Cons) {
                              if (v1.value0 instanceof TwoLeft) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                              };
                              if (v1.value0 instanceof TwoRight) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                              };
                              if (v1.value0 instanceof ThreeLeft) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeMiddle) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeRight) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.Map.Internal line 454, column 5 - line 459, column 108: " + [ v1.value0.constructor.name, v2.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal line 451, column 3 - line 451, column 56: " + [ v1.constructor.name, v2.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_v1, $copy_v2);
                      };
                      return $tco_result;
                  };
              };
              var comp = Data_Ord.compare(dictOrd);
              var down = function ($copy_ctx) {
                  return function ($copy_v1) {
                      var $tco_var_ctx = $copy_ctx;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(ctx, v1) {
                          if (v1 instanceof Leaf) {
                              $tco_done = true;
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two) {
                              var v2 = comp(k)(v1.value1);
                              if (v2 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                              };
                              if (v2 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              $copy_v1 = v1.value3;
                              return;
                          };
                          if (v1 instanceof Three) {
                              var v3 = comp(k)(v1.value1);
                              if (v3 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                              };
                              var v4 = comp(k)(v1.value4);
                              if (v4 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                              };
                              if (v3 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value3;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              $copy_v1 = v1.value6;
                              return;
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal line 434, column 3 - line 434, column 55: " + [ ctx.constructor.name, v1.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
                      };
                      return $tco_result;
                  };
              };
              return down(Data_List_Types.Nil.value);
          };
      };
  };
  var pop = function (dictOrd) {
      return function (k) {
          var up = function (ctxs) {
              return function (tree) {
                  if (ctxs instanceof Data_List_Types.Nil) {
                      return tree;
                  };
                  if (ctxs instanceof Data_List_Types.Cons) {
                      var $__unused = function (dictPartial1) {
                          return function ($dollar57) {
                              return $dollar57;
                          };
                      };
                      return $__unused()((function () {
                          if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                              return up(ctxs.value1)(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3));
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                              return up(ctxs.value1)(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree));
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal line 511, column 9 - line 528, column 136: " + [ ctxs.value0.constructor.name, tree.constructor.name ]);
                      })());
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal line 508, column 5 - line 528, column 136: " + [ ctxs.constructor.name ]);
              };
          };
          var removeMaxNode = function (ctx) {
              return function (m) {
                  var $__unused = function (dictPartial1) {
                      return function ($dollar59) {
                          return $dollar59;
                      };
                  };
                  return $__unused()((function () {
                      if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
                          return up(ctx)(Leaf.value);
                      };
                      if (m instanceof Two) {
                          return removeMaxNode(new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx))(m.value3);
                      };
                      if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
                          return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
                      };
                      if (m instanceof Three) {
                          return removeMaxNode(new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx))(m.value6);
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal line 540, column 5 - line 544, column 107: " + [ m.constructor.name ]);
                  })());
              };
          };
          var maxNode = function (m) {
              var $__unused = function (dictPartial1) {
                  return function ($dollar61) {
                      return $dollar61;
                  };
              };
              return $__unused()((function () {
                  if (m instanceof Two && m.value3 instanceof Leaf) {
                      return {
                          key: m.value1,
                          value: m.value2
                      };
                  };
                  if (m instanceof Two) {
                      return maxNode(m.value3);
                  };
                  if (m instanceof Three && m.value6 instanceof Leaf) {
                      return {
                          key: m.value4,
                          value: m.value5
                      };
                  };
                  if (m instanceof Three) {
                      return maxNode(m.value6);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal line 531, column 33 - line 535, column 45: " + [ m.constructor.name ]);
              })());
          };
          var comp = Data_Ord.compare(dictOrd);
          var down = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Leaf) {
                          $tco_done = true;
                          return Data_Maybe.Nothing.value;
                      };
                      if (m instanceof Two) {
                          var v = comp(k)(m.value1);
                          if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three) {
                          var leaves = (function () {
                              if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                                  return true;
                              };
                              return false;
                          })();
                          var v = comp(k)(m.value4);
                          var v3 = comp(k)(m.value1);
                          if (leaves && v3 instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
                          };
                          if (leaves && v instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
                          };
                          if (v3 instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value3);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
                          };
                          if (v3 instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value3;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal line 481, column 34 - line 504, column 80: " + [ m.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          return down(Data_List_Types.Nil.value);
      };
  };
  var empty = Leaf.value;
  var $$delete = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
          };
      };
  }; 
  var alter = function (dictOrd) {
      return function (f) {
          return function (k) {
              return function (m) {
                  var v = f(lookup(dictOrd)(k)(m));
                  if (v instanceof Data_Maybe.Nothing) {
                      return $$delete(dictOrd)(k)(m);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return insert(dictOrd)(k)(v.value0)(m);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal line 549, column 15 - line 551, column 25: " + [ v.constructor.name ]);
              };
          };
      };
  };
  var fromFoldableWith = function (dictOrd) {
      return function (dictFoldable) {
          return function (f) {
              var combine = function (v) {
                  return function (v1) {
                      if (v1 instanceof Data_Maybe.Just) {
                          return Data_Maybe.Just.create(f(v)(v1.value0));
                      };
                      if (v1 instanceof Data_Maybe.Nothing) {
                          return new Data_Maybe.Just(v);
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal line 566, column 3 - line 566, column 38: " + [ v.constructor.name, v1.constructor.name ]);
                  };
              };
              return Data_Foldable.foldl(dictFoldable)(function (m) {
                  return function (v) {
                      return alter(dictOrd)(combine(v.value1))(v.value0)(m);
                  };
              })(empty);
          };
      };
  };
  var unionWith = function (dictOrd) {
      return function (f) {
          return function (m1) {
              return function (m2) {
                  var go = function (m) {
                      return function (v) {
                          return alter(dictOrd)(function ($763) {
                              return Data_Maybe.Just.create(Data_Maybe.maybe(v.value1)(f(v.value1))($763));
                          })(v.value0)(m);
                      };
                  };
                  return Data_Foldable.foldl(Data_List_Types.foldableList)(go)(m2)(toUnfoldable(Data_List_Types.unfoldableList)(m1));
              };
          };
      };
  };
  var union = function (dictOrd) {
      return unionWith(dictOrd)(Data_Function["const"]);
  };
  var semigroupMap = function (dictOrd) {
      return new Data_Semigroup.Semigroup(union(dictOrd));
  };
  var monoidMap = function (dictOrd) {
      return new Data_Monoid.Monoid(function () {
          return semigroupMap(dictOrd);
      }, empty);
  };
  exports["empty"] = empty;
  exports["singleton"] = singleton;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["fromFoldableWith"] = fromFoldableWith;
  exports["toUnfoldable"] = toUnfoldable;
  exports["pop"] = pop;
  exports["member"] = member;
  exports["alter"] = alter;
  exports["values"] = values;
  exports["union"] = union;
  exports["unionWith"] = unionWith;
  exports["semigroupMap"] = semigroupMap;
  exports["monoidMap"] = monoidMap;
})(PS["Data.Map.Internal"] = PS["Data.Map.Internal"] || {});
(function(exports) {
    "use strict";
  /* global Symbol */

  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator =
    typeof Symbol !== "undefined" &&
    Symbol != null &&
    typeof Symbol.iterator !== "undefined" &&
    typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";

  exports._unsafeCodePointAt0 = function (fallback) {
    return hasCodePointAt
      ? function (str) { return str.codePointAt(0); }
      : fallback;
  };

  exports._singleton = function (fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };

  exports._take = function (fallback) {
    return function (n) {
      if (hasStringIterator) {
        return function (str) {
          var accum = "";
          var iter = str[Symbol.iterator]();
          for (var i = 0; i < n; ++i) {
            var o = iter.next();
            if (o.done) return accum;
            accum += o.value;
          }
          return accum;
        };
      }
      return fallback(n);
    };
  };

  exports._toCodePointArray = function (fallback) {
    return function (unsafeCodePointAt0) {
      if (hasArrayFrom) {
        return function (str) {
          return Array.from(str, unsafeCodePointAt0);
        };
      }
      return fallback;
    };
  };
})(PS["Data.String.CodePoints"] = PS["Data.String.CodePoints"] || {});
(function(exports) {
    "use strict";

  exports.toCharCode = function (c) {
    return c.charCodeAt(0);
  };

  exports.fromCharCode = function (c) {
    return String.fromCharCode(c);
  };
})(PS["Data.Enum"] = PS["Data.Enum"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Enum"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Enum = function (Ord0, pred, succ) {
      this.Ord0 = Ord0;
      this.pred = pred;
      this.succ = succ;
  };
  var BoundedEnum = function (Bounded0, Enum1, cardinality, fromEnum, toEnum) {
      this.Bounded0 = Bounded0;
      this.Enum1 = Enum1;
      this.cardinality = cardinality;
      this.fromEnum = fromEnum;
      this.toEnum = toEnum;
  };
  var toEnum = function (dict) {
      return dict.toEnum;
  };
  var succ = function (dict) {
      return dict.succ;
  }; 
  var pred = function (dict) {
      return dict.pred;
  };              
  var fromEnum = function (dict) {
      return dict.fromEnum;
  };
  var toEnumWithDefaults = function (dictBoundedEnum) {
      return function (low) {
          return function (high) {
              return function (x) {
                  var v = toEnum(dictBoundedEnum)(x);
                  if (v instanceof Data_Maybe.Just) {
                      return v.value0;
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      var $54 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
                      if ($54) {
                          return low;
                      };
                      return high;
                  };
                  throw new Error("Failed pattern match at Data.Enum line 158, column 33 - line 160, column 62: " + [ v.constructor.name ]);
              };
          };
      };
  };
  var defaultSucc = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) + 1 | 0);
          };
      };
  };
  var defaultPred = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) - 1 | 0);
          };
      };
  };
  var charToEnum = function (v) {
      if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
          return new Data_Maybe.Just($foreign.fromCharCode(v));
      };
      return Data_Maybe.Nothing.value;
  };
  var enumChar = new Enum(function () {
      return Data_Ord.ordChar;
  }, defaultPred(charToEnum)($foreign.toCharCode), defaultSucc(charToEnum)($foreign.toCharCode));
  var cardinality = function (dict) {
      return dict.cardinality;
  }; 
  var boundedEnumChar = new BoundedEnum(function () {
      return Data_Bounded.boundedChar;
  }, function () {
      return enumChar;
  }, $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, $foreign.toCharCode, charToEnum);
  exports["Enum"] = Enum;
  exports["succ"] = succ;
  exports["pred"] = pred;
  exports["BoundedEnum"] = BoundedEnum;
  exports["cardinality"] = cardinality;
  exports["toEnum"] = toEnum;
  exports["fromEnum"] = fromEnum;
  exports["toEnumWithDefaults"] = toEnumWithDefaults;
  exports["defaultSucc"] = defaultSucc;
  exports["defaultPred"] = defaultPred;
  exports["enumChar"] = enumChar;
  exports["boundedEnumChar"] = boundedEnumChar;
})(PS["Data.Enum"] = PS["Data.Enum"] || {});
(function(exports) {
    "use strict";

  exports.fromCharArray = function (a) {
    return a.join("");
  };

  exports.toCharArray = function (s) {
    return s.split("");
  };

  exports.singleton = function (c) {
    return c;
  };

  exports._charAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (s) {
          return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
        };
      };
    };
  };

  exports.length = function (s) {
    return s.length;
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.take = function (n) {
    return function (s) {
      return s.substr(0, n);
    };
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});
(function(exports) {
    "use strict";

  exports.charAt = function (i) {
    return function (s) {
      if (i >= 0 && i < s.length) return s.charAt(i);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.String.Unsafe"];
  exports["charAt"] = $foreign.charAt;
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.String.CodeUnits"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  var Prelude = PS["Prelude"];
  var takeRight = function (i) {
      return function (s) {
          return $foreign.drop($foreign.length(s) - i | 0)(s);
      };
  };                                                                                          
  var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var stripPrefix = function (v) {
      return function (str) {
          var v1 = indexOf(v)(str);
          if (v1 instanceof Data_Maybe.Just && v1.value0 === 0) {
              return Data_Maybe.Just.create($foreign.drop($foreign.length(v))(str));
          };
          return Data_Maybe.Nothing.value;
      };
  };
  var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["stripPrefix"] = stripPrefix;
  exports["charAt"] = charAt;
  exports["indexOf"] = indexOf;
  exports["takeRight"] = takeRight;
  exports["singleton"] = $foreign.singleton;
  exports["fromCharArray"] = $foreign.fromCharArray;
  exports["toCharArray"] = $foreign.toCharArray;
  exports["length"] = $foreign.length;
  exports["take"] = $foreign.take;
  exports["drop"] = $foreign.drop;
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});
(function(exports) {
    "use strict";

  exports.replace = function (s1) {
    return function (s2) {
      return function (s3) {
        return s3.replace(s1, s2);
      };
    };
  };

  exports.replaceAll = function (s1) {
    return function (s2) {
      return function (s3) {
        return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2); // eslint-disable-line no-useless-escape
      };
    };
  };

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };

  exports.toLower = function (s) {
    return s.toLowerCase();
  };

  exports.toUpper = function (s) {
    return s.toUpperCase();
  };

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
})(PS["Data.String.Common"] = PS["Data.String.Common"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.String.Common"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Prelude = PS["Prelude"];                 
  var $$null = function (s) {
      return s === "";
  };
  exports["null"] = $$null;
  exports["replaceAll"] = $foreign.replaceAll;
  exports["split"] = $foreign.split;
  exports["toLower"] = $foreign.toLower;
  exports["toUpper"] = $foreign.toUpper;
  exports["joinWith"] = $foreign.joinWith;
})(PS["Data.String.Common"] = PS["Data.String.Common"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.String.CodePoints"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Data_String_Common = PS["Data.String.Common"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];
  var unsurrogate = function (lead) {
      return function (trail) {
          return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
      };
  }; 
  var isTrail = function (cu) {
      return 56320 <= cu && cu <= 57343;
  };
  var isLead = function (cu) {
      return 55296 <= cu && cu <= 56319;
  };
  var uncons = function (s) {
      var v = Data_String_CodeUnits.length(s);
      if (v === 0) {
          return Data_Maybe.Nothing.value;
      };
      if (v === 1) {
          return new Data_Maybe.Just({
              head: Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s)),
              tail: ""
          });
      };
      var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $21 = isLead(cu0) && isTrail(cu1);
      if ($21) {
          return new Data_Maybe.Just({
              head: unsurrogate(cu0)(cu1),
              tail: Data_String_CodeUnits.drop(2)(s)
          });
      };
      return new Data_Maybe.Just({
          head: cu0,
          tail: Data_String_CodeUnits.drop(1)(s)
      });
  };
  var unconsButWithTuple = function (s) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return new Data_Tuple.Tuple(v.head, v.tail);
      })(uncons(s));
  };
  var toCodePointArrayFallback = function (s) {
      return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
  };
  var unsafeCodePointAt0Fallback = function (s) {
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $25 = isLead(cu0) && Data_String_CodeUnits.length(s) > 1;
      if ($25) {
          var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
          var $26 = isTrail(cu1);
          if ($26) {
              return unsurrogate(cu0)(cu1);
          };
          return cu0;
      };
      return cu0;
  };
  var unsafeCodePointAt0 = $foreign._unsafeCodePointAt0(unsafeCodePointAt0Fallback);
  var toCodePointArray = $foreign._toCodePointArray(toCodePointArrayFallback)(unsafeCodePointAt0);
  var length = function ($52) {
      return Data_Array.length(toCodePointArray($52));
  };
  var indexOf = function (p) {
      return function (s) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (i) {
              return length(Data_String_CodeUnits.take(i)(s));
          })(Data_String_CodeUnits.indexOf(p)(s));
      };
  };
  var fromCharCode = function ($53) {
      return Data_String_CodeUnits.singleton(Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar))($53));
  };
  var singletonFallback = function (v) {
      if (v <= 65535) {
          return fromCharCode(v);
      };
      var lead = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
      var trail = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
      return fromCharCode(lead) + fromCharCode(trail);
  };                                                                       
  var singleton = $foreign._singleton(singletonFallback);
  var takeFallback = function (n) {
      return function (v) {
          if (n < 1) {
              return "";
          };
          var v1 = uncons(v);
          if (v1 instanceof Data_Maybe.Just) {
              return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
          };
          return v;
      };
  };
  var take = $foreign._take(takeFallback);
  var splitAt = function (i) {
      return function (s) {
          var before = take(i)(s);
          return {
              before: before,
              after: Data_String_CodeUnits.drop(Data_String_CodeUnits.length(before))(s)
          };
      };
  }; 
  var drop = function (n) {
      return function (s) {
          return Data_String_CodeUnits.drop(Data_String_CodeUnits.length(take(n)(s)))(s);
      };
  };
  var indexOf$prime = function (p) {
      return function (i) {
          return function (s) {
              var s$prime = drop(i)(s);
              return Data_Functor.map(Data_Maybe.functorMaybe)(function (k) {
                  return i + length(Data_String_CodeUnits.take(k)(s$prime)) | 0;
              })(Data_String_CodeUnits.indexOf(p)(s$prime));
          };
      };
  };
  exports["singleton"] = singleton;
  exports["toCodePointArray"] = toCodePointArray;
  exports["uncons"] = uncons;
  exports["length"] = length;
  exports["indexOf"] = indexOf;
  exports["indexOf'"] = indexOf$prime;
  exports["take"] = take;
  exports["drop"] = drop;
  exports["splitAt"] = splitAt;
})(PS["Data.String.CodePoints"] = PS["Data.String.CodePoints"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Map_Internal = PS["Data.Map.Internal"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_CodePoints = PS["Data.String.CodePoints"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Foreign_Object = PS["Foreign.Object"];
  var Prelude = PS["Prelude"];                 
  var DecodeJson = function (decodeJson) {
      this.decodeJson = decodeJson;
  }; 
  var decodeJsonString = new DecodeJson(Data_Argonaut_Core.caseJsonString(new Data_Either.Left("Value is not a String"))(Data_Either.Right.create));
  var decodeJsonNumber = new DecodeJson(Data_Argonaut_Core.caseJsonNumber(new Data_Either.Left("Value is not a Number"))(Data_Either.Right.create));                               
  var decodeJsonJson = new DecodeJson(Data_Either.Right.create);
  var decodeJsonBoolean = new DecodeJson(Data_Argonaut_Core.caseJsonBoolean(new Data_Either.Left("Value is not a Boolean"))(Data_Either.Right.create));
  var decodeJson = function (dict) {
      return dict.decodeJson;
  }; 
  var decodeJsonInt = new DecodeJson(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(function ($32) {
      return Data_Maybe.maybe(new Data_Either.Left("Value is not an integer"))(Data_Either.Right.create)(Data_Int.fromNumber($32));
  })(decodeJson(decodeJsonNumber)));
  var decodeJsonMaybe = function (dictDecodeJson) {
      return new DecodeJson(function (j) {
          if (Data_Argonaut_Core.isNull(j)) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
          };
          if (Data_Boolean.otherwise) {
              return Data_Functor.map(Data_Either.functorEither)(Data_Maybe.Just.create)(decodeJson(dictDecodeJson)(j));
          };
          throw new Error("Failed pattern match at Data.Argonaut.Decode.Class line 24, column 1 - line 24, column 65: " + [ j.constructor.name ]);
      });
  };
  var decodeJObject = function ($33) {
      return Data_Maybe.maybe(new Data_Either.Left("Value is not an Object"))(Data_Either.Right.create)(Data_Argonaut_Core.toObject($33));
  };
  var decodeJArray = function ($34) {
      return Data_Maybe.maybe(new Data_Either.Left("Value is not an Array"))(Data_Either.Right.create)(Data_Argonaut_Core.toArray($34));
  };
  var decodeForeignObject = function (dictDecodeJson) {
      return new DecodeJson(function ($37) {
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
              return "Couldn't decode ForeignObject: " + v;
          })(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_Traversable.traverse(Foreign_Object.traversableObject)(Data_Either.applicativeEither)(decodeJson(dictDecodeJson)))(decodeJObject)($37));
      });
  };
  var decodeArray = function (dictDecodeJson) {
      return new DecodeJson((function () {
          var msg = function (i) {
              return function (m) {
                  return "Failed at index " + (Data_Show.show(Data_Show.showInt)(i) + ("): " + m));
              };
          };
          var f = function (i) {
              return function ($38) {
                  return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(msg(i))(decodeJson(dictDecodeJson)($38));
              };
          };
          return function ($39) {
              return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
                  return "Couldn't decode Array (" + v;
              })(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_TraversableWithIndex.traverseWithIndex(Data_TraversableWithIndex.traversableWithIndexArray)(Data_Either.applicativeEither)(f))(decodeJArray)($39));
          };
      })());
  };
  exports["DecodeJson"] = DecodeJson;
  exports["decodeJson"] = decodeJson;
  exports["decodeJsonMaybe"] = decodeJsonMaybe;
  exports["decodeJsonBoolean"] = decodeJsonBoolean;
  exports["decodeJsonNumber"] = decodeJsonNumber;
  exports["decodeJsonInt"] = decodeJsonInt;
  exports["decodeJsonString"] = decodeJsonString;
  exports["decodeJsonJson"] = decodeJsonJson;
  exports["decodeForeignObject"] = decodeForeignObject;
  exports["decodeArray"] = decodeArray;
})(PS["Data.Argonaut.Decode.Class"] = PS["Data.Argonaut.Decode.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Foreign_Object = PS["Foreign.Object"];
  var Prelude = PS["Prelude"];                 
  var elaborateFailure = function (s) {
      return function (e) {
          var msg = function (m) {
              return "Failed to decode key '" + (s + ("': " + m));
          };
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(msg)(e);
      };
  };
  var getField = function (dictDecodeJson) {
      return function (o) {
          return function (s) {
              return Data_Maybe.maybe(Data_Either.Left.create("Expected field " + Data_Show.show(Data_Show.showString)(s)))(function ($2) {
                  return elaborateFailure(s)(Data_Argonaut_Decode_Class.decodeJson(dictDecodeJson)($2));
              })(Foreign_Object.lookup(s)(o));
          };
      };
  };
  var getFieldOptional = function (dictDecodeJson) {
      return function (o) {
          return function (s) {
              var decode = function (json) {
                  return Data_Functor.map(Data_Either.functorEither)(Data_Maybe.Just.create)(elaborateFailure(s)(Data_Argonaut_Decode_Class.decodeJson(dictDecodeJson)(json)));
              };
              return Data_Maybe.maybe(Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value))(decode)(Foreign_Object.lookup(s)(o));
          };
      };
  };
  exports["getField"] = getField;
  exports["getFieldOptional"] = getFieldOptional;
})(PS["Data.Argonaut.Decode.Combinators"] = PS["Data.Argonaut.Decode.Combinators"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Map_Internal = PS["Data.Map.Internal"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_String_CodePoints = PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Void = PS["Data.Void"];
  var Foreign_Object = PS["Foreign.Object"];
  var Prelude = PS["Prelude"];                 
  var EncodeJson = function (encodeJson) {
      this.encodeJson = encodeJson;
  };                                                                                       
  var encodeJsonJson = new EncodeJson(Control_Category.identity(Control_Category.categoryFn));
  var encodeJsonJString = new EncodeJson(Data_Argonaut_Core.fromString);
  var encodeJsonJNumber = new EncodeJson(Data_Argonaut_Core.fromNumber);
  var encodeJsonJBoolean = new EncodeJson(Data_Argonaut_Core.fromBoolean);
  var encodeJsonInt = new EncodeJson(function ($19) {
      return Data_Argonaut_Core.fromNumber(Data_Int.toNumber($19));
  });
  var encodeJson = function (dict) {
      return dict.encodeJson;
  };
  var encodeJsonArray = function (dictEncodeJson) {
      return new EncodeJson(function (json) {
          return Data_Argonaut_Core.fromArray(Data_Functor.map(Data_Functor.functorArray)(encodeJson(dictEncodeJson))(json));
      });
  };
  var encodeForeignObject = function (dictEncodeJson) {
      return new EncodeJson(function ($24) {
          return Data_Argonaut_Core.fromObject(Data_Functor.map(Foreign_Object.functorObject)(encodeJson(dictEncodeJson))($24));
      });
  };
  exports["encodeJson"] = encodeJson;
  exports["EncodeJson"] = EncodeJson;
  exports["encodeJsonJBoolean"] = encodeJsonJBoolean;
  exports["encodeJsonJNumber"] = encodeJsonJNumber;
  exports["encodeJsonInt"] = encodeJsonInt;
  exports["encodeJsonJString"] = encodeJsonJString;
  exports["encodeJsonJson"] = encodeJsonJson;
  exports["encodeJsonArray"] = encodeJsonArray;
  exports["encodeForeignObject"] = encodeForeignObject;
})(PS["Data.Argonaut.Encode.Class"] = PS["Data.Argonaut.Encode.Class"] || {});
(function(exports) {
    "use strict";
  var BigNumber =require("bn.js"); 

  //NOTE: According to the documentation, many binary operators can take a normal js Number
  //by suffixing the version for BN with 'n'.

  exports._intToBigNumber = function(value) {
    return new BigNumber(value.toString(10), 10);
  };

  exports._addBigNumber = function(n) {
      return function (m) { return n.add(m); };
  };

  exports._mulBigNumber = function(n) {
      return function (m) { return n.mul(m); };
  };

  exports._subBigNumber = function(n) {
      return function (m) { return n.sub(m); };
  };

  exports.fromStringAsImpl = function (just) {
    return function (nothing) {
      return function (radix) {
        var digits;
        if (radix < 11) {
          digits = "[0-" + (radix - 1).toString() + "]";
        } else if (radix === 11) {
          digits = "[0-9a]";
        } else {
          digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
        }
        var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");
        return function (s) {
          try {
            if (radix === 16 && (s.indexOf('0x') === 0 || s.indexOf('-0x') === 0)) {
              s = s.replace('0x','')
            }
            if (pattern.test(s)) {
              return just(new BigNumber(s, radix))
            } else {
              return nothing;
            }
          } catch (_) {
            return nothing;
          }
        };
      };
    };
  };

  exports.toString = function (radix) {
    return function (bn) { return bn.toString(radix); };
  };

  exports.toNumber = function (n) {
      var newN = new BigNumber(n);
      return newN.toNumber();
  };
})(PS["Network.Ethereum.Core.BigNumber"] = PS["Network.Ethereum.Core.BigNumber"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Data_Ring = PS["Data.Ring"];
  var Data_Unit = PS["Data.Unit"];                 
  var LeftModule = function (Ring0, maddL, mmulL, msubL, mzeroL) {
      this.Ring0 = Ring0;
      this.maddL = maddL;
      this.mmulL = mmulL;
      this.msubL = msubL;
      this.mzeroL = mzeroL;
  };
  var RightModule = function (Ring0, maddR, mmulR, msubR, mzeroR) {
      this.Ring0 = Ring0;
      this.maddR = maddR;
      this.mmulR = mmulR;
      this.msubR = msubR;
      this.mzeroR = mzeroR;
  };
  var mzeroR = function (dict) {
      return dict.mzeroR;
  };
  var mzeroL = function (dict) {
      return dict.mzeroL;
  };
  var msubR = function (dict) {
      return dict.msubR;
  };
  var msubL = function (dict) {
      return dict.msubL;
  };
  var mmulR = function (dict) {
      return dict.mmulR;
  };
  var mmulL = function (dict) {
      return dict.mmulL;
  };
  var maddR = function (dict) {
      return dict.maddR;
  };
  var maddL = function (dict) {
      return dict.maddL;
  };
  exports["LeftModule"] = LeftModule;
  exports["mzeroL"] = mzeroL;
  exports["maddL"] = maddL;
  exports["msubL"] = msubL;
  exports["mmulL"] = mmulL;
  exports["RightModule"] = RightModule;
  exports["mzeroR"] = mzeroR;
  exports["maddR"] = maddR;
  exports["msubR"] = msubR;
  exports["mmulR"] = mmulR;
})(PS["Data.Ring.Module"] = PS["Data.Ring.Module"] || {});
(function(exports) {
    "use strict";

  exports.unsafeToForeign = function (value) {
    return value;
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.typeOf = function (value) {
    return typeof value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };

  exports.isNull = function (value) {
    return value === null;
  };

  exports.isUndefined = function (value) {
    return value === undefined;
  };

  exports.isArray = Array.isArray || function (value) {
    return Object.prototype.toString.call(value) === "[object Array]";
  };
})(PS["Foreign"] = PS["Foreign"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Newtype = PS["Data.Newtype"];
  var Prelude = PS["Prelude"];                 
  var withExcept = Control_Monad_Except_Trans.withExceptT(Data_Identity.functorIdentity);
  var runExcept = function ($0) {
      return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Except_Trans.runExceptT($0));
  };
  var mapExcept = function (f) {
      return Control_Monad_Except_Trans.mapExceptT(function ($1) {
          return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($1)));
      });
  };
  exports["runExcept"] = runExcept;
  exports["mapExcept"] = mapExcept;
  exports["withExcept"] = withExcept;
})(PS["Control.Monad.Except"] = PS["Control.Monad.Except"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Foreign"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Int = PS["Data.Int"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Prelude = PS["Prelude"];                 
  var ForeignError = (function () {
      function ForeignError(value0) {
          this.value0 = value0;
      };
      ForeignError.create = function (value0) {
          return new ForeignError(value0);
      };
      return ForeignError;
  })();
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var ErrorAtIndex = (function () {
      function ErrorAtIndex(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtIndex.create = function (value0) {
          return function (value1) {
              return new ErrorAtIndex(value0, value1);
          };
      };
      return ErrorAtIndex;
  })();
  var ErrorAtProperty = (function () {
      function ErrorAtProperty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtProperty.create = function (value0) {
          return function (value1) {
              return new ErrorAtProperty(value0, value1);
          };
      };
      return ErrorAtProperty;
  })();
  var showForeignError = new Data_Show.Show(function (v) {
      if (v instanceof ForeignError) {
          return "(ForeignError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
      };
      if (v instanceof ErrorAtIndex) {
          return "(ErrorAtIndex " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
      };
      if (v instanceof ErrorAtProperty) {
          return "(ErrorAtProperty " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
      };
      if (v instanceof TypeMismatch) {
          return "(TypeMismatch " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
      };
      throw new Error("Failed pattern match at Foreign line 63, column 1 - line 63, column 47: " + [ v.constructor.name ]);
  });
  var fail = function ($107) {
      return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($107));
  };
  var readArray = function (value) {
      if ($foreign.isArray(value)) {
          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
      };
      if (Data_Boolean.otherwise) {
          return fail(new TypeMismatch("array", $foreign.tagOf(value)));
      };
      throw new Error("Failed pattern match at Foreign line 147, column 1 - line 147, column 42: " + [ value.constructor.name ]);
  };
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if ($foreign.tagOf(value) === tag) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
          };
          if (Data_Boolean.otherwise) {
              return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
          };
          throw new Error("Failed pattern match at Foreign line 106, column 1 - line 106, column 55: " + [ tag.constructor.name, value.constructor.name ]);
      };
  };                                            
  var readNumber = unsafeReadTagged("Number");
  var readInt = function (value) {
      var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Int", $foreign.tagOf(value))));
      var fromNumber = function ($108) {
          return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Int.fromNumber($108));
      };
      return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromNumber))(readNumber(value));
  };
  var readString = unsafeReadTagged("String");
  exports["ForeignError"] = ForeignError;
  exports["TypeMismatch"] = TypeMismatch;
  exports["ErrorAtIndex"] = ErrorAtIndex;
  exports["ErrorAtProperty"] = ErrorAtProperty;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["readString"] = readString;
  exports["readNumber"] = readNumber;
  exports["readInt"] = readInt;
  exports["readArray"] = readArray;
  exports["fail"] = fail;
  exports["showForeignError"] = showForeignError;
  exports["unsafeToForeign"] = $foreign.unsafeToForeign;
  exports["typeOf"] = $foreign.typeOf;
  exports["isNull"] = $foreign.isNull;
  exports["isUndefined"] = $foreign.isUndefined;
})(PS["Foreign"] = PS["Foreign"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Foreign = PS["Foreign"];
  var Foreign_Internal = PS["Foreign.Internal"];
  var Foreign_NullOrUndefined = PS["Foreign.NullOrUndefined"];
  var Foreign_Object = PS["Foreign.Object"];
  var Prelude = PS["Prelude"];                 
  var Decode = function (decode) {
      this.decode = decode;
  };
  var Encode = function (encode) {
      this.encode = encode;
  }; 
  var stringEncode = new Encode(Foreign.unsafeToForeign);
  var stringDecode = new Decode(Foreign.readString);
  var intEncode = new Encode(Foreign.unsafeToForeign);
  var intDecode = new Decode(Foreign.readInt);                                                                                         
  var encode = function (dict) {
      return dict.encode;
  };
  var decode = function (dict) {
      return dict.decode;
  };
  var arrayDecode = function (dictDecode) {
      return new Decode((function () {
          var readElement = function (i) {
              return function (value) {
                  return Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtIndex.create(i))))(decode(dictDecode)(value));
              };
          };
          var readElements = function (arr) {
              return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
          };
          return Control_Bind.composeKleisli(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign.readArray)(readElements);
      })());
  };
  exports["decode"] = decode;
  exports["encode"] = encode;
  exports["Decode"] = Decode;
  exports["Encode"] = Encode;
  exports["stringDecode"] = stringDecode;
  exports["intDecode"] = intDecode;
  exports["arrayDecode"] = arrayDecode;
  exports["stringEncode"] = stringEncode;
  exports["intEncode"] = intEncode;
})(PS["Foreign.Class"] = PS["Foreign.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Network.Ethereum.Core.BigNumber"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Ring_Module = PS["Data.Ring.Module"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Foreign = PS["Foreign"];
  var Foreign_Class = PS["Foreign.Class"];
  var Prelude = PS["Prelude"];
  var Simple_JSON = PS["Simple.JSON"];                 
  var Algebra = function (LeftModule2, RightModule3, Ring0, Ring1, embed) {
      this.LeftModule2 = LeftModule2;
      this.RightModule3 = RightModule3;
      this.Ring0 = Ring0;
      this.Ring1 = Ring1;
      this.embed = embed;
  };
  var unsafeToInt = function ($8) {
      return Data_Int.floor($foreign.toNumber($8));
  };                                                                          
  var parseBigNumber = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var embedInt = $foreign._intToBigNumber;
  var semiringBigNumber = new Data_Semiring.Semiring($foreign._addBigNumber, $foreign._mulBigNumber, embedInt(1), embedInt(0));
  var ringBigNumber = new Data_Ring.Ring(function () {
      return semiringBigNumber;
  }, $foreign._subBigNumber);
  var embed = function (dict) {
      return dict.embed;
  };
  var bigNumberRModule = new Data_Ring_Module.RightModule(function () {
      return Data_Ring.ringInt;
  }, Data_Semiring.add(semiringBigNumber), function (a) {
      return function (b) {
          return Data_Semiring.mul(semiringBigNumber)(a)(embedInt(b));
      };
  }, Data_Ring.sub(ringBigNumber), embedInt(0));
  var bigNumberLModule = new Data_Ring_Module.LeftModule(function () {
      return Data_Ring.ringInt;
  }, Data_Semiring.add(semiringBigNumber), function (a) {
      return function (b) {
          return Data_Semiring.mul(semiringBigNumber)(embedInt(a))(b);
      };
  }, Data_Ring.sub(ringBigNumber), embedInt(0));
  var embedInt$prime = new Algebra(function () {
      return bigNumberLModule;
  }, function () {
      return bigNumberRModule;
  }, function () {
      return Data_Ring.ringInt;
  }, function () {
      return ringBigNumber;
  }, embedInt);
  var _encode = function ($9) {
      return "0x" + $foreign.toString(Data_Int.hexadecimal)($9);
  };
  var encodeBigNumber = new Foreign_Class.Encode(function ($10) {
      return Foreign_Class.encode(Foreign_Class.stringEncode)(_encode($10));
  });
  exports["Algebra"] = Algebra;
  exports["embed"] = embed;
  exports["parseBigNumber"] = parseBigNumber;
  exports["unsafeToInt"] = unsafeToInt;
  exports["semiringBigNumber"] = semiringBigNumber;
  exports["ringBigNumber"] = ringBigNumber;
  exports["bigNumberLModule"] = bigNumberLModule;
  exports["bigNumberRModule"] = bigNumberRModule;
  exports["embedInt'"] = embedInt$prime;
  exports["encodeBigNumber"] = encodeBigNumber;
  exports["toString"] = $foreign.toString;
})(PS["Network.Ethereum.Core.BigNumber"] = PS["Network.Ethereum.Core.BigNumber"] || {});
(function(exports) {
    "use strict";

  exports.unsafePerformEffect = function (f) {
    return f();
  };
})(PS["Effect.Unsafe"] = PS["Effect.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Effect.Unsafe"];
  var Effect = PS["Effect"];
  exports["unsafePerformEffect"] = $foreign.unsafePerformEffect;
})(PS["Effect.Unsafe"] = PS["Effect.Unsafe"] || {});
(function(exports) {
  /* global exports */
  /* global Buffer */
  /* global require */
  "use strict";

  exports.fromArray = function (octets) {
    return function() {
      return Buffer.from(octets);
    };
  };

  exports.fromStringImpl = function (str) {
    return function (encoding) {
      return function() {
        return Buffer.from(str, encoding);
      };
    };
  };

  exports.toStringImpl = function (enc) {
    return function (buff) {
      return function() {
        return buff.toString(enc);
      };
    };
  };

  exports.toArray = function (buff) {
    return function() {
      var json = buff.toJSON()
      return json.data || json;
    };
  };
})(PS["Node.Buffer"] = PS["Node.Buffer"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Node.Encoding"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];                 
  var ASCII = (function () {
      function ASCII() {

      };
      ASCII.value = new ASCII();
      return ASCII;
  })();
  var UTF8 = (function () {
      function UTF8() {

      };
      UTF8.value = new UTF8();
      return UTF8;
  })();
  var UTF16LE = (function () {
      function UTF16LE() {

      };
      UTF16LE.value = new UTF16LE();
      return UTF16LE;
  })();
  var UCS2 = (function () {
      function UCS2() {

      };
      UCS2.value = new UCS2();
      return UCS2;
  })();
  var Base64 = (function () {
      function Base64() {

      };
      Base64.value = new Base64();
      return Base64;
  })();
  var Latin1 = (function () {
      function Latin1() {

      };
      Latin1.value = new Latin1();
      return Latin1;
  })();
  var Binary = (function () {
      function Binary() {

      };
      Binary.value = new Binary();
      return Binary;
  })();
  var Hex = (function () {
      function Hex() {

      };
      Hex.value = new Hex();
      return Hex;
  })();
  var showEncoding = new Data_Show.Show(function (v) {
      if (v instanceof ASCII) {
          return "ASCII";
      };
      if (v instanceof UTF8) {
          return "UTF8";
      };
      if (v instanceof UTF16LE) {
          return "UTF16LE";
      };
      if (v instanceof UCS2) {
          return "UCS2";
      };
      if (v instanceof Base64) {
          return "Base64";
      };
      if (v instanceof Latin1) {
          return "Latin1";
      };
      if (v instanceof Binary) {
          return "Binary";
      };
      if (v instanceof Hex) {
          return "Hex";
      };
      throw new Error("Failed pattern match at Node.Encoding line 19, column 1 - line 19, column 39: " + [ v.constructor.name ]);
  });
  var encodingToNode = function (v) {
      if (v instanceof ASCII) {
          return "ascii";
      };
      if (v instanceof UTF8) {
          return "utf8";
      };
      if (v instanceof UTF16LE) {
          return "utf16le";
      };
      if (v instanceof UCS2) {
          return "ucs2";
      };
      if (v instanceof Base64) {
          return "base64";
      };
      if (v instanceof Latin1) {
          return "latin1";
      };
      if (v instanceof Binary) {
          return "binary";
      };
      if (v instanceof Hex) {
          return "hex";
      };
      throw new Error("Failed pattern match at Node.Encoding line 31, column 1 - line 31, column 37: " + [ v.constructor.name ]);
  };
  exports["ASCII"] = ASCII;
  exports["UTF8"] = UTF8;
  exports["UTF16LE"] = UTF16LE;
  exports["UCS2"] = UCS2;
  exports["Base64"] = Base64;
  exports["Latin1"] = Latin1;
  exports["Binary"] = Binary;
  exports["Hex"] = Hex;
  exports["encodingToNode"] = encodingToNode;
  exports["showEncoding"] = showEncoding;
})(PS["Node.Encoding"] = PS["Node.Encoding"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Node.Buffer"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Effect = PS["Effect"];
  var Node_Encoding = PS["Node.Encoding"];
  var Prelude = PS["Prelude"];
  var toString = function ($3) {
      return $foreign.toStringImpl(Node_Encoding.encodingToNode($3));
  };                                                                                           
  var fromString = function (str) {
      return function ($7) {
          return $foreign.fromStringImpl(str)(Node_Encoding.encodingToNode($7));
      };
  };
  exports["fromString"] = fromString;
  exports["toString"] = toString;
  exports["fromArray"] = $foreign.fromArray;
  exports["toArray"] = $foreign.toArray;
})(PS["Node.Buffer"] = PS["Node.Buffer"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];
  var $$Proxy = (function () {
      function $$Proxy() {

      };
      $$Proxy.value = new $$Proxy();
      return $$Proxy;
  })();
  exports["Proxy"] = $$Proxy;
})(PS["Type.Proxy"] = PS["Type.Proxy"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];
  var Test_QuickCheck = PS["Test.QuickCheck"];
  var Test_QuickCheck_Arbitrary = PS["Test.QuickCheck.Arbitrary"];
  var Test_QuickCheck_Gen = PS["Test.QuickCheck.Gen"];
  var Type_Proxy = PS["Type.Proxy"];
  var Canonical = function (canonical) {
      this.canonical = canonical;
  }; 
  var canonicalMod256 = new Canonical(function (v) {
      return function ($42) {
          return Data_Ord.abs(Data_Ord.ordInt)(Data_Ring.ringInt)((function (v1) {
              return Data_Int.rem(v1)(256);
          })($42));
      };
  });
  var canonical = function (dict) {
      return dict.canonical;
  };
  var runQuotient = function (dictCanonical) {
      return function (v) {
          return canonical(dictCanonical)(Type_Proxy["Proxy"].value)(v);
      };
  };
  exports["Canonical"] = Canonical;
  exports["canonical"] = canonical;
  exports["runQuotient"] = runQuotient;
  exports["canonicalMod256"] = canonicalMod256;
})(PS["Type.Quotient"] = PS["Type.Quotient"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.ByteString"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Leibniz = PS["Data.Leibniz"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Effect = PS["Effect"];
  var Effect_Exception = PS["Effect.Exception"];
  var Effect_Unsafe = PS["Effect.Unsafe"];
  var Node_Buffer = PS["Node.Buffer"];
  var Node_Encoding = PS["Node.Encoding"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Test_QuickCheck = PS["Test.QuickCheck"];
  var Test_QuickCheck_Arbitrary = PS["Test.QuickCheck.Arbitrary"];
  var Test_QuickCheck_Gen = PS["Test.QuickCheck.Gen"];
  var Type_Quotient = PS["Type.Quotient"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                 
  var ByteString = function (x) {
      return x;
  };
  var unsafeThaw = function (v) {
      return v;
  };
  var unsafeFreeze = ByteString;
  var unpack = function ($26) {
      return Effect_Unsafe.unsafePerformEffect(Node_Buffer.toArray(unsafeThaw($26)));
  };
  var toString = function (s) {
      return function (e) {
          return Effect_Unsafe.unsafePerformEffect(Node_Buffer.toString(e)(unsafeThaw(s)));
      };
  }; 
  var pack = function ($27) {
      return unsafeFreeze(Effect_Unsafe.unsafePerformEffect(Node_Buffer.fromArray(Data_Functor.map(Data_Functor.functorArray)(Type_Quotient.runQuotient(Type_Quotient.canonicalMod256))($27))));
  };           
  var map = function (f) {
      return function ($31) {
          return pack(Data_Functor.map(Data_Functor.functorArray)(f)(unpack($31)));
      };
  };                                                                    
  var fromString = function (s) {
      return function (e) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(unsafeFreeze)(Effect_Unsafe.unsafePerformEffect(Effect_Exception.catchException(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Maybe.Nothing.value)))(Data_Functor.map(Effect.functorEffect)(Data_Maybe.Just.create)(Node_Buffer.fromString(s)(e)))));
      };
  };
  exports["unsafeFreeze"] = unsafeFreeze;
  exports["unsafeThaw"] = unsafeThaw;
  exports["pack"] = pack;
  exports["unpack"] = unpack;
  exports["map"] = map;
  exports["fromString"] = fromString;
  exports["toString"] = toString;
})(PS["Data.ByteString"] = PS["Data.ByteString"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Monad_ST_Internal = PS["Control.Monad.ST.Internal"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map_Internal = PS["Data.Map.Internal"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var member = function (dictOrd) {
      return function (a) {
          return function (v) {
              return Data_Map_Internal.member(dictOrd)(a)(v);
          };
      };
  };
  var insert = function (dictOrd) {
      return function (a) {
          return function (v) {
              return Data_Map_Internal.insert(dictOrd)(a)(Data_Unit.unit)(v);
          };
      };
  }; 
  var empty = Data_Map_Internal.empty;
  var fromFoldable = function (dictFoldable) {
      return function (dictOrd) {
          return Data_Foldable.foldl(dictFoldable)(function (m) {
              return function (a) {
                  return insert(dictOrd)(a)(m);
              };
          })(empty);
      };
  };
  exports["fromFoldable"] = fromFoldable;
  exports["empty"] = empty;
  exports["insert"] = insert;
  exports["member"] = member;
})(PS["Data.Set"] = PS["Data.Set"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Network.Ethereum.Core.HexString"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_ByteString = PS["Data.ByteString"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Set = PS["Data.Set"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_CodePoints = PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Data_String_Common = PS["Data.String.Common"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Data_Unit = PS["Data.Unit"];
  var Foreign = PS["Foreign"];
  var Foreign_Class = PS["Foreign.Class"];
  var Network_Ethereum_Core_BigNumber = PS["Network.Ethereum.Core.BigNumber"];
  var Node_Encoding = PS["Node.Encoding"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Simple_JSON = PS["Simple.JSON"];
  var HexString = function (x) {
      return x;
  };
  var unHex = function (v) {
      return v;
  };
  var showHexString = new Data_Show.Show(function (v) {
      return "0x" + v;
  });                                           
  var mkHexString = function (str) {
      if (Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(Data_String_CodePoints.length(str))(2) !== 0) {
          return Data_Maybe.Nothing.value;
      };
      if (Data_Boolean.otherwise) {
          var hexAlph = Data_Set.fromFoldable(Data_Foldable.foldableArray)(Data_Ord.ordChar)(Data_String_CodeUnits.toCharArray("0123456789abcdefABCDEF"));
          var go = function ($copy_s) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(s) {
                  var v = Data_Array.uncons(s);
                  if (v instanceof Data_Maybe.Nothing) {
                      $tco_done = true;
                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Unit.unit);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      var $44 = Data_Set.member(Data_Ord.ordChar)(v.value0.head)(hexAlph);
                      if ($44) {
                          $copy_s = v.value0.tail;
                          return;
                      };
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  throw new Error("Failed pattern match at Network.Ethereum.Core.HexString line 139, column 16 - line 144, column 27: " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_s);
              };
              return $tco_result;
          };
          return Data_Functor.map(Data_Maybe.functorMaybe)(HexString)((function () {
              var v = Data_String_CodeUnits.stripPrefix("0x")(str);
              if (v instanceof Data_Maybe.Nothing) {
                  var $49 = Data_Maybe.isJust(go(Data_String_CodeUnits.toCharArray(str)));
                  if ($49) {
                      return Data_Maybe.Just.create(Data_String_Common.toLower(str));
                  };
                  return Data_Maybe.Nothing.value;
              };
              if (v instanceof Data_Maybe.Just) {
                  var $50 = Data_Maybe.isJust(go(Data_String_CodeUnits.toCharArray(v.value0)));
                  if ($50) {
                      return Data_Maybe.Just.create(Data_String_Common.toLower(v.value0));
                  };
                  return Data_Maybe.Nothing.value;
              };
              throw new Error("Failed pattern match at Network.Ethereum.Core.HexString line 130, column 7 - line 136, column 35: " + [ v.constructor.name ]);
          })());
      };
      throw new Error("Failed pattern match at Network.Ethereum.Core.HexString line 126, column 1 - line 126, column 41: " + [ str.constructor.name ]);
  };                                    
  var hexStringEq = new Data_Eq.Eq(function (v) {
      return function (v1) {
          return Data_String_Common.toLower(v) === Data_String_Common.toLower(v1);
      };
  });
  var hexLength = function (v) {
      return Data_String_CodePoints.length(v);
  };
  var fromByteString = function (bs) {
      return Data_Maybe.fromJust()(mkHexString(Data_ByteString.toString(bs)(Node_Encoding.Hex.value)));
  };
  var _encode = function ($91) {
      return "0x" + unHex($91);
  };
  var encodeHexString = new Foreign_Class.Encode(function ($92) {
      return Foreign_Class.encode(Foreign_Class.stringEncode)(_encode($92));
  });
  var _decode = function (str) {
      var v = mkHexString(str);
      if (v instanceof Data_Maybe.Just) {
          return new Data_Either.Right(v.value0);
      };
      if (v instanceof Data_Maybe.Nothing) {
          return Data_Either.Left.create("Failed to parse as HexString: " + str);
      };
      throw new Error("Failed pattern match at Network.Ethereum.Core.HexString line 97, column 15 - line 99, column 60: " + [ v.constructor.name ]);
  };
  var decodeHexString = new Foreign_Class.Decode(function (s) {
      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Class.decode(Foreign_Class.stringDecode)(s))(function (v) {
          return Data_Either.either(function ($94) {
              return Foreign.fail(Foreign.ForeignError.create($94));
          })(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)))(_decode(v));
      });
  });
  exports["mkHexString"] = mkHexString;
  exports["unHex"] = unHex;
  exports["hexLength"] = hexLength;
  exports["fromByteString"] = fromByteString;
  exports["showHexString"] = showHexString;
  exports["hexStringEq"] = hexStringEq;
  exports["decodeHexString"] = decodeHexString;
  exports["encodeHexString"] = encodeHexString;
})(PS["Network.Ethereum.Core.HexString"] = PS["Network.Ethereum.Core.HexString"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Data_Maybe = PS["Data.Maybe"];                 
  var Inl = (function () {
      function Inl(value0) {
          this.value0 = value0;
      };
      Inl.create = function (value0) {
          return new Inl(value0);
      };
      return Inl;
  })();
  var Inr = (function () {
      function Inr(value0) {
          this.value0 = value0;
      };
      Inr.create = function (value0) {
          return new Inr(value0);
      };
      return Inr;
  })();
  var NoArguments = (function () {
      function NoArguments() {

      };
      NoArguments.value = new NoArguments();
      return NoArguments;
  })();
  var Constructor = function (x) {
      return x;
  };
  var Generic = function (from, to) {
      this.from = from;
      this.to = to;
  };
  var to = function (dict) {
      return dict.to;
  }; 
  var from = function (dict) {
      return dict.from;
  };
  exports["Generic"] = Generic;
  exports["to"] = to;
  exports["from"] = from;
  exports["NoArguments"] = NoArguments;
  exports["Inl"] = Inl;
  exports["Inr"] = Inr;
  exports["Constructor"] = Constructor;
})(PS["Data.Generic.Rep"] = PS["Data.Generic.Rep"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Prelude = PS["Prelude"];                 
  var GenericShow = function (genericShow$prime) {
      this["genericShow'"] = genericShow$prime;
  };
  var GenericShowArgs = function (genericShowArgs) {
      this.genericShowArgs = genericShowArgs;
  };
  var genericShowArgsNoArguments = new GenericShowArgs(function (v) {
      return [  ];
  });
  var genericShowArgsArgument = function (dictShow) {
      return new GenericShowArgs(function (v) {
          return [ Data_Show.show(dictShow)(v) ];
      });
  };
  var genericShowArgs = function (dict) {
      return dict.genericShowArgs;
  };
  var genericShowConstructor = function (dictGenericShowArgs) {
      return function (dictIsSymbol) {
          return new GenericShow(function (v) {
              var ctor = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var v1 = genericShowArgs(dictGenericShowArgs)(v);
              if (v1.length === 0) {
                  return ctor;
              };
              return "(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ ctor ])(v1)) + ")");
          });
      };
  };
  var genericShow$prime = function (dict) {
      return dict["genericShow'"];
  }; 
  var genericShowSum = function (dictGenericShow) {
      return function (dictGenericShow1) {
          return new GenericShow(function (v) {
              if (v instanceof Data_Generic_Rep.Inl) {
                  return genericShow$prime(dictGenericShow)(v.value0);
              };
              if (v instanceof Data_Generic_Rep.Inr) {
                  return genericShow$prime(dictGenericShow1)(v.value0);
              };
              throw new Error("Failed pattern match at Data.Generic.Rep.Show line 26, column 1 - line 26, column 83: " + [ v.constructor.name ]);
          });
      };
  };
  var genericShow = function (dictGeneric) {
      return function (dictGenericShow) {
          return function (x) {
              return genericShow$prime(dictGenericShow)(Data_Generic_Rep.from(dictGeneric)(x));
          };
      };
  };
  exports["GenericShow"] = GenericShow;
  exports["genericShow"] = genericShow;
  exports["GenericShowArgs"] = GenericShowArgs;
  exports["genericShowArgs"] = genericShowArgs;
  exports["genericShowArgsNoArguments"] = genericShowArgsNoArguments;
  exports["genericShowSum"] = genericShowSum;
  exports["genericShowConstructor"] = genericShowConstructor;
  exports["genericShowArgsArgument"] = genericShowArgsArgument;
})(PS["Data.Generic.Rep.Show"] = PS["Data.Generic.Rep.Show"] || {});
(function(exports) {
    "use strict";
  var keccak =require("keccak"); 

  exports._keccak256 = function (a) {
      return keccak('keccak256').update(a).digest();
  };
})(PS["Network.Ethereum.Core.Keccak256"] = PS["Network.Ethereum.Core.Keccak256"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Network.Ethereum.Core.Keccak256"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_ByteString = PS["Data.ByteString"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Network_Ethereum_Core_HexString = PS["Network.Ethereum.Core.HexString"];
  var Node_Encoding = PS["Node.Encoding"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var Keccak256 = function (keccak256) {
      this.keccak256 = keccak256;
  };
  var keccak256ByteString = new Keccak256($foreign._keccak256);
  var keccak256 = function (dict) {
      return dict.keccak256;
  }; 
  var keccak256String = new Keccak256(function ($2) {
      return keccak256(keccak256ByteString)(Data_Maybe.fromJust()(Data_Function.flip(Data_ByteString.fromString)(Node_Encoding.UTF8.value)($2)));
  });
  exports["Keccak256"] = Keccak256;
  exports["keccak256"] = keccak256;
  exports["keccak256ByteString"] = keccak256ByteString;
  exports["keccak256String"] = keccak256String;
})(PS["Network.Ethereum.Core.Keccak256"] = PS["Network.Ethereum.Core.Keccak256"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Network.Ethereum.Core.Signatures"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_ByteString = PS["Data.ByteString"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Foreign = PS["Foreign"];
  var Foreign_Class = PS["Foreign.Class"];
  var Network_Ethereum_Core_HexString = PS["Network.Ethereum.Core.HexString"];
  var Network_Ethereum_Core_Keccak256 = PS["Network.Ethereum.Core.Keccak256"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Simple_JSON = PS["Simple.JSON"];
  var Address = function (x) {
      return x;
  };
  var unAddress = function (v) {
      return v;
  };
  var mkAddress = function (hx) {
      var $56 = Network_Ethereum_Core_HexString.hexLength(hx) === 40;
      if ($56) {
          return Data_Maybe.Just.create(Address(hx));
      };
      return Data_Maybe.Nothing.value;
  }; 
  var encodeAddress = Network_Ethereum_Core_HexString.encodeHexString;                  
  var addressShow = Network_Ethereum_Core_HexString.showHexString;
  var _decode = function (hx) {
      var v = mkAddress(hx);
      if (v instanceof Data_Maybe.Nothing) {
          return Data_Either.Left.create("Address must be 20 bytes long: " + Data_Show.show(Network_Ethereum_Core_HexString.showHexString)(hx));
      };
      if (v instanceof Data_Maybe.Just) {
          return new Data_Either.Right(v.value0);
      };
      throw new Error("Failed pattern match at Network.Ethereum.Core.Signatures line 108, column 14 - line 110, column 24: " + [ v.constructor.name ]);
  };
  var decodeAddress = new Foreign_Class.Decode(function (a) {
      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Class.decode(Network_Ethereum_Core_HexString.decodeHexString)(a))(function (v) {
          return Data_Either.either(function ($78) {
              return Foreign.fail(Foreign.ForeignError.create($78));
          })(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)))(_decode(v));
      });
  });
  exports["unAddress"] = unAddress;
  exports["mkAddress"] = mkAddress;
  exports["addressShow"] = addressShow;
  exports["encodeAddress"] = encodeAddress;
  exports["decodeAddress"] = decodeAddress;
})(PS["Network.Ethereum.Core.Signatures"] = PS["Network.Ethereum.Core.Signatures"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Distributive = PS["Data.Distributive"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Effect_Class = PS["Effect.Class"];
  var Prelude = PS["Prelude"];                 
  var ReaderT = function (x) {
      return x;
  };
  var runReaderT = function (v) {
      return v;
  };          
  var monadTransReaderT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      return function ($67) {
          return ReaderT(Data_Function["const"]($67));
      };
  });
  var mapReaderT = function (f) {
      return function (v) {
          return function ($68) {
              return f(v($68));
          };
      };
  };
  var functorReaderT = function (dictFunctor) {
      return new Data_Functor.Functor(function ($69) {
          return mapReaderT(Data_Functor.map(dictFunctor)($69));
      });
  };
  var applyReaderT = function (dictApply) {
      return new Control_Apply.Apply(function () {
          return functorReaderT(dictApply.Functor0());
      }, function (v) {
          return function (v1) {
              return function (r) {
                  return Control_Apply.apply(dictApply)(v(r))(v1(r));
              };
          };
      });
  };
  var bindReaderT = function (dictBind) {
      return new Control_Bind.Bind(function () {
          return applyReaderT(dictBind.Apply0());
      }, function (v) {
          return function (k) {
              return function (r) {
                  return Control_Bind.bind(dictBind)(v(r))(function (a) {
                      var v1 = k(a);
                      return v1(r);
                  });
              };
          };
      });
  };
  var applicativeReaderT = function (dictApplicative) {
      return new Control_Applicative.Applicative(function () {
          return applyReaderT(dictApplicative.Apply0());
      }, function ($71) {
          return ReaderT(Data_Function["const"](Control_Applicative.pure(dictApplicative)($71)));
      });
  };
  var monadReaderT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeReaderT(dictMonad.Applicative0());
      }, function () {
          return bindReaderT(dictMonad.Bind1());
      });
  };
  var monadAskReaderT = function (dictMonad) {
      return new Control_Monad_Reader_Class.MonadAsk(function () {
          return monadReaderT(dictMonad);
      }, Control_Applicative.pure(dictMonad.Applicative0()));
  };
  var monadEffectReader = function (dictMonadEffect) {
      return new Effect_Class.MonadEffect(function () {
          return monadReaderT(dictMonadEffect.Monad0());
      }, function ($73) {
          return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadEffect.Monad0())(Effect_Class.liftEffect(dictMonadEffect)($73));
      });
  };
  var monadThrowReaderT = function (dictMonadThrow) {
      return new Control_Monad_Error_Class.MonadThrow(function () {
          return monadReaderT(dictMonadThrow.Monad0());
      }, function ($76) {
          return Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)($76));
      });
  };
  exports["ReaderT"] = ReaderT;
  exports["runReaderT"] = runReaderT;
  exports["mapReaderT"] = mapReaderT;
  exports["functorReaderT"] = functorReaderT;
  exports["applyReaderT"] = applyReaderT;
  exports["applicativeReaderT"] = applicativeReaderT;
  exports["bindReaderT"] = bindReaderT;
  exports["monadReaderT"] = monadReaderT;
  exports["monadTransReaderT"] = monadTransReaderT;
  exports["monadEffectReader"] = monadEffectReader;
  exports["monadThrowReaderT"] = monadThrowReaderT;
  exports["monadAskReaderT"] = monadAskReaderT;
})(PS["Control.Monad.Reader.Trans"] = PS["Control.Monad.Reader.Trans"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Newtype = PS["Data.Newtype"];
  var Prelude = PS["Prelude"];                            
  var runReader = function (v) {
      return function ($2) {
          return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(v($2));
      };
  };
  exports["runReader"] = runReader;
})(PS["Control.Monad.Reader"] = PS["Control.Monad.Reader"] || {});
(function(exports) {
  /* globals setImmediate, clearImmediate, setTimeout, clearTimeout */
  /* jshint -W083, -W098, -W003 */
  "use strict";

  var Aff = function () {
    // A unique value for empty.
    var EMPTY = {};

    /*

  An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.

  data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)

  */  
    var PURE    = "Pure";
    var THROW   = "Throw";
    var CATCH   = "Catch";
    var SYNC    = "Sync";
    var ASYNC   = "Async";
    var BIND    = "Bind";
    var BRACKET = "Bracket";
    var FORK    = "Fork";
    var SEQ     = "Sequential";

    /*

  data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)

  */  
    var MAP   = "Map";
    var APPLY = "Apply";
    var ALT   = "Alt";

    // Various constructors used in interpretation
    var CONS      = "Cons";      // Cons-list, for stacks
    var RESUME    = "Resume";    // Continue indiscriminately
    var RELEASE   = "Release";   // Continue with bracket finalizers
    var FINALIZER = "Finalizer"; // A non-interruptible effect
    var FINALIZED = "Finalized"; // Marker for finalization
    var FORKED    = "Forked";    // Reference to a forked fiber, with resumption stack
    var FIBER     = "Fiber";     // Actual fiber reference
    var THUNK     = "Thunk";     // Primed effect, ready to invoke

    function Aff(tag, _1, _2, _3) {
      this.tag = tag;
      this._1  = _1;
      this._2  = _2;
      this._3  = _3;
    }

    function AffCtr(tag) {
      var fn = function (_1, _2, _3) {
        return new Aff(tag, _1, _2, _3);
      };
      fn.tag = tag;
      return fn;
    }

    function nonCanceler(error) {
      return new Aff(PURE, void 0);
    }

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function runSync(left, right, eff) {
      try {
        return right(eff());
      } catch (error) {
        return left(error);
      }
    }

    function runAsync(left, eff, k) {
      try {
        return eff(k)();
      } catch (error) {
        k(left(error))();
        return nonCanceler;
      }
    }

    var Scheduler = function () {
      var limit    = 1024;
      var size     = 0;
      var ix       = 0;
      var queue    = new Array(limit);
      var draining = false;

      function drain() {
        var thunk;
        draining = true;
        while (size !== 0) {
          size--;
          thunk     = queue[ix];
          queue[ix] = void 0;
          ix        = (ix + 1) % limit;
          thunk();
        }
        draining = false;
      }

      return {
        isDraining: function () {
          return draining;
        },
        enqueue: function (cb) {
          var i, tmp;
          if (size === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }

          queue[(ix + size) % limit] = cb;
          size++;

          if (!draining) {
            drain();
          }
        }
      };
    }();

    function Supervisor(util) {
      var fibers  = {};
      var fiberId = 0;
      var count   = 0;

      return {
        register: function (fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function (result) {
              return function () {
                count--;
                delete fibers[fid];
              };
            }
          });
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function () {
          return count === 0;
        },
        killAll: function (killError, cb) {
          return function () {
            var killCount = 0;
            var kills     = {};

            function kill(fid) {
              kills[fid] = fibers[fid].kill(killError, function (result) {
                return function () {
                  delete kills[fid];
                  killCount--;
                  if (util.isLeft(result) && util.fromLeft(result)) {
                    setTimeout(function () {
                      throw util.fromLeft(result);
                    }, 0);
                  }
                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }

            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill(k);
              }
            }

            fibers  = {};
            fiberId = 0;
            count   = 0;

            return function (error) {
              return new Aff(SYNC, function () {
                for (var k in kills) {
                  if (kills.hasOwnProperty(k)) {
                    kills[k]();
                  }
                }
              });
            };
          };
        }
      };
    }

    // Fiber state machine
    var SUSPENDED   = 0; // Suspended, pending a join.
    var CONTINUE    = 1; // Interpret the next instruction.
    var STEP_BIND   = 2; // Apply the next bind.
    var STEP_RESULT = 3; // Handle potential failure from a result.
    var PENDING     = 4; // An async effect is running.
    var RETURN      = 5; // The current stack has returned.
    var COMPLETED   = 6; // The entire fiber has completed.

    function Fiber(util, supervisor, aff) {
      // Monotonically increasing tick, increased on each asynchronous turn.
      var runTick = 0;

      // The current branch of the state machine.
      var status = SUSPENDED;

      // The current point of interest for the state machine branch.
      var step      = aff;  // Successful step
      var fail      = null; // Failure step
      var interrupt = null; // Asynchronous interrupt

      // Stack of continuations for the current fiber.
      var bhead = null;
      var btail = null;

      // Stack of attempts and finalizers for error recovery. Every `Cons` is also
      // tagged with current `interrupt` state. We use this to track which items
      // should be ignored or evaluated as a result of a kill.
      var attempts = null;

      // A special state is needed for Bracket, because it cannot be killed. When
      // we enter a bracket acquisition or finalizer, we increment the counter,
      // and then decrement once complete.
      var bracketCount = 0;

      // Each join gets a new id so they can be revoked.
      var joinId  = 0;
      var joins   = null;
      var rethrow = true;

      // Each invocation of `run` requires a tick. When an asynchronous effect is
      // resolved, we must check that the local tick coincides with the fiber
      // tick before resuming. This prevents multiple async continuations from
      // accidentally resuming the same fiber. A common example may be invoking
      // the provided callback in `makeAff` more than once, but it may also be an
      // async effect resuming after the fiber was already cancelled.
      function run(localRunTick) {
        var tmp, result, attempt;
        while (true) {
          tmp       = null;
          result    = null;
          attempt   = null;

          switch (status) {
          case STEP_BIND:
            status = CONTINUE;
            step   = bhead(step);
            if (btail === null) {
              bhead = null;
            } else {
              bhead = btail._1;
              btail = btail._2;
            }
            break;

          case STEP_RESULT:
            if (util.isLeft(step)) {
              status = RETURN;
              fail   = step;
              step   = null;
            } else if (bhead === null) {
              status = RETURN;
            } else {
              status = STEP_BIND;
              step   = util.fromRight(step);
            }
            break;

          case CONTINUE:
            switch (step.tag) {
            case BIND:
              if (bhead) {
                btail = new Aff(CONS, bhead, btail);
              }
              bhead  = step._2;
              status = CONTINUE;
              step   = step._1;
              break;

            case PURE:
              if (bhead === null) {
                status = RETURN;
                step   = util.right(step._1);
              } else {
                status = STEP_BIND;
                step   = step._1;
              }
              break;

            case SYNC:
              status = STEP_RESULT;
              step   = runSync(util.left, util.right, step._1);
              break;

            case ASYNC:
              status = PENDING;
              step   = runAsync(util.left, step._1, function (result) {
                return function () {
                  if (runTick !== localRunTick) {
                    return;
                  }
                  runTick++;
                  Scheduler.enqueue(function () {
                    // It's possible to interrupt the fiber between enqueuing and
                    // resuming, so we need to check that the runTick is still
                    // valid.
                    if (runTick !== localRunTick + 1) {
                      return;
                    }
                    status = STEP_RESULT;
                    step   = result;
                    run(runTick);
                  });
                };
              });
              return;

            case THROW:
              status = RETURN;
              fail   = util.left(step._1);
              step   = null;
              break;

            // Enqueue the Catch so that we can call the error handler later on
            // in case of an exception.
            case CATCH:
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead    = null;
              btail    = null;
              status   = CONTINUE;
              step     = step._1;
              break;

            // Enqueue the Bracket so that we can call the appropriate handlers
            // after resource acquisition.
            case BRACKET:
              bracketCount++;
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead  = null;
              btail  = null;
              status = CONTINUE;
              step   = step._1;
              break;

            case FORK:
              status = STEP_RESULT;
              tmp    = Fiber(util, supervisor, step._2);
              if (supervisor) {
                supervisor.register(tmp);
              }
              if (step._1) {
                tmp.run();
              }
              step = util.right(tmp);
              break;

            case SEQ:
              status = CONTINUE;
              step   = sequential(util, supervisor, step._1);
              break;
            }
            break;

          case RETURN:
            bhead = null;
            btail = null;
            // If the current stack has returned, and we have no other stacks to
            // resume or finalizers to run, the fiber has halted and we can
            // invoke all join callbacks. Otherwise we need to resume.
            if (attempts === null) {
              status = COMPLETED;
              step   = interrupt || fail || step;
            } else {
              // The interrupt status for the enqueued item.
              tmp      = attempts._3;
              attempt  = attempts._1;
              attempts = attempts._2;

              switch (attempt.tag) {
              // We cannot recover from an interrupt. Otherwise we should
              // continue stepping, or run the exception handler if an exception
              // was raised.
              case CATCH:
                // We should compare the interrupt status as well because we
                // only want it to apply if there has been an interrupt since
                // enqueuing the catch.
                if (interrupt && interrupt !== tmp) {
                  status = RETURN;
                } else if (fail) {
                  status = CONTINUE;
                  step   = attempt._2(util.fromLeft(fail));
                  fail   = null;
                }
                break;

              // We cannot resume from an interrupt or exception.
              case RESUME:
                // As with Catch, we only want to ignore in the case of an
                // interrupt since enqueing the item.
                if (interrupt && interrupt !== tmp || fail) {
                  status = RETURN;
                } else {
                  bhead  = attempt._1;
                  btail  = attempt._2;
                  status = STEP_BIND;
                  step   = util.fromRight(step);
                }
                break;

              // If we have a bracket, we should enqueue the handlers,
              // and continue with the success branch only if the fiber has
              // not been interrupted. If the bracket acquisition failed, we
              // should not run either.
              case BRACKET:
                bracketCount--;
                if (fail === null) {
                  result   = util.fromRight(step);
                  // We need to enqueue the Release with the same interrupt
                  // status as the Bracket that is initiating it.
                  attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp);
                  // We should only coninue as long as the interrupt status has not changed or
                  // we are currently within a non-interruptable finalizer.
                  if (interrupt === tmp || bracketCount > 0) {
                    status = CONTINUE;
                    step   = attempt._3(result);
                  }
                }
                break;

              // Enqueue the appropriate handler. We increase the bracket count
              // because it should not be cancelled.
              case RELEASE:
                bracketCount++;
                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                status   = CONTINUE;
                // It has only been killed if the interrupt status has changed
                // since we enqueued the item.
                if (interrupt && interrupt !== tmp) {
                  step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                } else if (fail) {
                  step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                } else {
                  step = attempt._1.completed(util.fromRight(step))(attempt._2);
                }
                fail = null;
                break;

              case FINALIZER:
                bracketCount++;
                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                status   = CONTINUE;
                step     = attempt._1;
                break;

              case FINALIZED:
                bracketCount--;
                status = RETURN;
                step   = attempt._1;
                fail   = attempt._2;
                break;
              }
            }
            break;

          case COMPLETED:
            for (var k in joins) {
              if (joins.hasOwnProperty(k)) {
                rethrow = rethrow && joins[k].rethrow;
                runEff(joins[k].handler(step));
              }
            }
            joins = null;
            // If we have an interrupt and a fail, then the thread threw while
            // running finalizers. This should always rethrow in a fresh stack.
            if (interrupt && fail) {
              setTimeout(function () {
                throw util.fromLeft(fail);
              }, 0);
            // If we have an unhandled exception, and no other fiber has joined
            // then we need to throw the exception in a fresh stack.
            } else if (util.isLeft(step) && rethrow) {
              setTimeout(function () {
                // Guard on reathrow because a completely synchronous fiber can
                // still have an observer which was added after-the-fact.
                if (rethrow) {
                  throw util.fromLeft(step);
                }
              }, 0);
            }
            return;
          case SUSPENDED:
            status = CONTINUE;
            break;
          case PENDING: return;
          }
        }
      }

      function onComplete(join) {
        return function () {
          if (status === COMPLETED) {
            rethrow = rethrow && join.rethrow;
            join.handler(step)();
            return function () {};
          }

          var jid    = joinId++;
          joins      = joins || {};
          joins[jid] = join;

          return function() {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }

      function kill(error, cb) {
        return function () {
          if (status === COMPLETED) {
            cb(util.right(void 0))();
            return function () {};
          }

          var canceler = onComplete({
            rethrow: false,
            handler: function (/* unused */) {
              return cb(util.right(void 0));
            }
          })();

          switch (status) {
          case SUSPENDED:
            interrupt = util.left(error);
            status    = COMPLETED;
            step      = interrupt;
            run(runTick);
            break;
          case PENDING:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              if (status === PENDING) {
                attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
              }
              status   = RETURN;
              step     = null;
              fail     = null;
              run(++runTick);
            }
            break;
          default:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              status = RETURN;
              step   = null;
              fail   = null;
            }
          }

          return canceler;
        };
      }

      function join(cb) {
        return function () {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();
          if (status === SUSPENDED) {
            run(runTick);
          }
          return canceler;
        };
      }

      return {
        kill: kill,
        join: join,
        onComplete: onComplete,
        isSuspended: function () {
          return status === SUSPENDED;
        },
        run: function () {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function () {
                run(runTick);
              });
            } else {
              run(runTick);
            }
          }
        }
      };
    }

    function runPar(util, supervisor, par, cb) {
      // Table of all forked fibers.
      var fiberId   = 0;
      var fibers    = {};

      // Table of currently running cancelers, as a product of `Alt` behavior.
      var killId    = 0;
      var kills     = {};

      // Error used for early cancelation on Alt branches.
      var early     = new Error("[ParAff] Early exit");

      // Error used to kill the entire tree.
      var interrupt = null;

      // The root pointer of the tree.
      var root      = EMPTY;

      // Walks a tree, invoking all the cancelers. Returns the table of pending
      // cancellation fibers.
      function kill(error, par, cb) {
        var step  = par;
        var head  = null;
        var tail  = null;
        var count = 0;
        var kills = {};
        var tmp, kid;

        loop: while (true) {
          tmp = null;

          switch (step.tag) {
          case FORKED:
            if (step._3 === EMPTY) {
              tmp = fibers[step._1];
              kills[count++] = tmp.kill(error, function (result) {
                return function () {
                  count--;
                  if (count === 0) {
                    cb(result)();
                  }
                };
              });
            }
            // Terminal case.
            if (head === null) {
              break loop;
            }
            // Go down the right side of the tree.
            step = head._2;
            if (tail === null) {
              head = null;
            } else {
              head = tail._1;
              tail = tail._2;
            }
            break;
          case MAP:
            step = step._2;
            break;
          case APPLY:
          case ALT:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }
            head = step;
            step = step._1;
            break;
          }
        }

        if (count === 0) {
          cb(util.right(void 0))();
        } else {
          // Run the cancelation effects. We alias `count` because it's mutable.
          kid = 0;
          tmp = count;
          for (; kid < tmp; kid++) {
            kills[kid] = kills[kid]();
          }
        }

        return kills;
      }

      // When a fiber resolves, we need to bubble back up the tree with the
      // result, computing the applicative nodes.
      function join(result, head, tail) {
        var fail, step, lhs, rhs, tmp, kid;

        if (util.isLeft(result)) {
          fail = result;
          step = null;
        } else {
          step = result;
          fail = null;
        }

        loop: while (true) {
          lhs = null;
          rhs = null;
          tmp = null;
          kid = null;

          // We should never continue if the entire tree has been interrupted.
          if (interrupt !== null) {
            return;
          }

          // We've made it all the way to the root of the tree, which means
          // the tree has fully evaluated.
          if (head === null) {
            cb(fail || step)();
            return;
          }

          // The tree has already been computed, so we shouldn't try to do it
          // again. This should never happen.
          // TODO: Remove this?
          if (head._3 !== EMPTY) {
            return;
          }

          switch (head.tag) {
          case MAP:
            if (fail === null) {
              head._3 = util.right(head._1(util.fromRight(step)));
              step    = head._3;
            } else {
              head._3 = fail;
            }
            break;
          case APPLY:
            lhs = head._1._3;
            rhs = head._2._3;
            // If we have a failure we should kill the other side because we
            // can't possible yield a result anymore.
            if (fail) {
              head._3 = fail;
              tmp     = true;
              kid     = killId++;

              kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(fail, null, null);
                  } else {
                    join(fail, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            } else if (lhs === EMPTY || rhs === EMPTY) {
              // We can only proceed if both sides have resolved.
              return;
            } else {
              step    = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
              head._3 = step;
            }
            break;
          case ALT:
            lhs = head._1._3;
            rhs = head._2._3;
            // We can only proceed if both have resolved or we have a success
            if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
              return;
            }
            // If both sides resolve with an error, we should continue with the
            // first error
            if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
              fail    = step === lhs ? rhs : lhs;
              step    = null;
              head._3 = fail;
            } else {
              head._3 = step;
              tmp     = true;
              kid     = killId++;
              // Once a side has resolved, we need to cancel the side that is still
              // pending before we can continue.
              kills[kid] = kill(early, step === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(step, null, null);
                  } else {
                    join(step, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            }
            break;
          }

          if (tail === null) {
            head = null;
          } else {
            head = tail._1;
            tail = tail._2;
          }
        }
      }

      function resolve(fiber) {
        return function (result) {
          return function () {
            delete fibers[fiber._1];
            fiber._3 = result;
            join(result, fiber._2._1, fiber._2._2);
          };
        };
      }

      // Walks the applicative tree, substituting non-applicative nodes with
      // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
      // as a mutable slot for memoization. In an unresolved state, the `_3`
      // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
      // the left side first, because both operations are left-associative. As
      // we `RETURN` from those branches, we then walk the right side.
      function run() {
        var status = CONTINUE;
        var step   = par;
        var head   = null;
        var tail   = null;
        var tmp, fid;

        loop: while (true) {
          tmp = null;
          fid = null;

          switch (status) {
          case CONTINUE:
            switch (step.tag) {
            case MAP:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(MAP, step._1, EMPTY, EMPTY);
              step = step._2;
              break;
            case APPLY:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(APPLY, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            case ALT:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(ALT, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            default:
              // When we hit a leaf value, we suspend the stack in the `FORKED`.
              // When the fiber resolves, it can bubble back up the tree.
              fid    = fiberId++;
              status = RETURN;
              tmp    = step;
              step   = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
              tmp    = Fiber(util, supervisor, tmp);
              tmp.onComplete({
                rethrow: false,
                handler: resolve(step)
              })();
              fibers[fid] = tmp;
              if (supervisor) {
                supervisor.register(tmp);
              }
            }
            break;
          case RETURN:
            // Terminal case, we are back at the root.
            if (head === null) {
              break loop;
            }
            // If we are done with the right side, we need to continue down the
            // left. Otherwise we should continue up the stack.
            if (head._1 === EMPTY) {
              head._1 = step;
              status  = CONTINUE;
              step    = head._2;
              head._2 = EMPTY;
            } else {
              head._2 = step;
              step    = head;
              if (tail === null) {
                head  = null;
              } else {
                head  = tail._1;
                tail  = tail._2;
              }
            }
          }
        }

        // Keep a reference to the tree root so it can be cancelled.
        root = step;

        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      }

      // Cancels the entire tree. If there are already subtrees being canceled,
      // we need to first cancel those joins. We will then add fresh joins for
      // all pending branches including those that were in the process of being
      // canceled.
      function cancel(error, cb) {
        interrupt = util.left(error);
        var innerKills;
        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];
            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }

        kills = null;
        var newKills = kill(error, root, cb);

        return function (killError) {
          return new Aff(ASYNC, function (killCb) {
            return function () {
              for (var kid in newKills) {
                if (newKills.hasOwnProperty(kid)) {
                  newKills[kid]();
                }
              }
              return nonCanceler;
            };
          });
        };
      }

      run();

      return function (killError) {
        return new Aff(ASYNC, function (killCb) {
          return function () {
            return cancel(killError, killCb);
          };
        });
      };
    }

    function sequential(util, supervisor, par) {
      return new Aff(ASYNC, function (cb) {
        return function () {
          return runPar(util, supervisor, par, cb);
        };
      });
    }

    Aff.EMPTY       = EMPTY;
    Aff.Pure        = AffCtr(PURE);
    Aff.Throw       = AffCtr(THROW);
    Aff.Catch       = AffCtr(CATCH);
    Aff.Sync        = AffCtr(SYNC);
    Aff.Async       = AffCtr(ASYNC);
    Aff.Bind        = AffCtr(BIND);
    Aff.Bracket     = AffCtr(BRACKET);
    Aff.Fork        = AffCtr(FORK);
    Aff.Seq         = AffCtr(SEQ);
    Aff.ParMap      = AffCtr(MAP);
    Aff.ParApply    = AffCtr(APPLY);
    Aff.ParAlt      = AffCtr(ALT);
    Aff.Fiber       = Fiber;
    Aff.Supervisor  = Supervisor;
    Aff.Scheduler   = Scheduler;
    Aff.nonCanceler = nonCanceler;

    return Aff;
  }();

  exports._pure = Aff.Pure;

  exports._throwError = Aff.Throw;

  exports._catchError = function (aff) {
    return function (k) {
      return Aff.Catch(aff, k);
    };
  };

  exports._map = function (f) {
    return function (aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function (value) {
          return Aff.Pure(f(value));
        });
      }
    };
  };

  exports._bind = function (aff) {
    return function (k) {
      return Aff.Bind(aff, k);
    };
  };

  exports._liftEffect = Aff.Sync;

  exports.makeAff = Aff.Async;

  exports._makeFiber = function (util, aff) {
    return function () {
      return Aff.Fiber(util, null, aff);
    };
  };
})(PS["Effect.Aff"] = PS["Effect.Aff"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];
  var Milliseconds = function (x) {
      return x;
  };                                  
  var ordMilliseconds = Data_Ord.ordNumber;
  exports["Milliseconds"] = Milliseconds;
  exports["ordMilliseconds"] = ordMilliseconds;
})(PS["Data.Time.Duration"] = PS["Data.Time.Duration"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Effect.Aff"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Exception = PS["Effect.Exception"];
  var Effect_Unsafe = PS["Effect.Unsafe"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                          
  var functorAff = new Data_Functor.Functor($foreign._map);
  var ffiUtil = (function () {
      var unsafeFromRight = function (v) {
          if (v instanceof Data_Either.Right) {
              return v.value0;
          };
          if (v instanceof Data_Either.Left) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
          };
          throw new Error("Failed pattern match at Effect.Aff line 400, column 21 - line 402, column 31: " + [ v.constructor.name ]);
      };
      var unsafeFromLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return v.value0;
          };
          if (v instanceof Data_Either.Right) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
          };
          throw new Error("Failed pattern match at Effect.Aff line 395, column 20 - line 399, column 3: " + [ v.constructor.name ]);
      };
      var isLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return true;
          };
          if (v instanceof Data_Either.Right) {
              return false;
          };
          throw new Error("Failed pattern match at Effect.Aff line 390, column 12 - line 392, column 20: " + [ v.constructor.name ]);
      };
      return {
          isLeft: isLeft,
          fromLeft: unsafeFromLeft,
          fromRight: unsafeFromRight,
          left: Data_Either.Left.create,
          right: Data_Either.Right.create
      };
  })();
  var makeFiber = function (aff) {
      return $foreign._makeFiber(ffiUtil, aff);
  };
  var launchAff = function (aff) {
      return function __do() {
          var v = makeFiber(aff)();
          v.run();
          return v;
      };
  };
  var launchAff_ = function ($49) {
      return Data_Functor["void"](Effect.functorEffect)(launchAff($49));
  };
  var monadAff = new Control_Monad.Monad(function () {
      return applicativeAff;
  }, function () {
      return bindAff;
  });
  var bindAff = new Control_Bind.Bind(function () {
      return applyAff;
  }, $foreign._bind);
  var applyAff = new Control_Apply.Apply(function () {
      return functorAff;
  }, Control_Monad.ap(monadAff));
  var applicativeAff = new Control_Applicative.Applicative(function () {
      return applyAff;
  }, $foreign._pure);
  var monadEffectAff = new Effect_Class.MonadEffect(function () {
      return monadAff;
  }, $foreign._liftEffect);
  var monadThrowAff = new Control_Monad_Error_Class.MonadThrow(function () {
      return monadAff;
  }, $foreign._throwError);
  var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
      return monadThrowAff;
  }, $foreign._catchError);
  var attempt = Control_Monad_Error_Class["try"](monadErrorAff);
  var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
  exports["launchAff"] = launchAff;
  exports["launchAff_"] = launchAff_;
  exports["attempt"] = attempt;
  exports["nonCanceler"] = nonCanceler;
  exports["functorAff"] = functorAff;
  exports["applyAff"] = applyAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadThrowAff"] = monadThrowAff;
  exports["monadErrorAff"] = monadErrorAff;
  exports["monadEffectAff"] = monadEffectAff;
  exports["makeAff"] = $foreign.makeAff;
})(PS["Effect.Aff"] = PS["Effect.Aff"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Class = PS["Effect.Class"];
  var Prelude = PS["Prelude"];                 
  var StateT = function (x) {
      return x;
  };
  var runStateT = function (v) {
      return v;
  };         
  var monadTransStateT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      return function (m) {
          return function (s) {
              return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v, s));
              });
          };
      };
  });
  var functorStateT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (v) {
              return function (s) {
                  return Data_Functor.map(dictFunctor)(function (v1) {
                      return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
                  })(v(s));
              };
          };
      });
  };
  var execStateT = function (dictFunctor) {
      return function (v) {
          return function (s) {
              return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v(s));
          };
      };
  };
  var evalStateT = function (dictFunctor) {
      return function (v) {
          return function (s) {
              return Data_Functor.map(dictFunctor)(Data_Tuple.fst)(v(s));
          };
      };
  };
  var monadStateT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeStateT(dictMonad);
      }, function () {
          return bindStateT(dictMonad);
      });
  };
  var bindStateT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyStateT(dictMonad);
      }, function (v) {
          return function (f) {
              return function (s) {
                  return Control_Bind.bind(dictMonad.Bind1())(v(s))(function (v1) {
                      var v3 = f(v1.value0);
                      return v3(v1.value1);
                  });
              };
          };
      });
  };
  var applyStateT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorStateT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadStateT(dictMonad)));
  };
  var applicativeStateT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyStateT(dictMonad);
      }, function (a) {
          return function (s) {
              return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, s));
          };
      });
  };
  var monadEffectState = function (dictMonadEffect) {
      return new Effect_Class.MonadEffect(function () {
          return monadStateT(dictMonadEffect.Monad0());
      }, function ($110) {
          return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadEffect.Monad0())(Effect_Class.liftEffect(dictMonadEffect)($110));
      });
  };
  var monadStateStateT = function (dictMonad) {
      return new Control_Monad_State_Class.MonadState(function () {
          return monadStateT(dictMonad);
      }, function (f) {
          return StateT(function ($111) {
              return Control_Applicative.pure(dictMonad.Applicative0())(f($111));
          });
      });
  };
  var monadThrowStateT = function (dictMonadThrow) {
      return new Control_Monad_Error_Class.MonadThrow(function () {
          return monadStateT(dictMonadThrow.Monad0());
      }, function (e) {
          return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
      });
  };
  exports["StateT"] = StateT;
  exports["runStateT"] = runStateT;
  exports["evalStateT"] = evalStateT;
  exports["execStateT"] = execStateT;
  exports["functorStateT"] = functorStateT;
  exports["applyStateT"] = applyStateT;
  exports["applicativeStateT"] = applicativeStateT;
  exports["bindStateT"] = bindStateT;
  exports["monadStateT"] = monadStateT;
  exports["monadTransStateT"] = monadTransStateT;
  exports["monadEffectState"] = monadEffectState;
  exports["monadThrowStateT"] = monadThrowStateT;
  exports["monadStateStateT"] = monadStateStateT;
})(PS["Control.Monad.State.Trans"] = PS["Control.Monad.State.Trans"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Class = PS["Effect.Class"];
  var Prelude = PS["Prelude"];                 
  var WriterT = function (x) {
      return x;
  };
  var runWriterT = function (v) {
      return v;
  };          
  var monadTransWriterT = function (dictMonoid) {
      return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
          return function (m) {
              return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v, Data_Monoid.mempty(dictMonoid)));
              });
          };
      });
  };
  var mapWriterT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorWriterT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapWriterT(Data_Functor.map(dictFunctor)(function (v) {
              return new Data_Tuple.Tuple(f(v.value0), v.value1);
          }));
      });
  };
  var applyWriterT = function (dictSemigroup) {
      return function (dictApply) {
          return new Control_Apply.Apply(function () {
              return functorWriterT(dictApply.Functor0());
          }, function (v) {
              return function (v1) {
                  var k = function (v3) {
                      return function (v4) {
                          return new Data_Tuple.Tuple(v3.value0(v4.value0), Data_Semigroup.append(dictSemigroup)(v3.value1)(v4.value1));
                      };
                  };
                  return Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(k)(v))(v1);
              };
          });
      };
  };
  var bindWriterT = function (dictSemigroup) {
      return function (dictBind) {
          return new Control_Bind.Bind(function () {
              return applyWriterT(dictSemigroup)(dictBind.Apply0());
          }, function (v) {
              return function (k) {
                  return WriterT(Control_Bind.bind(dictBind)(v)(function (v1) {
                      var v2 = k(v1.value0);
                      return Data_Functor.map((dictBind.Apply0()).Functor0())(function (v3) {
                          return new Data_Tuple.Tuple(v3.value0, Data_Semigroup.append(dictSemigroup)(v1.value1)(v3.value1));
                      })(v2);
                  }));
              };
          });
      };
  };
  var applicativeWriterT = function (dictMonoid) {
      return function (dictApplicative) {
          return new Control_Applicative.Applicative(function () {
              return applyWriterT(dictMonoid.Semigroup0())(dictApplicative.Apply0());
          }, function (a) {
              return WriterT(Control_Applicative.pure(dictApplicative)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
          });
      };
  };
  var monadWriterT = function (dictMonoid) {
      return function (dictMonad) {
          return new Control_Monad.Monad(function () {
              return applicativeWriterT(dictMonoid)(dictMonad.Applicative0());
          }, function () {
              return bindWriterT(dictMonoid.Semigroup0())(dictMonad.Bind1());
          });
      };
  };
  var monadEffectWriter = function (dictMonoid) {
      return function (dictMonadEffect) {
          return new Effect_Class.MonadEffect(function () {
              return monadWriterT(dictMonoid)(dictMonadEffect.Monad0());
          }, function ($123) {
              return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadEffect.Monad0())(Effect_Class.liftEffect(dictMonadEffect)($123));
          });
      };
  };
  var monadTellWriterT = function (dictMonoid) {
      return function (dictMonad) {
          return new Control_Monad_Writer_Class.MonadTell(function () {
              return monadWriterT(dictMonoid)(dictMonad);
          }, function ($124) {
              return WriterT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Tuple.Tuple.create(Data_Unit.unit)($124)));
          });
      };
  };
  exports["WriterT"] = WriterT;
  exports["runWriterT"] = runWriterT;
  exports["mapWriterT"] = mapWriterT;
  exports["functorWriterT"] = functorWriterT;
  exports["applyWriterT"] = applyWriterT;
  exports["applicativeWriterT"] = applicativeWriterT;
  exports["bindWriterT"] = bindWriterT;
  exports["monadWriterT"] = monadWriterT;
  exports["monadTransWriterT"] = monadTransWriterT;
  exports["monadEffectWriter"] = monadEffectWriter;
  exports["monadTellWriterT"] = monadTellWriterT;
})(PS["Control.Monad.Writer.Trans"] = PS["Control.Monad.Writer.Trans"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Cont_Trans = PS["Control.Monad.Cont.Trans"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_List_Trans = PS["Control.Monad.List.Trans"];
  var Control_Monad_Maybe_Trans = PS["Control.Monad.Maybe.Trans"];
  var Control_Monad_RWS_Trans = PS["Control.Monad.RWS.Trans"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Class = PS["Effect.Class"];
  var Prelude = PS["Prelude"];                 
  var MonadAff = function (MonadEffect0, liftAff) {
      this.MonadEffect0 = MonadEffect0;
      this.liftAff = liftAff;
  };
  var monadAffAff = new MonadAff(function () {
      return Effect_Aff.monadEffectAff;
  }, Control_Category.identity(Control_Category.categoryFn));
  var liftAff = function (dict) {
      return dict.liftAff;
  };
  var monadAffExceptT = function (dictMonadAff) {
      return new MonadAff(function () {
          return Control_Monad_Except_Trans.monadEffectExceptT(dictMonadAff.MonadEffect0());
      }, function ($11) {
          return Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)((dictMonadAff.MonadEffect0()).Monad0())(liftAff(dictMonadAff)($11));
      });
  };
  var monadAffReader = function (dictMonadAff) {
      return new MonadAff(function () {
          return Control_Monad_Reader_Trans.monadEffectReader(dictMonadAff.MonadEffect0());
      }, function ($15) {
          return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)((dictMonadAff.MonadEffect0()).Monad0())(liftAff(dictMonadAff)($15));
      });
  };
  var monadAffState = function (dictMonadAff) {
      return new MonadAff(function () {
          return Control_Monad_State_Trans.monadEffectState(dictMonadAff.MonadEffect0());
      }, function ($16) {
          return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)((dictMonadAff.MonadEffect0()).Monad0())(liftAff(dictMonadAff)($16));
      });
  };
  var monadAffWriter = function (dictMonadAff) {
      return function (dictMonoid) {
          return new MonadAff(function () {
              return Control_Monad_Writer_Trans.monadEffectWriter(dictMonoid)(dictMonadAff.MonadEffect0());
          }, function ($17) {
              return Control_Monad_Trans_Class.lift(Control_Monad_Writer_Trans.monadTransWriterT(dictMonoid))((dictMonadAff.MonadEffect0()).Monad0())(liftAff(dictMonadAff)($17));
          });
      };
  };
  exports["liftAff"] = liftAff;
  exports["MonadAff"] = MonadAff;
  exports["monadAffAff"] = monadAffAff;
  exports["monadAffExceptT"] = monadAffExceptT;
  exports["monadAffReader"] = monadAffReader;
  exports["monadAffState"] = monadAffState;
  exports["monadAffWriter"] = monadAffWriter;
})(PS["Effect.Aff.Class"] = PS["Effect.Aff.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var TaggedObject = (function () {
      function TaggedObject(value0) {
          this.value0 = value0;
      };
      TaggedObject.create = function (value0) {
          return new TaggedObject(value0);
      };
      return TaggedObject;
  })();
  exports["TaggedObject"] = TaggedObject;
})(PS["Foreign.Generic.Types"] = PS["Foreign.Generic.Types"] || {});
(function(exports) {
    "use strict";

  exports.unsafeReadPropImpl = function (f, s, key, value) {
    return value == null ? f : s(value[key]);
  };

  exports.unsafeHasOwnProperty = function (prop, value) {
    return Object.prototype.hasOwnProperty.call(value, prop);
  };

  exports.unsafeHasProperty = function (prop, value) {
    return prop in value;
  };
})(PS["Foreign.Index"] = PS["Foreign.Index"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Foreign.Index"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Foreign = PS["Foreign"];
  var Prelude = PS["Prelude"];                 
  var Index = function (errorAt, hasOwnProperty, hasProperty, index) {
      this.errorAt = errorAt;
      this.hasOwnProperty = hasOwnProperty;
      this.hasProperty = hasProperty;
      this.index = index;
  };
  var unsafeReadProp = function (k) {
      return function (value) {
          return $foreign.unsafeReadPropImpl(Foreign.fail(new Foreign.TypeMismatch("object", Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
      };
  };
  var readProp = unsafeReadProp;
  var index = function (dict) {
      return dict.index;
  }; 
  var hasPropertyImpl = function (v) {
      return function (value) {
          if (Foreign.isNull(value)) {
              return false;
          };
          if (Foreign.isUndefined(value)) {
              return false;
          };
          if (Foreign.typeOf(value) === "object" || Foreign.typeOf(value) === "function") {
              return $foreign.unsafeHasProperty(v, value);
          };
          return false;
      };
  };
  var hasProperty = function (dict) {
      return dict.hasProperty;
  };
  var hasOwnPropertyImpl = function (v) {
      return function (value) {
          if (Foreign.isNull(value)) {
              return false;
          };
          if (Foreign.isUndefined(value)) {
              return false;
          };
          if (Foreign.typeOf(value) === "object" || Foreign.typeOf(value) === "function") {
              return $foreign.unsafeHasOwnProperty(v, value);
          };
          return false;
      };
  };                                                                                                                        
  var indexString = new Index(Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(readProp));
  var hasOwnProperty = function (dict) {
      return dict.hasOwnProperty;
  };
  var errorAt = function (dict) {
      return dict.errorAt;
  };
  exports["Index"] = Index;
  exports["readProp"] = readProp;
  exports["index"] = index;
  exports["hasProperty"] = hasProperty;
  exports["hasOwnProperty"] = hasOwnProperty;
  exports["errorAt"] = errorAt;
  exports["indexString"] = indexString;
})(PS["Foreign.Index"] = PS["Foreign.Index"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Symbol = PS["Data.Symbol"];
  var Prelude = PS["Prelude"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Record_Unsafe_Union = PS["Record.Unsafe.Union"];
  var Type_Row = PS["Type.Row"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var get = function (dictIsSymbol) {
      return function (dictCons) {
          return function (l) {
              return function (r) {
                  return Record_Unsafe.unsafeGet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);
              };
          };
      };
  };
  exports["get"] = get;
})(PS["Record"] = PS["Record"] || {});
(function(exports) {
    "use strict";

  exports.copyRecord = function(rec) {
    var copy = {};
    for (var key in rec) {
      if ({}.hasOwnProperty.call(rec, key)) {
        copy[key] = rec[key];
      }
    }
    return copy;
  };

  exports.unsafeInsert = function(l) {
    return function(a) {
      return function(rec) {
        rec[l] = a;
        return rec;
      };
    };
  };
})(PS["Record.Builder"] = PS["Record.Builder"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Record.Builder"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Symbol = PS["Data.Symbol"];
  var Prelude = PS["Prelude"];
  var Record_Unsafe_Union = PS["Record.Unsafe.Union"];
  var Type_Row = PS["Type.Row"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var semigroupoidBuilder = Control_Semigroupoid.semigroupoidFn;
  var insert = function (dictCons) {
      return function (dictLacks) {
          return function (dictIsSymbol) {
              return function (l) {
                  return function (a) {
                      return function (r1) {
                          return $foreign.unsafeInsert(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(a)(r1);
                      };
                  };
              };
          };
      };
  };
  var categoryBuilder = Control_Category.categoryFn;
  var build = function (v) {
      return function (r1) {
          return v($foreign.copyRecord(r1));
      };
  };
  exports["build"] = build;
  exports["insert"] = insert;
  exports["semigroupoidBuilder"] = semigroupoidBuilder;
  exports["categoryBuilder"] = categoryBuilder;
})(PS["Record.Builder"] = PS["Record.Builder"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Foreign = PS["Foreign"];
  var Foreign_Class = PS["Foreign.Class"];
  var Foreign_Generic_Types = PS["Foreign.Generic.Types"];
  var Foreign_Index = PS["Foreign.Index"];
  var Foreign_Object = PS["Foreign.Object"];
  var Prelude = PS["Prelude"];
  var Record = PS["Record"];
  var Record_Builder = PS["Record.Builder"];
  var Type_Data_RowList = PS["Type.Data.RowList"];
  var Type_Proxy = PS["Type.Proxy"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                 
  var GenericDecode = function (decodeOpts) {
      this.decodeOpts = decodeOpts;
  };
  var GenericEncode = function (encodeOpts) {
      this.encodeOpts = encodeOpts;
  };
  var GenericDecodeArgs = function (decodeArgs) {
      this.decodeArgs = decodeArgs;
  };
  var GenericEncodeArgs = function (encodeArgs) {
      this.encodeArgs = encodeArgs;
  };
  var GenericCountArgs = function (countArgs) {
      this.countArgs = countArgs;
  };
  var Decode_ = function (decode_) {
      this.decode_ = decode_;
  };
  var Encode_ = function (encode_) {
      this.encode_ = encode_;
  };
  var DecodeRecord = function (decodeRecord_) {
      this.decodeRecord_ = decodeRecord_;
  };
  var EncodeRecord = function (encodeRecord_) {
      this.encodeRecord_ = encodeRecord_;
  };
  var genericEncodeArgsNoArguments = new GenericEncodeArgs(function (v) {
      return Data_Monoid.mempty(Data_Monoid.monoidFn(Data_List_Types.monoidList));
  });
  var genericDecodeArgsNoArguments = new GenericDecodeArgs(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Data_List_Types.Nil) {
                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))({
                      result: Data_Generic_Rep.NoArguments.value,
                      rest: Data_List_Types.Nil.value,
                      next: v1
                  });
              };
              return Foreign.fail(new Foreign.ForeignError("Too many constructor arguments"));
          };
      };
  });
  var genericCountArgsNoArguments = new GenericCountArgs(function (v) {
      return new Data_Either.Left(Data_Generic_Rep.NoArguments.value);
  });
  var genericCountArgsArgument = new GenericCountArgs(function (v) {
      return new Data_Either.Right(1);
  });
  var encode_Other = function (dictEncode) {
      return new Encode_(function (v) {
          return Foreign_Class.encode(dictEncode);
      });
  };
  var encode_ = function (dict) {
      return dict.encode_;
  };
  var genericEncodeArgsArgument = function (dictEncode_) {
      return new GenericEncodeArgs(function (opts) {
          return function (v) {
              return Data_List.singleton(encode_(dictEncode_)(opts)(v));
          };
      });
  };
  var encodeRecord_ = function (dict) {
      return dict.encodeRecord_;
  };
  var encode_Record = function (dictRowToList) {
      return function (dictEncodeRecord) {
          return new Encode_(function (opts) {
              return function ($147) {
                  return Foreign.unsafeToForeign(encodeRecord_(dictEncodeRecord)(Type_Data_RowList.RLProxy.value)(opts)($147));
              };
          });
      };
  };
  var encodeRecordNil = new EncodeRecord(function (v) {
      return function (v1) {
          return function (v2) {
              return Foreign_Object.empty;
          };
      };
  });
  var encodeRecordCons = function (dictCons) {
      return function (dictEncodeRecord) {
          return function (dictIsSymbol) {
              return function (dictEncode_) {
                  return new EncodeRecord(function (v) {
                      return function (opts) {
                          return function (rec) {
                              var obj = encodeRecord_(dictEncodeRecord)(Type_Data_RowList.RLProxy.value)(opts)(rec);
                              var l = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                              return Foreign_Object.insert(opts.fieldTransform(l))(encode_(dictEncode_)(opts)(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(rec)))(obj);
                          };
                      };
                  });
              };
          };
      };
  };
  var encodeOpts = function (dict) {
      return dict.encodeOpts;
  }; 
  var genericEncodeSum = function (dictGenericEncode) {
      return function (dictGenericEncode1) {
          return new GenericEncode(function (opts) {
              return function (v) {
                  if (v instanceof Data_Generic_Rep.Inl) {
                      return encodeOpts(dictGenericEncode)({
                          sumEncoding: opts.sumEncoding,
                          unwrapSingleConstructors: false,
                          unwrapSingleArguments: opts.unwrapSingleArguments,
                          fieldTransform: opts.fieldTransform
                      })(v.value0);
                  };
                  if (v instanceof Data_Generic_Rep.Inr) {
                      return encodeOpts(dictGenericEncode1)({
                          sumEncoding: opts.sumEncoding,
                          unwrapSingleConstructors: false,
                          unwrapSingleArguments: opts.unwrapSingleArguments,
                          fieldTransform: opts.fieldTransform
                      })(v.value0);
                  };
                  throw new Error("Failed pattern match at Foreign.Generic.Class line 119, column 1 - line 121, column 29: " + [ opts.constructor.name, v.constructor.name ]);
              };
          });
      };
  };
  var encodeArgs = function (dict) {
      return dict.encodeArgs;
  };
  var genericEncodeConstructor = function (dictIsSymbol) {
      return function (dictGenericEncodeArgs) {
          return new GenericEncode(function (opts) {
              return function (v) {
                  var unwrapArguments = function (v1) {
                      if (v1.length === 0) {
                          return Data_Maybe.Nothing.value;
                      };
                      if (v1.length === 1 && opts.unwrapSingleArguments) {
                          return new Data_Maybe.Just(v1[0]);
                      };
                      return new Data_Maybe.Just(Foreign.unsafeToForeign(v1));
                  };
                  var encodeArgsArray = function ($148) {
                      return unwrapArguments(Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray)(encodeArgs(dictGenericEncodeArgs)(opts)($148)));
                  };
                  var ctorName = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                  if (opts.unwrapSingleConstructors) {
                      return Data_Maybe.maybe(Foreign.unsafeToForeign({}))(Foreign.unsafeToForeign)(encodeArgsArray(v));
                  };
                  return Foreign.unsafeToForeign(Foreign_Object.union(Foreign_Object.singleton(opts.sumEncoding.value0.tagFieldName)(Foreign.unsafeToForeign(opts.sumEncoding.value0.constructorTagTransform(ctorName))))(Data_Maybe.maybe(Foreign_Object.empty)(Foreign_Object.singleton(opts.sumEncoding.value0.contentsFieldName))(encodeArgsArray(v))));
              };
          });
      };
  };
  var decode_Other = function (dictDecode) {
      return new Decode_(function (v) {
          return Foreign_Class.decode(dictDecode);
      });
  };
  var decode_ = function (dict) {
      return dict.decode_;
  };
  var genericDecodeArgsArgument = function (dictDecode_) {
      return new GenericDecodeArgs(function (v) {
          return function (v1) {
              return function (v2) {
                  if (v2 instanceof Data_List_Types.Cons) {
                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtIndex.create(v1))))(decode_(dictDecode_)(v)(v2.value0)))(function (v3) {
                          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))({
                              result: v3,
                              rest: v2.value1,
                              next: v1 + 1 | 0
                          });
                      });
                  };
                  return Foreign.fail(new Foreign.ForeignError("Not enough constructor arguments"));
              };
          };
      });
  };
  var decodeRecord_ = function (dict) {
      return dict.decodeRecord_;
  };
  var decode_Record = function (dictRowToList) {
      return function (dictDecodeRecord) {
          return new Decode_(function (opts) {
              return Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Function.flip(Record_Builder.build)({})))(decodeRecord_(dictDecodeRecord)(Type_Data_RowList.RLProxy.value)(opts));
          });
      };
  };
  var decodeRecordNil = new DecodeRecord(function (v) {
      return function (v1) {
          return function (v2) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Control_Category.identity(Record_Builder.categoryBuilder));
          };
      };
  });
  var decodeRecordCons = function (dictCons) {
      return function (dictDecodeRecord) {
          return function (dictIsSymbol) {
              return function (dictDecode_) {
                  return function (dictLacks) {
                      return new DecodeRecord(function (v) {
                          return function (opts) {
                              return function (f) {
                                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(decodeRecord_(dictDecodeRecord)(Type_Data_RowList.RLProxy.value)(opts)(f))(function (v1) {
                                      var l = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                                      var l_transformed = opts.fieldTransform(l);
                                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.index(Foreign_Index.indexString)(f)(l_transformed))(function (v2) {
                                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtProperty.create(l_transformed))))(decode_(dictDecode_)(opts)(v2)))(function (v3) {
                                              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(v1)(Record_Builder.insert(dictCons)(dictLacks)(dictIsSymbol)(Data_Symbol.SProxy.value)(v3)));
                                          });
                                      });
                                  });
                              };
                          };
                      });
                  };
              };
          };
      };
  };
  var decodeOpts = function (dict) {
      return dict.decodeOpts;
  };
  var genericDecodeSum = function (dictGenericDecode) {
      return function (dictGenericDecode1) {
          return new GenericDecode(function (opts) {
              return function (f) {
                  var opts$prime = {
                      unwrapSingleConstructors: false,
                      fieldTransform: opts.fieldTransform,
                      sumEncoding: opts.sumEncoding,
                      unwrapSingleArguments: opts.unwrapSingleArguments
                  };
                  return Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.Inl.create)(decodeOpts(dictGenericDecode)(opts$prime)(f)))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.Inr.create)(decodeOpts(dictGenericDecode1)(opts$prime)(f)));
              };
          });
      };
  };
  var decodeArgs = function (dict) {
      return dict.decodeArgs;
  };
  var countArgs = function (dict) {
      return dict.countArgs;
  };
  var genericDecodeConstructor = function (dictIsSymbol) {
      return function (dictGenericDecodeArgs) {
          return function (dictGenericCountArgs) {
              return new GenericDecode(function (opts) {
                  return function (f) {
                      var numArgs = countArgs(dictGenericCountArgs)(Type_Proxy["Proxy"].value);
                      var readArguments = function (args) {
                          if (numArgs instanceof Data_Either.Left) {
                              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(numArgs.value0);
                          };
                          if (numArgs instanceof Data_Either.Right && (numArgs.value0 === 1 && opts.unwrapSingleArguments)) {
                              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(decodeArgs(dictGenericDecodeArgs)(opts)(0)(Data_List.singleton(args)))(function (v) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_List["null"](v.rest))(Foreign.fail(new Foreign.ForeignError("Expected a single argument"))))(function () {
                                      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v.result);
                                  });
                              });
                          };
                          if (numArgs instanceof Data_Either.Right) {
                              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign.readArray(args))(function (v) {
                                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(decodeArgs(dictGenericDecodeArgs)(opts)(0)(Data_List.fromFoldable(Data_Foldable.foldableArray)(v)))(function (v1) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_List["null"](v1.rest))(Foreign.fail(new Foreign.ForeignError("Expected " + (Data_Show.show(Data_Show.showInt)(numArgs.value0) + " constructor arguments")))))(function () {
                                          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v1.result);
                                      });
                                  });
                              });
                          };
                          throw new Error("Failed pattern match at Foreign.Generic.Class line 75, column 9 - line 87, column 24: " + [ numArgs.constructor.name ]);
                      };
                      var ctorName = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                      if (opts.unwrapSingleConstructors) {
                          return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.Constructor)(readArguments(f));
                      };
                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtProperty.create(opts.sumEncoding.value0.tagFieldName))))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.index(Foreign_Index.indexString)(f)(opts.sumEncoding.value0.tagFieldName))(Foreign.readString))(function (v) {
                          var expected = opts.sumEncoding.value0.constructorTagTransform(ctorName);
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v === expected)(Foreign.fail(new Foreign.ForeignError("Expected " + (Data_Show.show(Data_Show.showString)(expected) + " tag")))))(function () {
                              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v);
                          });
                      })))(function (v) {
                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtProperty.create(opts.sumEncoding.value0.contentsFieldName))))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.index(Foreign_Index.indexString)(f)(opts.sumEncoding.value0.contentsFieldName))(readArguments)))(function (v1) {
                              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v1);
                          });
                      });
                  };
              });
          };
      };
  };
  exports["countArgs"] = countArgs;
  exports["decodeArgs"] = decodeArgs;
  exports["decodeOpts"] = decodeOpts;
  exports["decodeRecord_"] = decodeRecord_;
  exports["decode_"] = decode_;
  exports["encodeArgs"] = encodeArgs;
  exports["encodeOpts"] = encodeOpts;
  exports["encodeRecord_"] = encodeRecord_;
  exports["encode_"] = encode_;
  exports["GenericDecode"] = GenericDecode;
  exports["GenericEncode"] = GenericEncode;
  exports["GenericDecodeArgs"] = GenericDecodeArgs;
  exports["GenericEncodeArgs"] = GenericEncodeArgs;
  exports["GenericCountArgs"] = GenericCountArgs;
  exports["Decode_"] = Decode_;
  exports["Encode_"] = Encode_;
  exports["DecodeRecord"] = DecodeRecord;
  exports["EncodeRecord"] = EncodeRecord;
  exports["genericDecodeConstructor"] = genericDecodeConstructor;
  exports["genericEncodeConstructor"] = genericEncodeConstructor;
  exports["genericDecodeSum"] = genericDecodeSum;
  exports["genericEncodeSum"] = genericEncodeSum;
  exports["genericDecodeArgsNoArguments"] = genericDecodeArgsNoArguments;
  exports["genericEncodeArgsNoArguments"] = genericEncodeArgsNoArguments;
  exports["genericDecodeArgsArgument"] = genericDecodeArgsArgument;
  exports["genericEncodeArgsArgument"] = genericEncodeArgsArgument;
  exports["genericCountArgsNoArguments"] = genericCountArgsNoArguments;
  exports["genericCountArgsArgument"] = genericCountArgsArgument;
  exports["decode_Record"] = decode_Record;
  exports["decode_Other"] = decode_Other;
  exports["encode_Record"] = encode_Record;
  exports["encode_Other"] = encode_Other;
  exports["decodeRecordNil"] = decodeRecordNil;
  exports["encodeRecordNil"] = encodeRecordNil;
  exports["decodeRecordCons"] = decodeRecordCons;
  exports["encodeRecordCons"] = encodeRecordCons;
})(PS["Foreign.Generic.Class"] = PS["Foreign.Generic.Class"] || {});
(function(exports) {
    "use strict";

  exports.parseJSONImpl = function (str) {
    return JSON.parse(str);
  };
})(PS["Foreign.JSON"] = PS["Foreign.JSON"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Foreign.JSON"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List_Types = PS["Data.List.Types"];
  var Effect_Exception = PS["Effect.Exception"];
  var Effect_Uncurried = PS["Effect.Uncurried"];
  var Effect_Unsafe = PS["Effect.Unsafe"];
  var Foreign = PS["Foreign"];
  var Prelude = PS["Prelude"];                 
  var parseJSON = function ($0) {
      return Control_Monad_Except_Trans.ExceptT(Data_Identity.Identity(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function ($1) {
          return Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(Foreign.ForeignError.create(Effect_Exception.message($1)));
      })(Effect_Unsafe.unsafePerformEffect(Effect_Exception["try"](function () {
          return $foreign.parseJSONImpl($0);
      })))));
  };
  exports["parseJSON"] = parseJSON;
})(PS["Foreign.JSON"] = PS["Foreign.JSON"] || {});
(function(exports) {
  /* globals exports, JSON */
  "use strict";

  exports.unsafeStringify = function (x) {
    return JSON.stringify(x);
  };
})(PS["Global.Unsafe"] = PS["Global.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Global.Unsafe"];
  exports["unsafeStringify"] = $foreign.unsafeStringify;
})(PS["Global.Unsafe"] = PS["Global.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Identity = PS["Data.Identity"];
  var Foreign = PS["Foreign"];
  var Foreign_Class = PS["Foreign.Class"];
  var Foreign_Generic_Class = PS["Foreign.Generic.Class"];
  var Foreign_Generic_Types = PS["Foreign.Generic.Types"];
  var Foreign_JSON = PS["Foreign.JSON"];
  var Global_Unsafe = PS["Global.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var genericEncode = function (dictGeneric) {
      return function (dictGenericEncode) {
          return function (opts) {
              return function ($10) {
                  return Foreign_Generic_Class.encodeOpts(dictGenericEncode)(opts)(Data_Generic_Rep.from(dictGeneric)($10));
              };
          };
      };
  };
  var genericEncodeJSON = function (dictGeneric) {
      return function (dictGenericEncode) {
          return function (opts) {
              return function ($11) {
                  return Global_Unsafe.unsafeStringify(genericEncode(dictGeneric)(dictGenericEncode)(opts)($11));
              };
          };
      };
  };
  var genericDecode = function (dictGeneric) {
      return function (dictGenericDecode) {
          return function (opts) {
              return function ($12) {
                  return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.to(dictGeneric))(Foreign_Generic_Class.decodeOpts(dictGenericDecode)(opts)($12));
              };
          };
      };
  };
  var genericDecodeJSON = function (dictGeneric) {
      return function (dictGenericDecode) {
          return function (opts) {
              return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(genericDecode(dictGeneric)(dictGenericDecode)(opts))(Foreign_JSON.parseJSON);
          };
      };
  };
  var defaultOptions = {
      sumEncoding: new Foreign_Generic_Types.TaggedObject({
          tagFieldName: "tag",
          contentsFieldName: "contents",
          constructorTagTransform: Control_Category.identity(Control_Category.categoryFn)
      }),
      unwrapSingleConstructors: false,
      unwrapSingleArguments: true,
      fieldTransform: Control_Category.identity(Control_Category.categoryFn)
  };
  exports["defaultOptions"] = defaultOptions;
  exports["genericDecode"] = genericDecode;
  exports["genericEncode"] = genericEncode;
  exports["genericDecodeJSON"] = genericDecodeJSON;
  exports["genericEncodeJSON"] = genericEncodeJSON;
})(PS["Foreign.Generic"] = PS["Foreign.Generic"] || {});
(function(exports) {
    "use strict";
  const HttpProvider = require('ethjs-provider-http');

  exports.httpProvider = function (providerUrl) {
      return function () {
          if (typeof web3 !== 'undefined' && web3.currentProvider.host == providerUrl) {
             return web3.currentProvider;
          } else {
             return new HttpProvider(providerUrl);
          }
      };
  };
})(PS["Network.Ethereum.Web3.Types.Provider"] = PS["Network.Ethereum.Web3.Types.Provider"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Network.Ethereum.Web3.Types.Provider"];
  var Effect = PS["Effect"];
  exports["httpProvider"] = $foreign.httpProvider;
})(PS["Network.Ethereum.Web3.Types.Provider"] = PS["Network.Ethereum.Web3.Types.Provider"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Error_Util = PS["Control.Error.Util"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Fork_Class = PS["Control.Monad.Fork.Class"];
  var Control_Monad_Reader = PS["Control.Monad.Reader"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Eq = PS["Data.Generic.Rep.Eq"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Lens_Lens = PS["Data.Lens.Lens"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Exception = PS["Effect.Exception"];
  var Foreign = PS["Foreign"];
  var Foreign_Class = PS["Foreign.Class"];
  var Foreign_Generic = PS["Foreign.Generic"];
  var Foreign_Generic_Class = PS["Foreign.Generic.Class"];
  var Foreign_Index = PS["Foreign.Index"];
  var Network_Ethereum_Core_BigNumber = PS["Network.Ethereum.Core.BigNumber"];
  var Network_Ethereum_Core_HexString = PS["Network.Ethereum.Core.HexString"];
  var Network_Ethereum_Core_Signatures = PS["Network.Ethereum.Core.Signatures"];
  var Network_Ethereum_Types = PS["Network.Ethereum.Types"];
  var Network_Ethereum_Web3_Types_EtherUnit = PS["Network.Ethereum.Web3.Types.EtherUnit"];
  var Network_Ethereum_Web3_Types_Provider = PS["Network.Ethereum.Web3.Types.Provider"];
  var Network_Ethereum_Web3_Types_TokenUnit = PS["Network.Ethereum.Web3.Types.TokenUnit"];
  var Prelude = PS["Prelude"];
  var Simple_JSON = PS["Simple.JSON"];
  var Rpc = (function () {
      function Rpc(value0) {
          this.value0 = value0;
      };
      Rpc.create = function (value0) {
          return new Rpc(value0);
      };
      return Rpc;
  })();
  var RemoteError = (function () {
      function RemoteError(value0) {
          this.value0 = value0;
      };
      RemoteError.create = function (value0) {
          return new RemoteError(value0);
      };
      return RemoteError;
  })();
  var ParserError = (function () {
      function ParserError(value0) {
          this.value0 = value0;
      };
      ParserError.create = function (value0) {
          return new ParserError(value0);
      };
      return ParserError;
  })();
  var NullError = (function () {
      function NullError() {

      };
      NullError.value = new NullError();
      return NullError;
  })();
  var Response = function (x) {
      return x;
  };   
  var BlockNumber = function (x) {
      return x;
  };
  var Latest = (function () {
      function Latest() {

      };
      Latest.value = new Latest();
      return Latest;
  })();
  var Pending = (function () {
      function Pending() {

      };
      Pending.value = new Pending();
      return Pending;
  })();
  var Earliest = (function () {
      function Earliest() {

      };
      Earliest.value = new Earliest();
      return Earliest;
  })();
  var BN = (function () {
      function BN(value0) {
          this.value0 = value0;
      };
      BN.create = function (value0) {
          return new BN(value0);
      };
      return BN;
  })();                                                                        
  var monadThrowWeb3 = Control_Monad_Reader_Trans.monadThrowReaderT(Effect_Aff.monadThrowAff);
  var monadEffectWeb3 = Control_Monad_Reader_Trans.monadEffectReader(Effect_Aff.monadEffectAff);
  var monadAskWeb3 = Control_Monad_Reader_Trans.monadAskReaderT(Effect_Aff.monadAff);
  var monadAffWeb3 = Effect_Aff_Class.monadAffReader(Effect_Aff_Class.monadAffAff);
  var mkRequest = function (name) {
      return function (reqId) {
          return function (ps) {
              return {
                  jsonrpc: "2.0",
                  id: reqId,
                  method: name,
                  params: ps
              };
          };
      };
  };
  var genericWeb3Error = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof Rpc) {
          return new Data_Generic_Rep.Inl(x.value0);
      };
      if (x instanceof RemoteError) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
      };
      if (x instanceof ParserError) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
      };
      if (x instanceof NullError) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)));
      };
      throw new Error("Failed pattern match at Network.Ethereum.Web3.Types.Types line 627, column 8 - line 627, column 56: " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return new Rpc(x.value0);
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return new RemoteError(x.value0.value0);
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
          return new ParserError(x.value0.value0.value0);
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr)) {
          return NullError.value;
      };
      throw new Error("Failed pattern match at Network.Ethereum.Web3.Types.Types line 627, column 8 - line 627, column 56: " + [ x.constructor.name ]);
  });   
  var genericRpcError = new Data_Generic_Rep.Generic(function (x) {
      return x;
  }, function (x) {
      return x;
  });
  var showRpcError = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericRpcError)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "code";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "message";
  }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_Show.showInt))))(new Data_Symbol.IsSymbol(function () {
      return "RpcError";
  }))));
  var showWeb3Error = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericWeb3Error)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(showRpcError))(new Data_Symbol.IsSymbol(function () {
      return "Rpc";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
      return "RemoteError";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
      return "ParserError";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "NullError";
  })))))));
  var encodeRpcError = new Foreign_Class.Encode(function (x) {
      return Foreign_Generic.genericEncode(genericRpcError)(Foreign_Generic_Class.genericEncodeConstructor(new Data_Symbol.IsSymbol(function () {
          return "RpcError";
      }))(Foreign_Generic_Class.genericEncodeArgsArgument(Foreign_Generic_Class.encode_Record()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
          return "message";
      }))(Foreign_Generic_Class.encode_Other(Foreign_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
          return "code";
      }))(Foreign_Generic_Class.encode_Other(Foreign_Class.intEncode))))))({
          sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
          unwrapSingleConstructors: true,
          unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
          fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
      })(x);
  });
  var encodeBlockNumber = Network_Ethereum_Core_BigNumber.encodeBigNumber;
  var encodeChainCursor = new Foreign_Class.Encode(function (cm) {
      if (cm instanceof Latest) {
          return Foreign_Class.encode(Foreign_Class.stringEncode)("latest");
      };
      if (cm instanceof Pending) {
          return Foreign_Class.encode(Foreign_Class.stringEncode)("pending");
      };
      if (cm instanceof Earliest) {
          return Foreign_Class.encode(Foreign_Class.stringEncode)("earliest");
      };
      if (cm instanceof BN) {
          return Foreign_Class.encode(encodeBlockNumber)(cm.value0);
      };
      throw new Error("Failed pattern match at Network.Ethereum.Web3.Types.Types line 131, column 15 - line 135, column 21: " + [ cm.constructor.name ]);
  }); 
  var decodeRpcError = new Foreign_Class.Decode(function (x) {
      return Foreign_Generic.genericDecode(genericRpcError)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
          return "RpcError";
      }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Record()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
          return "message";
      }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
          return "code";
      }))(Foreign_Generic_Class.decode_Other(Foreign_Class.intDecode))())))(Foreign_Generic_Class.genericCountArgsArgument))({
          sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
          unwrapSingleConstructors: true,
          unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
          fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
      })(x);
  });
  var decodeWeb3Error = new Foreign_Class.Decode(function (x) {
      var nullParser = Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.readProp("result")(x))(function (v) {
          var $264 = Foreign.isNull(v);
          if ($264) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(NullError.value);
          };
          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign.readString(v))(function (r) {
              return Foreign.fail(new Foreign.TypeMismatch("NullError", r));
          });
      });
      return Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Rpc.create)(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.readProp("error")(x))(Foreign_Class.decode(decodeRpcError))))(nullParser);
  });
  var runWeb3 = function (p) {
      return function (v) {
          var parseMsg = function (msg) {
              return Control_Error_Util.hush(Control_Monad_Except.runExcept(Foreign_Generic.genericDecodeJSON(genericWeb3Error)(Foreign_Generic_Class.genericDecodeSum(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
                  return "Rpc";
              }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Other(decodeRpcError)))(Foreign_Generic_Class.genericCountArgsArgument))(Foreign_Generic_Class.genericDecodeSum(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
                  return "RemoteError";
              }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode)))(Foreign_Generic_Class.genericCountArgsArgument))(Foreign_Generic_Class.genericDecodeSum(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
                  return "ParserError";
              }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode)))(Foreign_Generic_Class.genericCountArgsArgument))(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
                  return "NullError";
              }))(Foreign_Generic_Class.genericDecodeArgsNoArguments)(Foreign_Generic_Class.genericCountArgsNoArguments)))))(Foreign_Generic.defaultOptions)(msg)));
          };
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff.attempt(Control_Monad_Reader_Trans.runReaderT(v)(p)))(function (v1) {
              if (v1 instanceof Data_Either.Left) {
                  return Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(v1.value0))(function ($303) {
                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Either.Left.create($303));
                  })(parseMsg(Effect_Exception.message(v1.value0)));
              };
              if (v1 instanceof Data_Either.Right) {
                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(new Data_Either.Right(v1.value0));
              };
              throw new Error("Failed pattern match at Network.Ethereum.Web3.Types.Types line 383, column 61 - line 385, column 28: " + [ v1.constructor.name ]);
          });
      };
  };
  var decodeResponse$prime = function (dictDecode) {
      return new Foreign_Class.Decode(function (a) {
          return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Response)(Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Either.Left.create)(Foreign_Class.decode(decodeWeb3Error)(a)))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Either.Right.create)(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.readProp("result")(a))(Foreign_Class.decode(dictDecode)))));
      });
  }; 
  var bindWeb3 = Control_Monad_Reader_Trans.bindReaderT(Effect_Aff.bindAff);
  var applicativeWeb3 = Control_Monad_Reader_Trans.applicativeReaderT(Effect_Aff.applicativeAff);
  exports["BlockNumber"] = BlockNumber;
  exports["Latest"] = Latest;
  exports["Pending"] = Pending;
  exports["Earliest"] = Earliest;
  exports["BN"] = BN;
  exports["runWeb3"] = runWeb3;
  exports["mkRequest"] = mkRequest;
  exports["Response"] = Response;
  exports["Rpc"] = Rpc;
  exports["RemoteError"] = RemoteError;
  exports["ParserError"] = ParserError;
  exports["NullError"] = NullError;
  exports["encodeBlockNumber"] = encodeBlockNumber;
  exports["encodeChainCursor"] = encodeChainCursor;
  exports["applicativeWeb3"] = applicativeWeb3;
  exports["bindWeb3"] = bindWeb3;
  exports["monadEffectWeb3"] = monadEffectWeb3;
  exports["monadAffWeb3"] = monadAffWeb3;
  exports["monadThrowWeb3"] = monadThrowWeb3;
  exports["monadAskWeb3"] = monadAskWeb3;
  exports["decodeResponse'"] = decodeResponse$prime;
  exports["genericRpcError"] = genericRpcError;
  exports["showRpcError"] = showRpcError;
  exports["decodeRpcError"] = decodeRpcError;
  exports["encodeRpcError"] = encodeRpcError;
  exports["genericWeb3Error"] = genericWeb3Error;
  exports["showWeb3Error"] = showWeb3Error;
  exports["decodeWeb3Error"] = decodeWeb3Error;
})(PS["Network.Ethereum.Web3.Types.Types"] = PS["Network.Ethereum.Web3.Types.Types"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Chanterelle.Internal.Utils.Json"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Error_Util = PS["Control.Error.Util"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Combinators = PS["Data.Argonaut.Decode.Combinators"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Foreign_Object = PS["Foreign.Object"];
  var Network_Ethereum_Core_BigNumber = PS["Network.Ethereum.Core.BigNumber"];
  var Network_Ethereum_Core_HexString = PS["Network.Ethereum.Core.HexString"];
  var Network_Ethereum_Core_Signatures = PS["Network.Ethereum.Core.Signatures"];
  var Network_Ethereum_Web3 = PS["Network.Ethereum.Web3"];
  var Network_Ethereum_Web3_Types_Types = PS["Network.Ethereum.Web3.Types.Types"];
  var Prelude = PS["Prelude"];                 
  var gfoWithDecoder = function (decode) {
      return function (obj) {
          return function (key) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getFieldOptional(Data_Argonaut_Decode_Class.decodeJsonJson)(obj)(key))(Data_Maybe.maybe(Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value))(function ($9) {
                  return Data_Functor.map(Data_Either.functorEither)(Data_Maybe.Just.create)(decode($9));
              }));
          };
      };
  };
  var gfWithDecoder = function (decode) {
      return function (obj) {
          return function (k) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonJson)(obj)(k))(decode);
          };
      };
  };
  var encodeJsonHexString = function ($10) {
      return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(Data_Show.show(Network_Ethereum_Core_HexString.showHexString)($10));
  };
  var encodeJsonConfigBigNumber = function ($11) {
      return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonInt)(Network_Ethereum_Core_BigNumber.unsafeToInt($11));
  };
  var encodeJsonConfigBlockNumber = function (v) {
      return encodeJsonConfigBigNumber(v);
  };
  var encodeJsonBigNumber = function (n) {
      return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)("0x" + Network_Ethereum_Core_BigNumber.toString(Data_Int.hexadecimal)(n));
  };
  var encodeJsonAddress = function ($12) {
      return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(Data_Show.show(Network_Ethereum_Core_HexString.showHexString)(Network_Ethereum_Core_Signatures.unAddress($12)));
  };
  var decodeJsonHexString = function (j) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString)(j))(function ($13) {
          return Control_Error_Util.note("HexString is not a valid Hex String")(Network_Ethereum_Core_HexString.mkHexString($13));
      });
  };
  var decodeJsonBigNumber = function (j) {
      var decodeFromString = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonMaybe(Data_Argonaut_Decode_Class.decodeJsonString))(j))(function ($14) {
          return Control_Error_Util.note("BigNumber is not a Hex String")((function (v) {
              return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Network_Ethereum_Core_BigNumber.parseBigNumber(Data_Int.hexadecimal))(v);
          })($14));
      });
      var decodeFromNumber = Data_Functor.map(Data_Either.functorEither)(Network_Ethereum_Core_BigNumber.embed(Network_Ethereum_Core_BigNumber["embedInt'"]))(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonInt)(j));
      return Control_Alt.alt(Data_Either.altEither)(Control_Alt.alt(Data_Either.altEither)(decodeFromString)(decodeFromNumber))(new Data_Either.Left("Value is neither a String nor Number"));
  };
  var decodeJsonBlockNumber = function ($15) {
      return Data_Functor.map(Data_Either.functorEither)(Network_Ethereum_Web3_Types_Types.BlockNumber)(decodeJsonBigNumber($15));
  };
  var decodeJsonAddress = function (j) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString)(j))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Control_Error_Util.note("Address is not a valid HexString")(Network_Ethereum_Core_HexString.mkHexString(v)))(function (v1) {
              return Control_Error_Util.note("Address is malformed")(Network_Ethereum_Core_Signatures.mkAddress(v1));
          });
      });
  };
  exports["decodeJsonBlockNumber"] = decodeJsonBlockNumber;
  exports["decodeJsonBigNumber"] = decodeJsonBigNumber;
  exports["encodeJsonBigNumber"] = encodeJsonBigNumber;
  exports["encodeJsonConfigBigNumber"] = encodeJsonConfigBigNumber;
  exports["encodeJsonConfigBlockNumber"] = encodeJsonConfigBlockNumber;
  exports["decodeJsonHexString"] = decodeJsonHexString;
  exports["encodeJsonHexString"] = encodeJsonHexString;
  exports["encodeJsonAddress"] = encodeJsonAddress;
  exports["decodeJsonAddress"] = decodeJsonAddress;
  exports["gfWithDecoder"] = gfWithDecoder;
  exports["gfoWithDecoder"] = gfoWithDecoder;
  exports["jsonStringifyWithSpaces"] = $foreign.jsonStringifyWithSpaces;
})(PS["Chanterelle.Internal.Utils.Json"] = PS["Chanterelle.Internal.Utils.Json"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Foreign_Object = PS["Foreign.Object"];
  var Prelude = PS["Prelude"];                 
  var extend = function (dictEncodeJson) {
      return function (v) {
          return function ($11) {
              return Data_Argonaut_Core.caseJsonObject(Data_Argonaut_Core.jsonSingletonObject(v.value0)(v.value1))(function ($12) {
                  return Data_Argonaut_Core.fromObject(Foreign_Object.insert(v.value0)(v.value1)($12));
              })(Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson)($11));
          };
      };
  };
  var assoc = function (dictEncodeJson) {
      return function (k) {
          return function ($13) {
              return Data_Tuple.Tuple.create(k)(Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson)($13));
          };
      };
  };
  exports["assoc"] = assoc;
  exports["extend"] = extend;
})(PS["Data.Argonaut.Encode.Combinators"] = PS["Data.Argonaut.Encode.Combinators"] || {});
(function(exports) {
    "use strict";
  var path =require("path"); 

  exports.normalize = path.normalize;

  exports.concat = function (segments) {
    return path.join.apply(this, segments);
  };

  exports.resolve = function (from) {
    return function (to) {
      return function () {
        return path.resolve.apply(this, from.concat([to]));
      };
    };
  };

  exports.dirname = function (p) {
    return path.normalize(path.dirname(p));
  };

  exports.basename = path.basename;

  exports.basenameWithoutExt = function (p) {
    return function (ext) {
      return path.basename(p, ext);
    };
  };

  exports.extname = path.extname;

  exports.sep = path.sep;            

  exports.parse = path.parse;

  exports.isAbsolute = path.isAbsolute;
})(PS["Node.Path"] = PS["Node.Path"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Node.Path"];
  var Effect = PS["Effect"];
  exports["normalize"] = $foreign.normalize;
  exports["concat"] = $foreign.concat;
  exports["resolve"] = $foreign.resolve;
  exports["dirname"] = $foreign.dirname;
  exports["basenameWithoutExt"] = $foreign.basenameWithoutExt;
  exports["extname"] = $foreign.extname;
  exports["sep"] = $foreign.sep;
  exports["parse"] = $foreign.parse;
  exports["isAbsolute"] = $foreign.isAbsolute;
})(PS["Node.Path"] = PS["Node.Path"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Chanterelle_Internal_Utils_Json = PS["Chanterelle.Internal.Utils.Json"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Combinators = PS["Data.Argonaut.Decode.Combinators"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Encode_Combinators = PS["Data.Argonaut.Encode.Combinators"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_String = PS["Data.String"];
  var Data_String_Common = PS["Data.String.Common"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Effect_Aff = PS["Effect.Aff"];
  var Foreign_Object = PS["Foreign.Object"];
  var Network_Ethereum_Core_HexString = PS["Network.Ethereum.Core.HexString"];
  var Network_Ethereum_Core_Signatures = PS["Network.Ethereum.Core.Signatures"];
  var Network_Ethereum_Web3 = PS["Network.Ethereum.Web3"];
  var Node_Path = PS["Node.Path"];
  var Prelude = PS["Prelude"];
  var AllNetworks = (function () {
      function AllNetworks() {

      };
      AllNetworks.value = new AllNetworks();
      return AllNetworks;
  })();
  var AllDefinedNetworks = (function () {
      function AllDefinedNetworks() {

      };
      AllDefinedNetworks.value = new AllDefinedNetworks();
      return AllDefinedNetworks;
  })();
  var SpecificRefs = (function () {
      function SpecificRefs(value0) {
          this.value0 = value0;
      };
      SpecificRefs.create = function (value0) {
          return new SpecificRefs(value0);
      };
      return SpecificRefs;
  })();
  var InjectableWithSourceCode = (function () {
      function InjectableWithSourceCode(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      InjectableWithSourceCode.create = function (value0) {
          return function (value1) {
              return new InjectableWithSourceCode(value0, value1);
          };
      };
      return InjectableWithSourceCode;
  })();
  var InjectableWithBytecode = (function () {
      function InjectableWithBytecode(value0) {
          this.value0 = value0;
      };
      InjectableWithBytecode.create = function (value0) {
          return new InjectableWithBytecode(value0);
      };
      return InjectableWithBytecode;
  })();
  var FixedLibrary = (function () {
      function FixedLibrary(value0) {
          this.value0 = value0;
      };
      FixedLibrary.create = function (value0) {
          return new FixedLibrary(value0);
      };
      return FixedLibrary;
  })();
  var FixedLibraryWithNetwork = (function () {
      function FixedLibraryWithNetwork(value0) {
          this.value0 = value0;
      };
      FixedLibraryWithNetwork.create = function (value0) {
          return new FixedLibraryWithNetwork(value0);
      };
      return FixedLibraryWithNetwork;
  })();
  var InjectableLibrary = (function () {
      function InjectableLibrary(value0) {
          this.value0 = value0;
      };
      InjectableLibrary.create = function (value0) {
          return new InjectableLibrary(value0);
      };
      return InjectableLibrary;
  })();
  var Dependency = function (x) {
      return x;
  };
  var ChanterelleModule = (function () {
      function ChanterelleModule(value0) {
          this.value0 = value0;
      };
      ChanterelleModule.create = function (value0) {
          return new ChanterelleModule(value0);
      };
      return ChanterelleModule;
  })();
  var AllChains = (function () {
      function AllChains() {

      };
      AllChains.value = new AllChains();
      return AllChains;
  })();
  var SpecificChains = (function () {
      function SpecificChains(value0) {
          this.value0 = value0;
      };
      SpecificChains.create = function (value0) {
          return new SpecificChains(value0);
      };
      return SpecificChains;
  })();
  var Networks = function (x) {
      return x;
  };
  var ChanterelleProject = (function () {
      function ChanterelleProject(value0) {
          this.value0 = value0;
      };
      ChanterelleProject.create = function (value0) {
          return new ChanterelleProject(value0);
      };
      return ChanterelleProject;
  })();                                                  
  var resolveNetworkRefs = function (refs) {
      return function (definedNets) {
          var predefinedNets = [ {
              name: "mainnet",
              providerUrl: "https://mainnet.infura.io",
              allowedChains: new SpecificChains([ "1" ])
          }, {
              name: "ropsten",
              providerUrl: "https://ropsten.infura.io",
              allowedChains: new SpecificChains([ "3" ])
          }, {
              name: "rinkeby",
              providerUrl: "https://rinkeby.infura.io",
              allowedChains: new SpecificChains([ "4" ])
          }, {
              name: "kovan",
              providerUrl: "https://kovan.infura.io",
              allowedChains: new SpecificChains([ "42" ])
          }, {
              name: "localhost",
              providerUrl: "http://localhost:8545/",
              allowedChains: AllChains.value
          } ];
          var predefinedNetsWithoutOverrides = Data_Array.filter(function (v) {
              return Data_Array["null"](Data_Array.filter(function (v1) {
                  return v.name === v1.name;
              })(definedNets));
          })(predefinedNets);
          var mergedNetworks = Data_Semigroup.append(Data_Semigroup.semigroupArray)(definedNets)(predefinedNetsWithoutOverrides);
          if (refs instanceof AllNetworks) {
              return mergedNetworks;
          };
          if (refs instanceof AllDefinedNetworks) {
              return definedNets;
          };
          if (refs instanceof SpecificRefs) {
              return Networks(Data_Array.filter(function (v) {
                  return Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqString)(v.name)(refs.value0);
              })(mergedNetworks));
          };
          throw new Error("Failed pattern match at Chanterelle.Internal.Types.Project line 186, column 39 - line 189, column 106: " + [ refs.constructor.name ]);
      };
  };
  var networkIDFitsChainSpec = function (v) {
      return function (v1) {
          if (v instanceof AllChains) {
              return true;
          };
          if (v instanceof SpecificChains) {
              return Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqString)(v1)(v.value0);
          };
          throw new Error("Failed pattern match at Chanterelle.Internal.Types.Project line 115, column 1 - line 115, column 57: " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var monoidNetworks = Data_Monoid.monoidArray;   
  var monoidLibraries = Data_Monoid.monoidArray;
  var isFixedLibrary = function (v) {
      if (v instanceof FixedLibrary) {
          return true;
      };
      return false;
  }; 
  var encodeJsonSolcOptimizerSettings = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
      return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("enabled")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJBoolean)(v.enabled)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("runs")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonInt)(v.runs)))(Data_Argonaut_Core.jsonEmptyObject));
  });
  var defaultSolcOptimizerSettings = {
      enabled: false,
      runs: 200
  };
  var decodeJsonSolcOptimizerSettings = new Data_Argonaut_Decode_Class.DecodeJson(function (j) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(j))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_Maybe.fromMaybe(defaultSolcOptimizerSettings.enabled))(Data_Argonaut_Decode_Combinators.getFieldOptional(Data_Argonaut_Decode_Class.decodeJsonBoolean)(v)("enabled")))(function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_Maybe.fromMaybe(defaultSolcOptimizerSettings.runs))(Data_Argonaut_Decode_Combinators.getFieldOptional(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("runs")))(function (v2) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                      enabled: v1,
                      runs: v2
                  });
              });
          });
      });
  });
  var decodeJsonNetworkRefs = new Data_Argonaut_Decode_Class.DecodeJson(function (j) {
      var decodeStringy = function (v) {
          if (v === "*") {
              return new Data_Either.Right(AllDefinedNetworks.value);
          };
          if (v === "**") {
              return new Data_Either.Right(AllNetworks.value);
          };
          return new Data_Either.Left("Not * or **");
      };
      return Control_Alt.alt(Data_Either.altEither)(Control_Alt.alt(Data_Either.altEither)(Data_Functor.map(Data_Either.functorEither)(SpecificRefs.create)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonString))(j)))(Control_Bind.bindFlipped(Data_Either.bindEither)(decodeStringy)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString)(j))))(new Data_Either.Left("Invalid NetworkRef"));
  });                                                                    
  var decodeJsonInjectableLibraryCode = new Data_Argonaut_Decode_Class.DecodeJson(function (d) {
      var decodeSourceCode = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(d))(function (o) {
          return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(InjectableWithSourceCode.create)(Data_Argonaut_Decode_Combinators.getFieldOptional(Data_Argonaut_Decode_Class.decodeJsonString)(o)("root")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(o)("file"));
      });
      var decodeBytecode = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(d))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Chanterelle_Internal_Utils_Json.gfWithDecoder(Chanterelle_Internal_Utils_Json.decodeJsonHexString)(v)("bytecode"))(function (v1) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new InjectableWithBytecode(v1));
          });
      });
      return Control_Alt.alt(Data_Either.altEither)(Control_Alt.alt(Data_Either.altEither)(decodeSourceCode)(decodeBytecode))(new Data_Either.Left("not a valid InjectableLibrarySource"));
  });
  var decodeJsonLibraries = new Data_Argonaut_Decode_Class.DecodeJson(function (j) {
      var failDramatically = function (v) {
          return new Data_Either.Left("Malformed library descriptor for " + v.value0);
      };
      var decodeInjectableLibrary = function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(v.value1))(function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(Chanterelle_Internal_Utils_Json.gfWithDecoder(Chanterelle_Internal_Utils_Json.decodeJsonAddress)(v1)("address"))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonInjectableLibraryCode)(v1)("code"))(function (v3) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new InjectableLibrary({
                          name: v.value0,
                          address: v2,
                          code: v3
                      }));
                  });
              });
          });
      };
      var decodeFixedLibraryWithNetwork = function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(v.value1))(function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(Chanterelle_Internal_Utils_Json.gfWithDecoder(Chanterelle_Internal_Utils_Json.decodeJsonAddress)(v1)("address"))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonNetworkRefs)(v1)("via"))(function (v3) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new FixedLibraryWithNetwork({
                          name: v.value0,
                          address: v2,
                          networks: v3
                      }));
                  });
              });
          });
      };
      var decodeFixedLibrary = function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Chanterelle_Internal_Utils_Json.decodeJsonAddress(v.value1))(function (v1) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new FixedLibrary({
                  name: v.value0,
                  address: v1
              }));
          });
      };
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(j))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable["for"](Data_Either.applicativeEither)(Data_Traversable.traversableArray)(Foreign_Object.toUnfoldable(Data_Unfoldable.unfoldableArray)(v))(function (t) {
              return Control_Alt.alt(Data_Either.altEither)(Control_Alt.alt(Data_Either.altEither)(Control_Alt.alt(Data_Either.altEither)(decodeFixedLibrary(t))(decodeFixedLibraryWithNetwork(t)))(decodeInjectableLibrary(t)))(failDramatically(t));
          }))(function (v1) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(v1);
          });
      });
  });
  var decodeJsonDependency = new Data_Argonaut_Decode_Class.DecodeJson(function (d) {
      return Data_Functor.map(Data_Either.functorEither)(Dependency)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString)(d));
  });
  var decodeJsonChainSpec = new Data_Argonaut_Decode_Class.DecodeJson(function (j) {
      var decodeStr = Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString)(j);
      var decodeSpecificChains = Control_Bind.bind(Data_Either.bindEither)(decodeStr)(function (s) {
          return Data_Functor.map(Data_Either.functorEither)(SpecificChains.create)(Data_Traversable["for"](Data_Either.applicativeEither)(Data_Traversable.traversableArray)(Data_String_Common.split(",")(s))(Control_Applicative.pure(Data_Either.applicativeEither)));
      });
      var decodeAllChains = Control_Bind.bind(Data_Either.bindEither)(decodeStr)(function (s) {
          var $205 = s === "*";
          if ($205) {
              return new Data_Either.Right(AllChains.value);
          };
          return new Data_Either.Left("Not * for AllChains");
      });
      return Control_Alt.alt(Data_Either.altEither)(Control_Alt.alt(Data_Either.altEither)(decodeAllChains)(decodeSpecificChains))(new Data_Either.Left("Invalid chain specifier"));
  });
  var decodeJsonNetworks = new Data_Argonaut_Decode_Class.DecodeJson(function (j) {
      var decodeNetwork = function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(v.value1))(function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v1)("url"))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonChainSpec)(v1)("chains"))(function (v3) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          name: v.value0,
                          providerUrl: v2,
                          allowedChains: v3
                      });
                  });
              });
          });
      };
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(j))(function (o) {
          return Data_Functor.map(Data_Either.functorEither)(Networks)(Data_Traversable["for"](Data_Either.applicativeEither)(Data_Traversable.traversableArray)(Foreign_Object.toUnfoldable(Data_Unfoldable.unfoldableArray)(o))(decodeNetwork));
      });
  });
  var decodeJsonChanterelleProjectSpec = new Data_Argonaut_Decode_Class.DecodeJson(function (j) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(j))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("name"))(function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("version"))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("source-dir"))(function (v3) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_Maybe.fromMaybe("build"))(Data_Argonaut_Decode_Combinators.getFieldOptional(Data_Argonaut_Decode_Class.decodeJsonString)(v)("artifacts-dir")))(function (v4) {
                          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonString))(v)("modules"))(function (v5) {
                              return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_Maybe.fromMaybe(Data_Monoid.mempty(Data_Monoid.monoidArray)))(Data_Argonaut_Decode_Combinators.getFieldOptional(Data_Argonaut_Decode_Class.decodeArray(decodeJsonDependency))(v)("dependencies")))(function (v6) {
                                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getFieldOptional(Data_Argonaut_Decode_Class.decodeJsonString)(v)("extra-abis"))(function (v7) {
                                      return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_Maybe.fromMaybe(Data_Monoid.mempty(monoidLibraries)))(Data_Argonaut_Decode_Combinators.getFieldOptional(decodeJsonLibraries)(v)("libraries")))(function (v8) {
                                          return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_Maybe.fromMaybe(Data_Monoid.mempty(monoidNetworks)))(Data_Argonaut_Decode_Combinators.getFieldOptional(decodeJsonNetworks)(v)("networks")))(function (v9) {
                                              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getFieldOptional(decodeJsonSolcOptimizerSettings)(v)("solc-optimizer"))(function (v10) {
                                                  return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_Maybe.fromMaybe(Data_Monoid.mempty(Data_Monoid.monoidArray)))(Data_Argonaut_Decode_Combinators.getFieldOptional(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonString))(v)("solc-output-selection")))(function (v11) {
                                                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(v)("purescript-generator"))(function (v12) {
                                                          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v12)("output-path"))(function (v13) {
                                                              return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_Maybe.fromMaybe(""))(Data_Argonaut_Decode_Combinators.getFieldOptional(Data_Argonaut_Decode_Class.decodeJsonString)(v12)("expression-prefix")))(function (v14) {
                                                                  return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_Maybe.fromMaybe(""))(Data_Argonaut_Decode_Combinators.getFieldOptional(Data_Argonaut_Decode_Class.decodeJsonString)(v12)("module-prefix")))(function (v15) {
                                                                      var psGen = {
                                                                          exprPrefix: v14,
                                                                          modulePrefix: v15,
                                                                          outputPath: v13
                                                                      };
                                                                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                                                                          name: v1,
                                                                          version: v2,
                                                                          sourceDir: v3,
                                                                          artifactsDir: v4,
                                                                          modules: v5,
                                                                          dependencies: v6,
                                                                          extraAbis: v7,
                                                                          libraries: v8,
                                                                          networks: v9,
                                                                          solcOptimizerSettings: v10,
                                                                          solcOutputSelection: v11,
                                                                          psGen: psGen
                                                                      });
                                                                  });
                                                              });
                                                          });
                                                      });
                                                  });
                                              });
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  });
              });
          });
      });
  });
  exports["Dependency"] = Dependency;
  exports["InjectableWithSourceCode"] = InjectableWithSourceCode;
  exports["InjectableWithBytecode"] = InjectableWithBytecode;
  exports["FixedLibrary"] = FixedLibrary;
  exports["FixedLibraryWithNetwork"] = FixedLibraryWithNetwork;
  exports["InjectableLibrary"] = InjectableLibrary;
  exports["isFixedLibrary"] = isFixedLibrary;
  exports["AllChains"] = AllChains;
  exports["SpecificChains"] = SpecificChains;
  exports["networkIDFitsChainSpec"] = networkIDFitsChainSpec;
  exports["Networks"] = Networks;
  exports["AllNetworks"] = AllNetworks;
  exports["AllDefinedNetworks"] = AllDefinedNetworks;
  exports["SpecificRefs"] = SpecificRefs;
  exports["resolveNetworkRefs"] = resolveNetworkRefs;
  exports["defaultSolcOptimizerSettings"] = defaultSolcOptimizerSettings;
  exports["ChanterelleModule"] = ChanterelleModule;
  exports["ChanterelleProject"] = ChanterelleProject;
  exports["decodeJsonDependency"] = decodeJsonDependency;
  exports["decodeJsonInjectableLibraryCode"] = decodeJsonInjectableLibraryCode;
  exports["monoidLibraries"] = monoidLibraries;
  exports["decodeJsonLibraries"] = decodeJsonLibraries;
  exports["decodeJsonChainSpec"] = decodeJsonChainSpec;
  exports["monoidNetworks"] = monoidNetworks;
  exports["decodeJsonNetworks"] = decodeJsonNetworks;
  exports["decodeJsonNetworkRefs"] = decodeJsonNetworkRefs;
  exports["encodeJsonSolcOptimizerSettings"] = encodeJsonSolcOptimizerSettings;
  exports["decodeJsonSolcOptimizerSettings"] = decodeJsonSolcOptimizerSettings;
  exports["decodeJsonChanterelleProjectSpec"] = decodeJsonChanterelleProjectSpec;
})(PS["Chanterelle.Internal.Types.Project"] = PS["Chanterelle.Internal.Types.Project"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Chanterelle_Internal_Types_Project = PS["Chanterelle.Internal.Types.Project"];
  var Chanterelle_Internal_Utils_Json = PS["Chanterelle.Internal.Utils.Json"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Reader = PS["Control.Monad.Reader"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Combinators = PS["Data.Argonaut.Decode.Combinators"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Encode_Combinators = PS["Data.Argonaut.Encode.Combinators"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Effect_Class = PS["Effect.Class"];
  var Foreign_Object = PS["Foreign.Object"];
  var Network_Ethereum_Core_HexString = PS["Network.Ethereum.Core.HexString"];
  var Network_Ethereum_Web3 = PS["Network.Ethereum.Web3"];
  var Prelude = PS["Prelude"];
  var CompileParseError = (function () {
      function CompileParseError(value0) {
          this.value0 = value0;
      };
      CompileParseError.create = function (value0) {
          return new CompileParseError(value0);
      };
      return CompileParseError;
  })();
  var MissingArtifactError = (function () {
      function MissingArtifactError(value0) {
          this.value0 = value0;
      };
      MissingArtifactError.create = function (value0) {
          return new MissingArtifactError(value0);
      };
      return MissingArtifactError;
  })();
  var MalformedProjectError = (function () {
      function MalformedProjectError(value0) {
          this.value0 = value0;
      };
      MalformedProjectError.create = function (value0) {
          return new MalformedProjectError(value0);
      };
      return MalformedProjectError;
  })();
  var FSError = (function () {
      function FSError(value0) {
          this.value0 = value0;
      };
      FSError.create = function (value0) {
          return new FSError(value0);
      };
      return FSError;
  })();
  var CompilationError = (function () {
      function CompilationError(value0) {
          this.value0 = value0;
      };
      CompilationError.create = function (value0) {
          return new CompilationError(value0);
      };
      return CompilationError;
  })();
  var UnexpectedSolcOutput = (function () {
      function UnexpectedSolcOutput(value0) {
          this.value0 = value0;
      };
      UnexpectedSolcOutput.create = function (value0) {
          return new UnexpectedSolcOutput(value0);
      };
      return UnexpectedSolcOutput;
  })();
  var runCompileMExceptT = function (v) {
      return Control_Monad_Reader_Trans.runReaderT(v);
  };
  var runCompileM = function (v) {
      return function ($68) {
          return Control_Monad_Except_Trans.runExceptT(Control_Monad_Reader_Trans.runReaderT(v)($68));
      };
  };
  var parseOutputContract = function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonJson))(v)("abi"))(function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonJson)(v)("evm"))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(v2))(function (v3) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(v3)("bytecode"))(function (v4) {
                          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v4)("object"))(function (v5) {
                              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(v3)("deployedBytecode"))(function (v6) {
                                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v6)("object"))(function (v7) {
                                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                                          abi: v1,
                                          bytecode: v5,
                                          deployedBytecode: v7
                                      });
                                  });
                              });
                          });
                      });
                  });
              });
          });
      });
  };
  var monadThrowCompileM = Control_Monad_Reader_Trans.monadThrowReaderT(Control_Monad_Except_Trans.monadThrowExceptT(Effect_Aff.monadAff));
  var monadEffCompileM = Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Except_Trans.monadEffectExceptT(Effect_Aff.monadEffectAff));
  var monadAskCompileM = Control_Monad_Reader_Trans.monadAskReaderT(Control_Monad_Except_Trans.monadExceptT(Effect_Aff.monadAff));
  var monadAffCompileM = Effect_Aff_Class.monadAffReader(Effect_Aff_Class.monadAffExceptT(Effect_Aff_Class.monadAffAff));           
  var encodeSolcSettings = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
      var solcifyLib = function (v1) {
          if (v1 instanceof Chanterelle_Internal_Types_Project.FixedLibrary) {
              return new Data_Tuple.Tuple(v1.value0.name, Chanterelle_Internal_Utils_Json.encodeJsonAddress(v1.value0.address));
          };
          if (v1 instanceof Chanterelle_Internal_Types_Project.FixedLibraryWithNetwork) {
              return new Data_Tuple.Tuple(v1.value0.name, Chanterelle_Internal_Utils_Json.encodeJsonAddress(v1.value0.address));
          };
          if (v1 instanceof Chanterelle_Internal_Types_Project.InjectableLibrary) {
              return new Data_Tuple.Tuple(v1.value0.name, Chanterelle_Internal_Utils_Json.encodeJsonAddress(v1.value0.address));
          };
          throw new Error("Failed pattern match at Chanterelle.Internal.Types.Compile line 103, column 11 - line 103, column 107: " + [ v1.constructor.name ]);
      };
      var solcifyLibs = function (v1) {
          return Foreign_Object.fromFoldable(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(solcifyLib)(v1));
      };
      var solcifyAllLibs = function (libs) {
          return Data_Functor.map(Foreign_Object.functorObject)(solcifyLibs)(libs);
      };
      return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("outputSelection")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeForeignObject(Data_Argonaut_Encode_Class.encodeForeignObject(Data_Argonaut_Encode_Class.encodeJsonArray(Data_Argonaut_Encode_Class.encodeJsonJString))))(v.outputSelection)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("remappings")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonArray(Data_Argonaut_Encode_Class.encodeJsonJString))(v.remappings)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("libraries")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeForeignObject(Data_Argonaut_Encode_Class.encodeForeignObject(Data_Argonaut_Encode_Class.encodeJsonJson)))(solcifyAllLibs(v.libraries))))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("optimizer")(Data_Argonaut_Encode_Class.encodeJson(Chanterelle_Internal_Types_Project.encodeJsonSolcOptimizerSettings)(v.optimizer)))(Data_Argonaut_Core.jsonEmptyObject))));
  });
  var encodeSolcContract = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
      return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("content")(Data_Argonaut_Core.fromString(v.content)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("keccak256")(Data_Argonaut_Core.fromString(Network_Ethereum_Core_HexString.unHex(v.hash))))(Data_Argonaut_Core.jsonEmptyObject));
  });
  var encodeSolcInput = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
      return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("language")(Data_Argonaut_Core.fromString("Solidity")))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("sources")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeForeignObject(encodeSolcContract))(v.sources)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("settings")(Data_Argonaut_Encode_Class.encodeJson(encodeSolcSettings)(v.settings)))(Data_Argonaut_Core.jsonEmptyObject)));
  });
  var encodeOutputContract = function (v) {
      return function (v1) {
          return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("abi")(Data_Argonaut_Core.fromArray(v.abi)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("bytecode")(v.bytecode))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("networks")(Data_Argonaut_Core.jsonEmptyObject))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJNumber)("compiledAt")(v1))(Data_Argonaut_Core.jsonEmptyObject))));
      };
  };
  var decodeSolcError = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("type"))(function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("severity"))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("message"))(function (v3) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("formattedMessage"))(function (v4) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)({
                              type: v1,
                              severity: v2,
                              message: v3,
                              formattedMessage: v4
                          });
                      });
                  });
              });
          });
      });
  });
  var parseSolcOutput = function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_Maybe.fromMaybe([  ]))(Data_Argonaut_Decode_Combinators.getFieldOptional(Data_Argonaut_Decode_Class.decodeArray(decodeSolcError))(v)("errors")))(function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson)))(v)("contracts"))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable["for"](Data_Either.applicativeEither)(Foreign_Object.traversableObject)(v2)(Data_Traversable.traverse(Foreign_Object.traversableObject)(Data_Either.applicativeEither)(parseOutputContract)))(function (v3) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          errors: v1,
                          contracts: v3
                      });
                  });
              });
          });
      });
  };
  var bindCompileM = Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff));   
  var applicativeCompileM = Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Effect_Aff.monadAff));
  exports["CompileParseError"] = CompileParseError;
  exports["MissingArtifactError"] = MissingArtifactError;
  exports["MalformedProjectError"] = MalformedProjectError;
  exports["FSError"] = FSError;
  exports["CompilationError"] = CompilationError;
  exports["UnexpectedSolcOutput"] = UnexpectedSolcOutput;
  exports["runCompileM"] = runCompileM;
  exports["runCompileMExceptT"] = runCompileMExceptT;
  exports["parseOutputContract"] = parseOutputContract;
  exports["encodeOutputContract"] = encodeOutputContract;
  exports["parseSolcOutput"] = parseSolcOutput;
  exports["applicativeCompileM"] = applicativeCompileM;
  exports["bindCompileM"] = bindCompileM;
  exports["monadThrowCompileM"] = monadThrowCompileM;
  exports["monadAskCompileM"] = monadAskCompileM;
  exports["monadEffCompileM"] = monadEffCompileM;
  exports["monadAffCompileM"] = monadAffCompileM;
  exports["encodeSolcInput"] = encodeSolcInput;
  exports["encodeSolcSettings"] = encodeSolcSettings;
  exports["encodeSolcContract"] = encodeSolcContract;
  exports["decodeSolcError"] = decodeSolcError;
})(PS["Chanterelle.Internal.Types.Compile"] = PS["Chanterelle.Internal.Types.Compile"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Prelude = PS["Prelude"];                 
  var Profunctor = function (dimap) {
      this.dimap = dimap;
  }; 
  var dimap = function (dict) {
      return dict.dimap;
  };
  var rmap = function (dictProfunctor) {
      return function (b2c) {
          return dimap(dictProfunctor)(Control_Category.identity(Control_Category.categoryFn))(b2c);
      };
  };
  exports["dimap"] = dimap;
  exports["Profunctor"] = Profunctor;
  exports["rmap"] = rmap;
})(PS["Data.Profunctor"] = PS["Data.Profunctor"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];                 
  var Strong = function (Profunctor0, first, second) {
      this.Profunctor0 = Profunctor0;
      this.first = first;
      this.second = second;
  };                                            
  var second = function (dict) {
      return dict.second;
  };
  var first = function (dict) {
      return dict.first;
  };
  exports["first"] = first;
  exports["second"] = second;
  exports["Strong"] = Strong;
})(PS["Data.Profunctor.Strong"] = PS["Data.Profunctor.Strong"] || {});
(function(exports) {
    "use strict";


  exports._sendAsync = function (provider) {
      return function (request) {
          return function(onError, onSuccess) {
              provider.sendAsync(request, function(err, succ) {
                  if (err) {
                      onError(err);
                  } else {
                      onSuccess(succ);
                  }
              });
              return function (cancelError, onCancelerError, onCancelerSuccess) {
                  onCancelerSuccess();
              };
          };
      };
  };
})(PS["Network.Ethereum.Web3.JsonRPC"] = PS["Network.Ethereum.Web3.JsonRPC"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Effect = PS["Effect"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Exception = PS["Effect.Exception"];
  var Effect_Uncurried = PS["Effect.Uncurried"];
  var Prelude = PS["Prelude"];
  var fromEffectFnAff = function (v) {
      return Effect_Aff.makeAff(function (k) {
          return function __do() {
              var v1 = v(function ($4) {
                  return k(Data_Either.Left.create($4))();
              }, function ($5) {
                  return k(Data_Either.Right.create($5))();
              });
              return function (e) {
                  return Effect_Aff.makeAff(function (k2) {
                      return function __do() {
                          v1(e, function ($6) {
                              return k2(Data_Either.Left.create($6))();
                          }, function ($7) {
                              return k2(Data_Either.Right.create($7))();
                          });
                          return Effect_Aff.nonCanceler;
                      };
                  });
              };
          };
      });
  };
  exports["fromEffectFnAff"] = fromEffectFnAff;
})(PS["Effect.Aff.Compat"] = PS["Effect.Aff.Compat"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Network.Ethereum.Web3.JsonRPC"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Reader = PS["Control.Monad.Reader"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Effect_Aff_Compat = PS["Effect.Aff.Compat"];
  var Effect_Exception = PS["Effect.Exception"];
  var Foreign = PS["Foreign"];
  var Foreign_Class = PS["Foreign.Class"];
  var Foreign_Generic = PS["Foreign.Generic"];
  var Foreign_Generic_Class = PS["Foreign.Generic.Class"];
  var Network_Ethereum_Web3_Types = PS["Network.Ethereum.Web3.Types"];
  var Network_Ethereum_Web3_Types_Provider = PS["Network.Ethereum.Web3.Types.Provider"];
  var Network_Ethereum_Web3_Types_Types = PS["Network.Ethereum.Web3.Types.Types"];
  var Prelude = PS["Prelude"];                 
  var Remote = function (remote_) {
      this.remote_ = remote_;
  };
  var remote_ = function (dict) {
      return dict.remote_;
  };
  var remoteInductive = function (dictEncode) {
      return function (dictRemote) {
          return new Remote(function (f) {
              return function (x) {
                  return remote_(dictRemote)(function (p) {
                      return function (args) {
                          return f(p)(Data_Array.cons(Foreign_Class.encode(dictEncode)(x))(args));
                      };
                  });
              };
          });
      };
  };
  var remoteBase = function (dictDecode) {
      return new Remote(function (f) {
          var asError = function (e) {
              return Effect_Exception.error(Foreign_Generic.genericEncodeJSON(Network_Ethereum_Web3_Types_Types.genericWeb3Error)(Foreign_Generic_Class.genericEncodeSum(Foreign_Generic_Class.genericEncodeConstructor(new Data_Symbol.IsSymbol(function () {
                  return "Rpc";
              }))(Foreign_Generic_Class.genericEncodeArgsArgument(Foreign_Generic_Class.encode_Other(Network_Ethereum_Web3_Types_Types.encodeRpcError))))(Foreign_Generic_Class.genericEncodeSum(Foreign_Generic_Class.genericEncodeConstructor(new Data_Symbol.IsSymbol(function () {
                  return "RemoteError";
              }))(Foreign_Generic_Class.genericEncodeArgsArgument(Foreign_Generic_Class.encode_Other(Foreign_Class.stringEncode))))(Foreign_Generic_Class.genericEncodeSum(Foreign_Generic_Class.genericEncodeConstructor(new Data_Symbol.IsSymbol(function () {
                  return "ParserError";
              }))(Foreign_Generic_Class.genericEncodeArgsArgument(Foreign_Generic_Class.encode_Other(Foreign_Class.stringEncode))))(Foreign_Generic_Class.genericEncodeConstructor(new Data_Symbol.IsSymbol(function () {
                  return "NullError";
              }))(Foreign_Generic_Class.genericEncodeArgsNoArguments)))))(Foreign_Generic.defaultOptions)(e));
          };
          return Control_Bind.bind(Network_Ethereum_Web3_Types_Types.bindWeb3)(Control_Monad_Reader_Class.ask(Network_Ethereum_Web3_Types_Types.monadAskWeb3))(function (v) {
              return Control_Bind.bind(Network_Ethereum_Web3_Types_Types.bindWeb3)(Effect_Aff_Class.liftAff(Network_Ethereum_Web3_Types_Types.monadAffWeb3)(Effect_Aff.attempt(f(v)(Data_Monoid.mempty(Data_Monoid.monoidArray)))))(function (v1) {
                  if (v1 instanceof Data_Either.Left) {
                      return Control_Monad_Error_Class.throwError(Network_Ethereum_Web3_Types_Types.monadThrowWeb3)(asError(Network_Ethereum_Web3_Types_Types.RemoteError.create(Data_Show.show(Effect_Exception.showError)(v1.value0))));
                  };
                  if (v1 instanceof Data_Either.Right) {
                      var v2 = Control_Monad_Except.runExcept(Foreign_Class.decode(Network_Ethereum_Web3_Types_Types["decodeResponse'"](dictDecode))(v1.value0));
                      if (v2 instanceof Data_Either.Left) {
                          return Control_Monad_Error_Class.throwError(Network_Ethereum_Web3_Types_Types.monadThrowWeb3)(asError(Network_Ethereum_Web3_Types_Types.ParserError.create(Data_Show.show(Data_List_Types.showNonEmptyList(Foreign.showForeignError))(v2.value0))));
                      };
                      if (v2 instanceof Data_Either.Right) {
                          if (v2.value0 instanceof Data_Either.Left) {
                              return Control_Monad_Error_Class.throwError(Network_Ethereum_Web3_Types_Types.monadThrowWeb3)(asError(v2.value0.value0));
                          };
                          if (v2.value0 instanceof Data_Either.Right) {
                              return Control_Applicative.pure(Network_Ethereum_Web3_Types_Types.applicativeWeb3)(v2.value0.value0);
                          };
                          throw new Error("Failed pattern match at Network.Ethereum.Web3.JsonRPC line 37, column 31 - line 39, column 28: " + [ v2.value0.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Network.Ethereum.Web3.JsonRPC line 34, column 20 - line 39, column 28: " + [ v2.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Network.Ethereum.Web3.JsonRPC line 32, column 5 - line 39, column 28: " + [ v1.constructor.name ]);
              });
          });
      });
  };
  var remote = function (dictRemote) {
      return function (n) {
          return remote_(dictRemote)(function (provider) {
              return function (ps) {
                  return Effect_Aff_Compat.fromEffectFnAff($foreign._sendAsync(provider)(Network_Ethereum_Web3_Types_Types.mkRequest(n)(1)(ps)));
              };
          });
      };
  };
  exports["remote_"] = remote_;
  exports["Remote"] = Remote;
  exports["remote"] = remote;
  exports["remoteBase"] = remoteBase;
  exports["remoteInductive"] = remoteInductive;
})(PS["Network.Ethereum.Web3.JsonRPC"] = PS["Network.Ethereum.Web3.JsonRPC"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Data_Maybe = PS["Data.Maybe"];
  var Foreign_Class = PS["Foreign.Class"];
  var Network_Ethereum_Core_BigNumber = PS["Network.Ethereum.Core.BigNumber"];
  var Network_Ethereum_Core_HexString = PS["Network.Ethereum.Core.HexString"];
  var Network_Ethereum_Core_Signatures = PS["Network.Ethereum.Core.Signatures"];
  var Network_Ethereum_Types = PS["Network.Ethereum.Types"];
  var Network_Ethereum_Web3_JsonRPC = PS["Network.Ethereum.Web3.JsonRPC"];
  var Network_Ethereum_Web3_Types = PS["Network.Ethereum.Web3.Types"];
  var Network_Ethereum_Web3_Types_TokenUnit = PS["Network.Ethereum.Web3.Types.TokenUnit"];
  var Network_Ethereum_Web3_Types_Types = PS["Network.Ethereum.Web3.Types.Types"];
  var Type_Data_Boolean = PS["Type.Data.Boolean"];
  var net_version = Network_Ethereum_Web3_JsonRPC.remote(Network_Ethereum_Web3_JsonRPC.remoteBase(Foreign_Class.stringDecode))("net_version");
  var eth_getCode = function (addr) {
      return function (cm) {
          return Network_Ethereum_Web3_JsonRPC.remote(Network_Ethereum_Web3_JsonRPC.remoteInductive(Network_Ethereum_Core_Signatures.encodeAddress)(Network_Ethereum_Web3_JsonRPC.remoteInductive(Network_Ethereum_Web3_Types_Types.encodeChainCursor)(Network_Ethereum_Web3_JsonRPC.remoteBase(Network_Ethereum_Core_HexString.decodeHexString))))("eth_getCode")(addr)(cm);
      };
  };
  var eth_getAccounts = Network_Ethereum_Web3_JsonRPC.remote(Network_Ethereum_Web3_JsonRPC.remoteBase(Foreign_Class.arrayDecode(Network_Ethereum_Core_Signatures.decodeAddress)))("eth_accounts");
  exports["net_version"] = net_version;
  exports["eth_getCode"] = eth_getCode;
  exports["eth_getAccounts"] = eth_getAccounts;
})(PS["Network.Ethereum.Web3.Api"] = PS["Network.Ethereum.Web3.Api"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Reader = PS["Control.Monad.Reader"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Compose = PS["Data.Functor.Compose"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Lens_Setter = PS["Data.Lens.Setter"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Validation_Semigroup = PS["Data.Validation.Semigroup"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Exception = PS["Effect.Exception"];
  var Network_Ethereum_Core_BigNumber = PS["Network.Ethereum.Core.BigNumber"];
  var Network_Ethereum_Web3 = PS["Network.Ethereum.Web3"];
  var Network_Ethereum_Web3_Api = PS["Network.Ethereum.Web3.Api"];
  var Network_Ethereum_Web3_Types = PS["Network.Ethereum.Web3.Types"];
  var Network_Ethereum_Web3_Types_Provider = PS["Network.Ethereum.Web3.Types.Provider"];
  var Network_Ethereum_Web3_Types_TokenUnit = PS["Network.Ethereum.Web3.Types.TokenUnit"];
  var Network_Ethereum_Web3_Types_Types = PS["Network.Ethereum.Web3.Types.Types"];
  var Node_Path = PS["Node.Path"];
  var Prelude = PS["Prelude"];                 
  var ConfigurationError = (function () {
      function ConfigurationError(value0) {
          this.value0 = value0;
      };
      ConfigurationError.create = function (value0) {
          return new ConfigurationError(value0);
      };
      return ConfigurationError;
  })();
  var OnDeploymentError = (function () {
      function OnDeploymentError(value0) {
          this.value0 = value0;
      };
      OnDeploymentError.create = function (value0) {
          return new OnDeploymentError(value0);
      };
      return OnDeploymentError;
  })();
  var PostDeploymentError = (function () {
      function PostDeploymentError(value0) {
          this.value0 = value0;
      };
      PostDeploymentError.create = function (value0) {
          return new PostDeploymentError(value0);
      };
      return PostDeploymentError;
  })();
  var runDeployM = function (v) {
      return function ($9) {
          return Control_Monad_Except_Trans.runExceptT(Control_Monad_Reader_Trans.runReaderT(v)($9));
      };
  };
  exports["runDeployM"] = runDeployM;
  exports["ConfigurationError"] = ConfigurationError;
  exports["OnDeploymentError"] = OnDeploymentError;
  exports["PostDeploymentError"] = PostDeploymentError;
})(PS["Chanterelle.Internal.Types.Deploy"] = PS["Chanterelle.Internal.Types.Deploy"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Chanterelle_Internal_Types_Compile = PS["Chanterelle.Internal.Types.Compile"];
  var Chanterelle_Internal_Types_Project = PS["Chanterelle.Internal.Types.Project"];
  var Chanterelle_Internal_Utils_Json = PS["Chanterelle.Internal.Utils.Json"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Combinators = PS["Data.Argonaut.Decode.Combinators"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Encode_Combinators = PS["Data.Argonaut.Encode.Combinators"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Foreign_Object = PS["Foreign.Object"];
  var Network_Ethereum_Core_HexString = PS["Network.Ethereum.Core.HexString"];
  var Network_Ethereum_Core_Signatures = PS["Network.Ethereum.Core.Signatures"];
  var Network_Ethereum_Web3 = PS["Network.Ethereum.Web3"];
  var Node_Path = PS["Node.Path"];
  var Prelude = PS["Prelude"];                 
  var UntemplatedHexString = (function () {
      function UntemplatedHexString(value0) {
          this.value0 = value0;
      };
      UntemplatedHexString.create = function (value0) {
          return new UntemplatedHexString(value0);
      };
      return UntemplatedHexString;
  })();
  var TemplatedHexString = (function () {
      function TemplatedHexString(value0) {
          this.value0 = value0;
      };
      TemplatedHexString.create = function (value0) {
          return new TemplatedHexString(value0);
      };
      return TemplatedHexString;
  })();
  var CouldntLoadGenesisBlock = (function () {
      function CouldntLoadGenesisBlock(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CouldntLoadGenesisBlock.create = function (value0) {
          return function (value1) {
              return new CouldntLoadGenesisBlock(value0, value1);
          };
      };
      return CouldntLoadGenesisBlock;
  })();
  var CouldntInjectLibraryAddress = (function () {
      function CouldntInjectLibraryAddress(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CouldntInjectLibraryAddress.create = function (value0) {
          return function (value1) {
              return new CouldntInjectLibraryAddress(value0, value1);
          };
      };
      return CouldntInjectLibraryAddress;
  })();
  var CouldntResolveLibrary = (function () {
      function CouldntResolveLibrary(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CouldntResolveLibrary.create = function (value0) {
          return function (value1) {
              return new CouldntResolveLibrary(value0, value1);
          };
      };
      return CouldntResolveLibrary;
  })();
  var CouldntResolveLibraryNoNetworks = (function () {
      function CouldntResolveLibraryNoNetworks(value0) {
          this.value0 = value0;
      };
      CouldntResolveLibraryNoNetworks.create = function (value0) {
          return new CouldntResolveLibraryNoNetworks(value0);
      };
      return CouldntResolveLibraryNoNetworks;
  })();
  var CouldntInjectLibrary = (function () {
      function CouldntInjectLibrary(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CouldntInjectLibrary.create = function (value0) {
          return function (value1) {
              return new CouldntInjectLibrary(value0, value1);
          };
      };
      return CouldntInjectLibrary;
  })();
  var CouldntCompileLibrary = (function () {
      function CouldntCompileLibrary(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CouldntCompileLibrary.create = function (value0) {
          return function (value1) {
              return new CouldntCompileLibrary(value0, value1);
          };
      };
      return CouldntCompileLibrary;
  })();
  var MalformedProjectErrorG = (function () {
      function MalformedProjectErrorG(value0) {
          this.value0 = value0;
      };
      MalformedProjectErrorG.create = function (value0) {
          return new MalformedProjectErrorG(value0);
      };
      return MalformedProjectErrorG;
  })();
  var NothingToDo = (function () {
      function NothingToDo(value0) {
          this.value0 = value0;
      };
      NothingToDo.create = function (value0) {
          return new NothingToDo(value0);
      };
      return NothingToDo;
  })();
  var GenesisAllocs = function (x) {
      return x;
  };
  var lookupGenesisAllocs = function (addr) {
      return function (v) {
          return Control_Alt.alt(Data_Maybe.altMaybe)(Foreign_Object.lookup(Data_Show.show(Network_Ethereum_Core_Signatures.addressShow)(addr))(v))(Foreign_Object.lookup(Network_Ethereum_Core_HexString.unHex(Network_Ethereum_Core_Signatures.unAddress(addr)))(v));
      };
  };
  var insertGenesisAllocs = function (addr) {
      return function (alloc) {
          return function (v) {
              return GenesisAllocs(Foreign_Object.insert(Network_Ethereum_Core_HexString.unHex(Network_Ethereum_Core_Signatures.unAddress(addr)))(alloc)(v));
          };
      };
  };
  var encodeJsonTemplatableHexString = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
      if (v instanceof TemplatedHexString) {
          return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(v.value0);
      };
      if (v instanceof UntemplatedHexString) {
          return Chanterelle_Internal_Utils_Json.encodeJsonHexString(v.value0);
      };
      throw new Error("Failed pattern match at Chanterelle.Internal.Types.Genesis line 26, column 1 - line 26, column 75: " + [ v.constructor.name ]);
  });
  var encodeJsonGenesisAlloc = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
      var storage = Data_Functor.map(Data_Maybe.functorMaybe)(function ($77) {
          return Data_Tuple.Tuple.create("storage")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeForeignObject(Data_Argonaut_Encode_Class.encodeJsonJString))($77));
      })(v.storage);
      var code = Data_Functor.map(Data_Maybe.functorMaybe)(function ($78) {
          return Data_Tuple.Tuple.create("code")(Chanterelle_Internal_Utils_Json.encodeJsonHexString($78));
      })(v.code);
      var balance = Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple("balance", Chanterelle_Internal_Utils_Json.encodeJsonBigNumber(v.balance)));
      var elems = Data_Array.catMaybes([ balance, code, storage ]);
      return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeForeignObject(Data_Argonaut_Encode_Class.encodeJsonJson))(Foreign_Object.fromFoldable(Data_Foldable.foldableArray)(elems));
  });
  var encodeJsonGenesisAllocs = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
      return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeForeignObject(Data_Argonaut_Encode_Class.encodeJsonJson))(Data_Functor.map(Foreign_Object.functorObject)(Data_Argonaut_Encode_Class.encodeJson(encodeJsonGenesisAlloc))(v));
  });
  var encodeJsonCliqueSettings = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
      return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("period")(Chanterelle_Internal_Utils_Json.encodeJsonConfigBigNumber(v.period)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("epoch")(Chanterelle_Internal_Utils_Json.encodeJsonConfigBigNumber(v.epoch)))(Data_Argonaut_Core.jsonEmptyObject));
  });
  var encodeJsonGenesisConfig = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
      var hB = Data_Functor.map(Data_Maybe.functorMaybe)(function ($79) {
          return Data_Tuple.Tuple.create("homesteadBlock")(Chanterelle_Internal_Utils_Json.encodeJsonConfigBlockNumber($79));
      })(v.homesteadBlock);
      var e158B = Data_Functor.map(Data_Maybe.functorMaybe)(function ($80) {
          return Data_Tuple.Tuple.create("eip158Block")(Chanterelle_Internal_Utils_Json.encodeJsonConfigBlockNumber($80));
      })(v.eip158Block);
      var e155B = Data_Functor.map(Data_Maybe.functorMaybe)(function ($81) {
          return Data_Tuple.Tuple.create("eip155Block")(Chanterelle_Internal_Utils_Json.encodeJsonConfigBlockNumber($81));
      })(v.eip155Block);
      var e150H = Data_Functor.map(Data_Maybe.functorMaybe)(function ($82) {
          return Data_Tuple.Tuple.create("eip150Hash")(Chanterelle_Internal_Utils_Json.encodeJsonHexString($82));
      })(v.eip150Hash);
      var e150B = Data_Functor.map(Data_Maybe.functorMaybe)(function ($83) {
          return Data_Tuple.Tuple.create("eip150Block")(Chanterelle_Internal_Utils_Json.encodeJsonConfigBlockNumber($83));
      })(v.eip150Block);
      var cq = Data_Functor.map(Data_Maybe.functorMaybe)(function ($84) {
          return Data_Tuple.Tuple.create("clique")(Data_Argonaut_Encode_Class.encodeJson(encodeJsonCliqueSettings)($84));
      })(v.clique);
      var ci = Data_Functor.map(Data_Maybe.functorMaybe)(function ($85) {
          return Data_Tuple.Tuple.create("chainId")(Chanterelle_Internal_Utils_Json.encodeJsonConfigBigNumber($85));
      })(v.chainId);
      var bB = Data_Functor.map(Data_Maybe.functorMaybe)(function ($86) {
          return Data_Tuple.Tuple.create("byzantiumBlock")(Chanterelle_Internal_Utils_Json.encodeJsonConfigBlockNumber($86));
      })(v.byzantiumBlock);
      var elems = Data_Array.catMaybes([ ci, bB, e150B, e150H, e155B, e158B, hB, cq ]);
      return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeForeignObject(Data_Argonaut_Encode_Class.encodeJsonJson))(Foreign_Object.fromFoldable(Data_Foldable.foldableArray)(elems));
  });
  var encodeJsonGenesisBlock = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
      return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("config")(Data_Argonaut_Encode_Class.encodeJson(encodeJsonGenesisConfig)(v.config)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("alloc")(Data_Argonaut_Encode_Class.encodeJson(encodeJsonGenesisAllocs)(v.allocs)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("nonce")(Chanterelle_Internal_Utils_Json.encodeJsonBigNumber(v.nonce)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("coinbase")(Chanterelle_Internal_Utils_Json.encodeJsonAddress(v.coinbase)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("extraData")(Data_Argonaut_Encode_Class.encodeJson(encodeJsonTemplatableHexString)(v.extraData)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("gasLimit")(Chanterelle_Internal_Utils_Json.encodeJsonBigNumber(v.gasLimit)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("mixHash")(Chanterelle_Internal_Utils_Json.encodeJsonHexString(v.mixHash)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("parentHash")(Chanterelle_Internal_Utils_Json.encodeJsonHexString(v.parentHash)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("timestamp")(Chanterelle_Internal_Utils_Json.encodeJsonBigNumber(v.timestamp)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("difficulty")(Chanterelle_Internal_Utils_Json.encodeJsonBigNumber(v.difficulty)))(Data_Argonaut_Core.jsonEmptyObject))))))))));
  });
  var decodeJsonTemplatableHexString = new Data_Argonaut_Decode_Class.DecodeJson(function (j) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString)(j))(function (v) {
          return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.maybe(new TemplatedHexString(v))(UntemplatedHexString.create)(Network_Ethereum_Core_HexString.mkHexString(v)));
      });
  });
  var decodeJsonGenesisAlloc = new Data_Argonaut_Decode_Class.DecodeJson(function (j) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(j))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Chanterelle_Internal_Utils_Json.gfoWithDecoder(Chanterelle_Internal_Utils_Json.decodeJsonHexString)(v)("code"))(function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getFieldOptional(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonString))(v)("storage"))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(Chanterelle_Internal_Utils_Json.gfWithDecoder(Chanterelle_Internal_Utils_Json.decodeJsonBigNumber)(v)("balance"))(function (v3) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          code: v1,
                          storage: v2,
                          balance: v3
                      });
                  });
              });
          });
      });
  });
  var decodeJsonGenesisAllocs = new Data_Argonaut_Decode_Class.DecodeJson(function (j) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(j))(function (obj) {
          return Data_Functor.map(Data_Either.functorEither)(GenesisAllocs)(Data_Traversable["for"](Data_Either.applicativeEither)(Foreign_Object.traversableObject)(obj)(Data_Argonaut_Decode_Class.decodeJson(decodeJsonGenesisAlloc)));
      });
  });
  var decodeJsonCliqueSettings = new Data_Argonaut_Decode_Class.DecodeJson(function (j) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(j))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bindFlipped(Data_Either.bindEither)(Chanterelle_Internal_Utils_Json.decodeJsonBigNumber)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonJson)(v)("period")))(function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bindFlipped(Data_Either.bindEither)(Chanterelle_Internal_Utils_Json.decodeJsonBigNumber)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonJson)(v)("epoch")))(function (v2) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                      period: v1,
                      epoch: v2
                  });
              });
          });
      });
  });
  var decodeJsonGenesisConfig = new Data_Argonaut_Decode_Class.DecodeJson(function (j) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(j))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Chanterelle_Internal_Utils_Json.gfoWithDecoder(Chanterelle_Internal_Utils_Json.decodeJsonBigNumber)(v)("chainId"))(function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(Chanterelle_Internal_Utils_Json.gfoWithDecoder(Chanterelle_Internal_Utils_Json.decodeJsonBlockNumber)(v)("byzantiumBlock"))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(Chanterelle_Internal_Utils_Json.gfoWithDecoder(Chanterelle_Internal_Utils_Json.decodeJsonBlockNumber)(v)("eip150Block"))(function (v3) {
                      return Control_Bind.bind(Data_Either.bindEither)(Chanterelle_Internal_Utils_Json.gfoWithDecoder(Chanterelle_Internal_Utils_Json.decodeJsonHexString)(v)("eip150Hash"))(function (v4) {
                          return Control_Bind.bind(Data_Either.bindEither)(Chanterelle_Internal_Utils_Json.gfoWithDecoder(Chanterelle_Internal_Utils_Json.decodeJsonBlockNumber)(v)("eip155Block"))(function (v5) {
                              return Control_Bind.bind(Data_Either.bindEither)(Chanterelle_Internal_Utils_Json.gfoWithDecoder(Chanterelle_Internal_Utils_Json.decodeJsonBlockNumber)(v)("eip158Block"))(function (v6) {
                                  return Control_Bind.bind(Data_Either.bindEither)(Chanterelle_Internal_Utils_Json.gfoWithDecoder(Chanterelle_Internal_Utils_Json.decodeJsonBlockNumber)(v)("homesteadBlock"))(function (v7) {
                                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getFieldOptional(decodeJsonCliqueSettings)(v)("clique"))(function (v8) {
                                          return Control_Applicative.pure(Data_Either.applicativeEither)({
                                              chainId: v1,
                                              byzantiumBlock: v2,
                                              eip150Block: v3,
                                              eip150Hash: v4,
                                              eip155Block: v5,
                                              eip158Block: v6,
                                              homesteadBlock: v7,
                                              clique: v8
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  });
              });
          });
      });
  });
  var decodeJsonGenesisBlock = new Data_Argonaut_Decode_Class.DecodeJson(function (j) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(j))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonGenesisConfig)(v)("config"))(function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonGenesisAllocs)(v)("alloc"))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonJson)(v)("nonce"))(Chanterelle_Internal_Utils_Json.decodeJsonBigNumber))(function (v3) {
                      return Control_Bind.bind(Data_Either.bindEither)(Chanterelle_Internal_Utils_Json.gfWithDecoder(Chanterelle_Internal_Utils_Json.decodeJsonAddress)(v)("coinbase"))(function (v4) {
                          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonTemplatableHexString)(v)("extraData"))(function (v5) {
                              return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonJson)(v)("gasLimit"))(Chanterelle_Internal_Utils_Json.decodeJsonBigNumber))(function (v6) {
                                  return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonJson)(v)("mixHash"))(Chanterelle_Internal_Utils_Json.decodeJsonHexString))(function (v7) {
                                      return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonJson)(v)("parentHash"))(Chanterelle_Internal_Utils_Json.decodeJsonHexString))(function (v8) {
                                          return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonJson)(v)("timestamp"))(Chanterelle_Internal_Utils_Json.decodeJsonBigNumber))(function (v9) {
                                              return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonJson)(v)("difficulty"))(Chanterelle_Internal_Utils_Json.decodeJsonBigNumber))(function (v10) {
                                                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                                                      config: v1,
                                                      allocs: v2,
                                                      nonce: v3,
                                                      coinbase: v4,
                                                      extraData: v5,
                                                      gasLimit: v6,
                                                      mixHash: v7,
                                                      parentHash: v8,
                                                      timestamp: v9,
                                                      difficulty: v10
                                                  });
                                              });
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  });
              });
          });
      });
  });
  exports["UntemplatedHexString"] = UntemplatedHexString;
  exports["TemplatedHexString"] = TemplatedHexString;
  exports["GenesisAllocs"] = GenesisAllocs;
  exports["lookupGenesisAllocs"] = lookupGenesisAllocs;
  exports["insertGenesisAllocs"] = insertGenesisAllocs;
  exports["CouldntLoadGenesisBlock"] = CouldntLoadGenesisBlock;
  exports["CouldntInjectLibraryAddress"] = CouldntInjectLibraryAddress;
  exports["CouldntResolveLibrary"] = CouldntResolveLibrary;
  exports["CouldntResolveLibraryNoNetworks"] = CouldntResolveLibraryNoNetworks;
  exports["CouldntInjectLibrary"] = CouldntInjectLibrary;
  exports["CouldntCompileLibrary"] = CouldntCompileLibrary;
  exports["MalformedProjectErrorG"] = MalformedProjectErrorG;
  exports["NothingToDo"] = NothingToDo;
  exports["decodeJsonTemplatableHexString"] = decodeJsonTemplatableHexString;
  exports["encodeJsonTemplatableHexString"] = encodeJsonTemplatableHexString;
  exports["decodeJsonGenesisConfig"] = decodeJsonGenesisConfig;
  exports["encodeJsonGenesisConfig"] = encodeJsonGenesisConfig;
  exports["decodeJsonCliqueSettings"] = decodeJsonCliqueSettings;
  exports["encodeJsonCliqueSettings"] = encodeJsonCliqueSettings;
  exports["decodeJsonGenesisAlloc"] = decodeJsonGenesisAlloc;
  exports["encodeJsonGenesisAlloc"] = encodeJsonGenesisAlloc;
  exports["decodeJsonGenesisAllocs"] = decodeJsonGenesisAllocs;
  exports["encodeJsonGenesisAllocs"] = encodeJsonGenesisAllocs;
  exports["decodeJsonGenesisBlock"] = decodeJsonGenesisBlock;
  exports["encodeJsonGenesisBlock"] = encodeJsonGenesisBlock;
})(PS["Chanterelle.Internal.Types.Genesis"] = PS["Chanterelle.Internal.Types.Genesis"] || {});
(function(exports) {
    "use strict";

  exports.now = function () {
      return new Date();
  };

  exports.toEpoch = function (time) {
      return time.getTime();
  };

  exports.toISOString = function (time) {
      return time.toISOString();
  };
})(PS["Chanterelle.Internal.Utils.Time"] = PS["Chanterelle.Internal.Utils.Time"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Chanterelle.Internal.Utils.Time"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Effect = PS["Effect"];
  exports["now"] = $foreign.now;
  exports["toEpoch"] = $foreign.toEpoch;
  exports["toISOString"] = $foreign.toISOString;
})(PS["Chanterelle.Internal.Utils.Time"] = PS["Chanterelle.Internal.Utils.Time"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Decidable = PS["Data.Decidable"];
  var Data_Decide = PS["Data.Decide"];
  var Data_Divide = PS["Data.Divide"];
  var Data_Divisible = PS["Data.Divisible"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor_Contravariant = PS["Data.Functor.Contravariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Prelude = PS["Prelude"];                 
  var Logger = function (x) {
      return x;
  };
  var log = function (v) {
      return v;
  };
  exports["Logger"] = Logger;
  exports["log"] = log;
})(PS["Control.Logger"] = PS["Control.Logger"] || {});
(function(exports) {
    "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Effect.Console"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  exports["log"] = $foreign.log;
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Chanterelle.Internal.Logging"];
  var Ansi_Codes = PS["Ansi.Codes"];
  var Ansi_Output = PS["Ansi.Output"];
  var Chanterelle_Internal_Types_Compile = PS["Chanterelle.Internal.Types.Compile"];
  var Chanterelle_Internal_Types_Deploy = PS["Chanterelle.Internal.Types.Deploy"];
  var Chanterelle_Internal_Types_Genesis = PS["Chanterelle.Internal.Types.Genesis"];
  var Chanterelle_Internal_Types_Project = PS["Chanterelle.Internal.Types.Project"];
  var Chanterelle_Internal_Utils_Time = PS["Chanterelle.Internal.Utils.Time"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Logger = PS["Control.Logger"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_Common = PS["Data.String.Common"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Effect = PS["Effect"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Console = PS["Effect.Console"];
  var Prelude = PS["Prelude"];                 
  var Debug = (function () {
      function Debug() {

      };
      Debug.value = new Debug();
      return Debug;
  })();
  var Info = (function () {
      function Info() {

      };
      Info.value = new Info();
      return Info;
  })();
  var Warn = (function () {
      function Warn() {

      };
      Warn.value = new Warn();
      return Warn;
  })();
  var $$Error = (function () {
      function $$Error() {

      };
      $$Error.value = new $$Error();
      return $$Error;
  })();
  var Loggable = function (logify) {
      this.logify = logify;
  };
  var showLogLevel = new Data_Show.Show(function (v) {
      if (v instanceof Debug) {
          return "DEBUG";
      };
      if (v instanceof Info) {
          return "INFO";
      };
      if (v instanceof Warn) {
          return "WARN";
      };
      if (v instanceof $$Error) {
          return "ERROR";
      };
      throw new Error("Failed pattern match at Chanterelle.Internal.Logging line 41, column 1 - line 41, column 39: " + [ v.constructor.name ]);
  });
  var readLogLevel = function (level) {
      var normalized = Data_String_Common.toUpper(level);
      if (normalized === "DEBUG") {
          return Debug.value;
      };
      if (normalized === "INFO") {
          return Info.value;
      };
      if (normalized === "WARN") {
          return Warn.value;
      };
      if (normalized === "ERROR") {
          return $$Error.value;
      };
      return Info.value;
  };
  var logify = function (dict) {
      return dict.logify;
  };
  var loggableString = new Loggable(Control_Category.identity(Control_Category.categoryFn));
  var fancyColorLogger = function (dictMonadEffect) {
      return function (dictLoggable) {
          var logLevelColor = function (v) {
              if (v instanceof Debug) {
                  return Ansi_Codes.White.value;
              };
              if (v instanceof Info) {
                  return Ansi_Codes.Green.value;
              };
              if (v instanceof Warn) {
                  return Ansi_Codes.Yellow.value;
              };
              if (v instanceof $$Error) {
                  return Ansi_Codes.Red.value;
              };
              throw new Error("Failed pattern match at Chanterelle.Internal.Logging line 77, column 21 - line 81, column 19: " + [ v.constructor.name ]);
          };
          var colorize = function (level) {
              return Ansi_Output.withGraphics(Ansi_Output.foreground(logLevelColor(level)));
          };
          return Control_Logger.Logger(function (v) {
              return Effect_Class.liftEffect(dictMonadEffect)(function __do() {
                  var v1 = Data_Functor.map(Effect.functorEffect)(Chanterelle_Internal_Utils_Time.toISOString)(Chanterelle_Internal_Utils_Time.now)();
                  return Effect_Console.log(colorize(v.level)(v1 + (" [" + (Data_Show.show(showLogLevel)(v.level) + ("] " + logify(dictLoggable)(v.msg))))))();
              });
          });
      };
  };
  var eqLogLevel = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Debug && y instanceof Debug) {
              return true;
          };
          if (x instanceof Info && y instanceof Info) {
              return true;
          };
          if (x instanceof Warn && y instanceof Warn) {
              return true;
          };
          if (x instanceof $$Error && y instanceof $$Error) {
              return true;
          };
          return false;
      };
  });
  var ordLogLevel = new Data_Ord.Ord(function () {
      return eqLogLevel;
  }, (function () {
      var levelOrder = function (level) {
          if (level instanceof Debug) {
              return 1;
          };
          if (level instanceof Info) {
              return 2;
          };
          if (level instanceof Warn) {
              return 3;
          };
          if (level instanceof $$Error) {
              return 4;
          };
          throw new Error("Failed pattern match at Chanterelle.Internal.Logging line 35, column 26 - line 41, column 1: " + [ level.constructor.name ]);
      };
      return Data_Ord.comparing(Data_Ord.ordInt)(levelOrder);
  })());
  var log = function (dictMonadEffect) {
      return function (level) {
          return function (msg) {
              return Control_Bind.bind((dictMonadEffect.Monad0()).Bind1())(Effect_Class.liftEffect(dictMonadEffect)($foreign.getLogLevelWithDefault(Info.value)))(function (v) {
                  return Control_Applicative.when((dictMonadEffect.Monad0()).Applicative0())(Data_Ord.greaterThanOrEq(ordLogLevel)(level)(v))(Control_Logger.log(fancyColorLogger(dictMonadEffect)(loggableString))({
                      level: level,
                      msg: msg
                  }));
              });
          };
      };
  };
  var logCompileError = function (dictMonadEffect) {
      var parseErrorMessage = function (msg) {
          return "Parse Error -- " + ("Object: " + (msg.objectName + (", Message: " + msg.parseError)));
      };
      var artifactErrorMessage = function (msg) {
          return "Missing Artifact -- " + ("FileName: " + (msg.fileName + (", Object Name: " + msg.objectName)));
      };
      return function (v) {
          if (v instanceof Chanterelle_Internal_Types_Compile.CompileParseError) {
              return log(dictMonadEffect)($$Error.value)(parseErrorMessage(v.value0));
          };
          if (v instanceof Chanterelle_Internal_Types_Compile.MissingArtifactError) {
              return log(dictMonadEffect)($$Error.value)(artifactErrorMessage(v.value0));
          };
          if (v instanceof Chanterelle_Internal_Types_Compile.FSError) {
              return log(dictMonadEffect)($$Error.value)("File System Error -- " + v.value0);
          };
          if (v instanceof Chanterelle_Internal_Types_Compile.CompilationError) {
              return Data_Foldable.for_((dictMonadEffect.Monad0()).Applicative0())(Data_Foldable.foldableArray)(v.value0)(log(dictMonadEffect)($$Error.value));
          };
          if (v instanceof Chanterelle_Internal_Types_Compile.MalformedProjectError) {
              return log(dictMonadEffect)($$Error.value)("Couldn't parse chanterelle.json: " + v.value0);
          };
          if (v instanceof Chanterelle_Internal_Types_Compile.UnexpectedSolcOutput) {
              return log(dictMonadEffect)($$Error.value)("Unexpected output from solc: " + v.value0);
          };
          throw new Error("Failed pattern match at Chanterelle.Internal.Logging line 97, column 19 - line 103, column 90: " + [ v.constructor.name ]);
      };
  };
  var logDeployError = function (dictMonadEffect) {
      var postDeployMessage = function (msg) {
          return "Error After Deployment -- Name: " + (msg.name + (", Message: " + msg.message));
      };
      var onDeployMessage = function (msg) {
          return "Error During Deployment -- Name: " + (msg.name + (", Message: " + msg.message));
      };
      return function ($56) {
          return Effect_Class.liftEffect(dictMonadEffect)((function (v) {
              if (v instanceof Chanterelle_Internal_Types_Deploy.ConfigurationError) {
                  return log(Effect_Class.monadEffectEffect)($$Error.value)(v.value0);
              };
              if (v instanceof Chanterelle_Internal_Types_Deploy.OnDeploymentError) {
                  return log(Effect_Class.monadEffectEffect)($$Error.value)(onDeployMessage(v.value0));
              };
              if (v instanceof Chanterelle_Internal_Types_Deploy.PostDeploymentError) {
                  return log(Effect_Class.monadEffectEffect)($$Error.value)(postDeployMessage(v.value0));
              };
              throw new Error("Failed pattern match at Chanterelle.Internal.Logging line 112, column 33 - line 115, column 74: " + [ v.constructor.name ]);
          })($56));
      };
  };
  var logGenesisGenerationError = function (dictMonadEffect) {
      return function (v) {
          if (v instanceof Chanterelle_Internal_Types_Genesis.CouldntLoadGenesisBlock) {
              return log(dictMonadEffect)($$Error.value)("Couldn't load the genesis block at " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + v.value1)));
          };
          if (v instanceof Chanterelle_Internal_Types_Genesis.CouldntInjectLibraryAddress) {
              return log(dictMonadEffect)($$Error.value)("Couldn't inject the address for " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + v.value1)));
          };
          if (v instanceof Chanterelle_Internal_Types_Genesis.CouldntInjectLibrary) {
              return log(dictMonadEffect)($$Error.value)("Couldn't inject " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + v.value1)));
          };
          if (v instanceof Chanterelle_Internal_Types_Genesis.CouldntCompileLibrary) {
              return Control_Apply.applySecond(((dictMonadEffect.Monad0()).Bind1()).Apply0())(log(dictMonadEffect)($$Error.value)("Couldn't compile " + Data_Show.show(Data_Show.showString)(v.value0)))(logCompileError(dictMonadEffect)(v.value1));
          };
          if (v instanceof Chanterelle_Internal_Types_Genesis.MalformedProjectErrorG) {
              return log(dictMonadEffect)($$Error.value)("Couldn't load chanterelle.json: " + v.value0);
          };
          if (v instanceof Chanterelle_Internal_Types_Genesis.NothingToDo) {
              return log(dictMonadEffect)(Warn.value)("Nothing to do! " + v.value0);
          };
          if (v instanceof Chanterelle_Internal_Types_Genesis.CouldntResolveLibraryNoNetworks) {
              return log(dictMonadEffect)($$Error.value)("Couldn't resolve the library " + (Data_Show.show(Data_Show.showString)(v.value0) + " as no networks are available that satisfy its lookup constraints!"));
          };
          if (v instanceof Chanterelle_Internal_Types_Genesis.CouldntResolveLibrary) {
              return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEffect.Monad0()).Bind1())(log(dictMonadEffect)($$Error.value)("Couldn't resolve the library " + (Data_Show.show(Data_Show.showString)(v.value0) + " on any specified networks:")))(function () {
                  return Data_Foldable.for_((dictMonadEffect.Monad0()).Applicative0())(Data_Foldable.foldableArray)(v.value1)(function (v1) {
                      return log(dictMonadEffect)($$Error.value)("    via " + (Data_Show.show(Data_Show.showString)(v1.value0.name) + (": " + v1.value1)));
                  });
              });
          };
          throw new Error("Failed pattern match at Chanterelle.Internal.Logging line 124, column 29 - line 134, column 100: " + [ v.constructor.name ]);
      };
  };
  exports["Debug"] = Debug;
  exports["Info"] = Info;
  exports["Warn"] = Warn;
  exports["Error"] = $$Error;
  exports["log"] = log;
  exports["readLogLevel"] = readLogLevel;
  exports["logCompileError"] = logCompileError;
  exports["logDeployError"] = logDeployError;
  exports["logGenesisGenerationError"] = logGenesisGenerationError;
  exports["eqLogLevel"] = eqLogLevel;
  exports["ordLogLevel"] = ordLogLevel;
  exports["showLogLevel"] = showLogLevel;
  exports["setLogLevel"] = $foreign.setLogLevel;
})(PS["Chanterelle.Internal.Logging"] = PS["Chanterelle.Internal.Logging"] || {});
(function(exports) {
    "use strict";

  var createDateTime = function (y, m, d, h, mi, s, ms) {
    var dateTime = new Date(Date.UTC(y, m, d, h, mi, s, ms));
    if (y >= 0 && y < 100) {
      dateTime.setUTCFullYear(y);
    }
    return dateTime;
  };

  exports.fromDateTimeImpl = function (y, mo, d, h, mi, s, ms) {
    return createDateTime(y, mo - 1, d, h, mi, s, ms).getTime();
  };

  exports.toDateTimeImpl = function (ctor) {
    return function (instant) {
      var dt = new Date(instant);
      return ctor (dt.getUTCFullYear())(dt.getUTCMonth() + 1)(dt.getUTCDate())(dt.getUTCHours())(dt.getUTCMinutes())(dt.getUTCSeconds())(dt.getUTCMilliseconds());
    };
  };
})(PS["Data.DateTime.Instant"] = PS["Data.DateTime.Instant"] || {});
(function(exports) {
    "use strict";

  var createDate = function (y, m, d) {
    var date = new Date(Date.UTC(y, m, d));
    if (y >= 0 && y < 100) {
      date.setUTCFullYear(y);
    }
    return date;
  };

  exports.canonicalDateImpl = function (ctor, y, m, d) {
    var date = createDate(y, m - 1, d);
    return ctor(date.getUTCFullYear())(date.getUTCMonth() + 1)(date.getUTCDate());
  };
})(PS["Data.Date"] = PS["Data.Date"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];
  var January = (function () {
      function January() {

      };
      January.value = new January();
      return January;
  })();
  var February = (function () {
      function February() {

      };
      February.value = new February();
      return February;
  })();
  var March = (function () {
      function March() {

      };
      March.value = new March();
      return March;
  })();
  var April = (function () {
      function April() {

      };
      April.value = new April();
      return April;
  })();
  var May = (function () {
      function May() {

      };
      May.value = new May();
      return May;
  })();
  var June = (function () {
      function June() {

      };
      June.value = new June();
      return June;
  })();
  var July = (function () {
      function July() {

      };
      July.value = new July();
      return July;
  })();
  var August = (function () {
      function August() {

      };
      August.value = new August();
      return August;
  })();
  var September = (function () {
      function September() {

      };
      September.value = new September();
      return September;
  })();
  var October = (function () {
      function October() {

      };
      October.value = new October();
      return October;
  })();
  var November = (function () {
      function November() {

      };
      November.value = new November();
      return November;
  })();
  var December = (function () {
      function December() {

      };
      December.value = new December();
      return December;
  })();
  var eqMonth = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof January && y instanceof January) {
              return true;
          };
          if (x instanceof February && y instanceof February) {
              return true;
          };
          if (x instanceof March && y instanceof March) {
              return true;
          };
          if (x instanceof April && y instanceof April) {
              return true;
          };
          if (x instanceof May && y instanceof May) {
              return true;
          };
          if (x instanceof June && y instanceof June) {
              return true;
          };
          if (x instanceof July && y instanceof July) {
              return true;
          };
          if (x instanceof August && y instanceof August) {
              return true;
          };
          if (x instanceof September && y instanceof September) {
              return true;
          };
          if (x instanceof October && y instanceof October) {
              return true;
          };
          if (x instanceof November && y instanceof November) {
              return true;
          };
          if (x instanceof December && y instanceof December) {
              return true;
          };
          return false;
      };
  });
  var ordMonth = new Data_Ord.Ord(function () {
      return eqMonth;
  }, function (x) {
      return function (y) {
          if (x instanceof January && y instanceof January) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof January) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof January) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof February && y instanceof February) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof February) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof February) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof March && y instanceof March) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof March) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof March) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof April && y instanceof April) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof April) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof April) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof May && y instanceof May) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof May) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof May) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof June && y instanceof June) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof June) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof June) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof July && y instanceof July) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof July) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof July) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof August && y instanceof August) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof August) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof August) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof September && y instanceof September) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof September) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof September) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof October && y instanceof October) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof October) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof October) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof November && y instanceof November) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof November) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof November) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof December && y instanceof December) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Data.Date.Component line 61, column 8 - line 61, column 38: " + [ x.constructor.name, y.constructor.name ]);
      };
  });                            
  var boundedMonth = new Data_Bounded.Bounded(function () {
      return ordMonth;
  }, January.value, December.value);
  var boundedEnumMonth = new Data_Enum.BoundedEnum(function () {
      return boundedMonth;
  }, function () {
      return enumMonth;
  }, 12, function (v) {
      if (v instanceof January) {
          return 1;
      };
      if (v instanceof February) {
          return 2;
      };
      if (v instanceof March) {
          return 3;
      };
      if (v instanceof April) {
          return 4;
      };
      if (v instanceof May) {
          return 5;
      };
      if (v instanceof June) {
          return 6;
      };
      if (v instanceof July) {
          return 7;
      };
      if (v instanceof August) {
          return 8;
      };
      if (v instanceof September) {
          return 9;
      };
      if (v instanceof October) {
          return 10;
      };
      if (v instanceof November) {
          return 11;
      };
      if (v instanceof December) {
          return 12;
      };
      throw new Error("Failed pattern match at Data.Date.Component line 87, column 14 - line 101, column 1: " + [ v.constructor.name ]);
  }, function (v) {
      if (v === 1) {
          return new Data_Maybe.Just(January.value);
      };
      if (v === 2) {
          return new Data_Maybe.Just(February.value);
      };
      if (v === 3) {
          return new Data_Maybe.Just(March.value);
      };
      if (v === 4) {
          return new Data_Maybe.Just(April.value);
      };
      if (v === 5) {
          return new Data_Maybe.Just(May.value);
      };
      if (v === 6) {
          return new Data_Maybe.Just(June.value);
      };
      if (v === 7) {
          return new Data_Maybe.Just(July.value);
      };
      if (v === 8) {
          return new Data_Maybe.Just(August.value);
      };
      if (v === 9) {
          return new Data_Maybe.Just(September.value);
      };
      if (v === 10) {
          return new Data_Maybe.Just(October.value);
      };
      if (v === 11) {
          return new Data_Maybe.Just(November.value);
      };
      if (v === 12) {
          return new Data_Maybe.Just(December.value);
      };
      return Data_Maybe.Nothing.value;
  });
  var enumMonth = new Data_Enum.Enum(function () {
      return ordMonth;
  }, function ($50) {
      return Data_Enum.toEnum(boundedEnumMonth)((function (v) {
          return v - 1 | 0;
      })(Data_Enum.fromEnum(boundedEnumMonth)($50)));
  }, function ($51) {
      return Data_Enum.toEnum(boundedEnumMonth)((function (v) {
          return v + 1 | 0;
      })(Data_Enum.fromEnum(boundedEnumMonth)($51)));
  });
  exports["January"] = January;
  exports["February"] = February;
  exports["March"] = March;
  exports["April"] = April;
  exports["May"] = May;
  exports["June"] = June;
  exports["July"] = July;
  exports["August"] = August;
  exports["September"] = September;
  exports["October"] = October;
  exports["November"] = November;
  exports["December"] = December;
  exports["eqMonth"] = eqMonth;
  exports["ordMonth"] = ordMonth;
  exports["boundedMonth"] = boundedMonth;
  exports["enumMonth"] = enumMonth;
  exports["boundedEnumMonth"] = boundedEnumMonth;
})(PS["Data.Date.Component"] = PS["Data.Date.Component"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Date"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Date_Component = PS["Data.Date.Component"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var $$Date = (function () {
      function $$Date(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      $$Date.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new $$Date(value0, value1, value2);
              };
          };
      };
      return $$Date;
  })();
  var year = function (v) {
      return v.value0;
  }; 
  var month = function (v) {
      return v.value1;
  };
  var day = function (v) {
      return v.value2;
  };
  var canonicalDate = function (y) {
      return function (m) {
          return function (d) {
              var mkDate = function (y$prime) {
                  return function (m$prime) {
                      return function (d$prime) {
                          return new $$Date(y$prime, Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(m$prime)), d$prime);
                      };
                  };
              };
              return $foreign.canonicalDateImpl(mkDate, y, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(m), d);
          };
      };
  };
  exports["canonicalDate"] = canonicalDate;
  exports["year"] = year;
  exports["month"] = month;
  exports["day"] = day;
})(PS["Data.Date"] = PS["Data.Date"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Time_Component = PS["Data.Time.Component"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Tuple = PS["Data.Tuple"];
  var $$Math = PS["Math"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var Time = (function () {
      function Time(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Time.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Time(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Time;
  })();
  var second = function (v) {
      return v.value2;
  };
  var minute = function (v) {
      return v.value1;
  };
  var millisecond = function (v) {
      return v.value3;
  };
  var hour = function (v) {
      return v.value0;
  };
  exports["Time"] = Time;
  exports["hour"] = hour;
  exports["minute"] = minute;
  exports["second"] = second;
  exports["millisecond"] = millisecond;
})(PS["Data.Time"] = PS["Data.Time"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.DateTime"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Date = PS["Data.Date"];
  var Data_Date_Component = PS["Data.Date.Component"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Time = PS["Data.Time"];
  var Data_Time_Component = PS["Data.Time.Component"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Prelude = PS["Prelude"];                 
  var DateTime = (function () {
      function DateTime(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      DateTime.create = function (value0) {
          return function (value1) {
              return new DateTime(value0, value1);
          };
      };
      return DateTime;
  })();
  exports["DateTime"] = DateTime;
})(PS["Data.DateTime"] = PS["Data.DateTime"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.DateTime.Instant"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Date = PS["Data.Date"];
  var Data_Date_Component = PS["Data.Date.Component"];
  var Data_DateTime = PS["Data.DateTime"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Time = PS["Data.Time"];
  var Data_Time_Component = PS["Data.Time.Component"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var unInstant = function (v) {
      return v;
  };
  var toDateTime = (function () {
      var mkDateTime = function (y) {
          return function (mo) {
              return function (d) {
                  return function (h) {
                      return function (mi) {
                          return function (s) {
                              return function (ms) {
                                  return new Data_DateTime.DateTime(Data_Date.canonicalDate(y)(Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(mo)))(d), new Data_Time.Time(h, mi, s, ms));
                              };
                          };
                      };
                  };
              };
          };
      };
      return $foreign.toDateTimeImpl(mkDateTime);
  })();                                                
  var instant = function (v) {
      if (v >= -8.6399778816e15 && v <= 8.639977881599999e15) {
          return new Data_Maybe.Just(v);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.DateTime.Instant line 44, column 1 - line 44, column 41: " + [ v.constructor.name ]);
  };
  var fromDateTime = function (v) {
      return $foreign.fromDateTimeImpl(Data_Date.year(v.value0), Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)), Data_Date.day(v.value0), Data_Time.hour(v.value1), Data_Time.minute(v.value1), Data_Time.second(v.value1), Data_Time.millisecond(v.value1));
  };
  exports["instant"] = instant;
  exports["unInstant"] = unInstant;
  exports["fromDateTime"] = fromDateTime;
  exports["toDateTime"] = toDateTime;
})(PS["Data.DateTime.Instant"] = PS["Data.DateTime.Instant"] || {});
(function(exports) {
    "use strict";

  exports.handleCallbackImpl = function (left, right, f) {
    return function (err, value) {
      if (err) {
        f(left(err))();
      } else {
        f(right(value))();
      }
    };
  };
})(PS["Node.FS.Async"] = PS["Node.FS.Async"] || {});
(function(exports) {
    "use strict";

  exports.unsafeRequireFS = require("fs");
})(PS["Node.FS.Internal"] = PS["Node.FS.Internal"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Node.FS.Internal"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                 
  var mkEffect = Unsafe_Coerce.unsafeCoerce;
  exports["mkEffect"] = mkEffect;
  exports["unsafeRequireFS"] = $foreign.unsafeRequireFS;
})(PS["Node.FS.Internal"] = PS["Node.FS.Internal"] || {});
(function(exports) {
    "use strict";                                

  exports.statsMethod = function (m, s) {
    return s[m]();
  };
})(PS["Node.FS.Stats"] = PS["Node.FS.Stats"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.toInstantImpl = function (just) {
    return function (nothing) {
      return function (date) {
        var t = date.getTime();
        return isNaN(t) ? nothing : just(t);
      };
    };
  };
})(PS["Data.JSDate"] = PS["Data.JSDate"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.JSDate"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Date = PS["Data.Date"];
  var Data_Date_Component = PS["Data.Date.Component"];
  var Data_DateTime = PS["Data.DateTime"];
  var Data_DateTime_Instant = PS["Data.DateTime.Instant"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Time = PS["Data.Time"];
  var Data_Time_Component = PS["Data.Time.Component"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Effect = PS["Effect"];
  var Foreign = PS["Foreign"];
  var Prelude = PS["Prelude"];
  var toInstant = Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(function ($4) {
      return Data_DateTime_Instant.instant(Data_Time_Duration.Milliseconds($4));
  })($foreign.toInstantImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value));
  var toDateTime = Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime_Instant.toDateTime))(toInstant);
  exports["toDateTime"] = toDateTime;
  exports["toInstant"] = toInstant;
})(PS["Data.JSDate"] = PS["Data.JSDate"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Node.FS.Stats"];
  var Data_DateTime = PS["Data.DateTime"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_JSDate = PS["Data.JSDate"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var Stats = (function () {
      function Stats(value0) {
          this.value0 = value0;
      };
      Stats.create = function (value0) {
          return new Stats(value0);
      };
      return Stats;
  })();
  var modifiedTime = function (v) {
      return Data_Maybe.fromJust()(Data_JSDate.toDateTime(v.value0.mtime));
  };
  var isFile = function (v) {
      return $foreign.statsMethod("isFile", v.value0);
  };
  var isDirectory = function (v) {
      return $foreign.statsMethod("isDirectory", v.value0);
  };
  exports["Stats"] = Stats;
  exports["isFile"] = isFile;
  exports["isDirectory"] = isDirectory;
  exports["modifiedTime"] = modifiedTime;
})(PS["Node.FS.Stats"] = PS["Node.FS.Stats"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Node.FS.Async"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_DateTime = PS["Data.DateTime"];
  var Data_DateTime_Instant = PS["Data.DateTime.Instant"];
  var Data_Either = PS["Data.Either"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Show = PS["Data.Show"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Effect = PS["Effect"];
  var Effect_Exception = PS["Effect.Exception"];
  var Effect_Unsafe = PS["Effect.Unsafe"];
  var Node_Buffer = PS["Node.Buffer"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_FS = PS["Node.FS"];
  var Node_FS_Internal = PS["Node.FS.Internal"];
  var Node_FS_Perms = PS["Node.FS.Perms"];
  var Node_FS_Stats = PS["Node.FS.Stats"];
  var Node_Path = PS["Node.Path"];
  var Prelude = PS["Prelude"];                 
  var handleCallback = function (cb) {
      return $foreign.handleCallbackImpl(Data_Either.Left.create, Data_Either.Right.create, cb);
  };
  var fs = Node_FS_Internal.unsafeRequireFS;                                                                                  
  var readFile = function (file) {
      return function (cb) {
          return Node_FS_Internal.mkEffect(function (v) {
              return fs.readFile(file, {}, handleCallback(cb));
          });
      };
  };
  var readTextFile = function (encoding) {
      return function (file) {
          return function (cb) {
              return Node_FS_Internal.mkEffect(function (v) {
                  return fs.readFile(file, {
                      encoding: Data_Show.show(Node_Encoding.showEncoding)(encoding)
                  }, handleCallback(cb));
              });
          };
      };
  };
  var readdir = function (file) {
      return function (cb) {
          return Node_FS_Internal.mkEffect(function (v) {
              return fs.readdir(file, handleCallback(cb));
          });
      };
  };
  var stat = function (file) {
      return function (cb) {
          return Node_FS_Internal.mkEffect(function (v) {
              return fs.stat(file, handleCallback(function ($32) {
                  return cb(Data_Functor.map(Data_Either.functorEither)(Node_FS_Stats.Stats.create)($32));
              }));
          });
      };
  };
  var writeFile = function (file) {
      return function (buff) {
          return function (cb) {
              return Node_FS_Internal.mkEffect(function (v) {
                  return fs.writeFile(file, buff, {}, handleCallback(cb));
              });
          };
      };
  };
  var writeTextFile = function (encoding) {
      return function (file) {
          return function (buff) {
              return function (cb) {
                  return Node_FS_Internal.mkEffect(function (v) {
                      return fs.writeFile(file, buff, {
                          encoding: Data_Show.show(Node_Encoding.showEncoding)(encoding)
                      }, handleCallback(cb));
                  });
              };
          };
      };
  };
  var exists = function (file) {
      return function (cb) {
          return Node_FS_Internal.mkEffect(function (v) {
              return fs.exists(file, function (b) {
                  return Effect_Unsafe.unsafePerformEffect(cb(b));
              });
          });
      };
  };
  exports["stat"] = stat;
  exports["readdir"] = readdir;
  exports["readFile"] = readFile;
  exports["readTextFile"] = readTextFile;
  exports["writeFile"] = writeFile;
  exports["writeTextFile"] = writeTextFile;
  exports["exists"] = exists;
})(PS["Node.FS.Async"] = PS["Node.FS.Async"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_DateTime = PS["Data.DateTime"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Effect = PS["Effect"];
  var Effect_Aff = PS["Effect.Aff"];
  var Node_Buffer = PS["Node.Buffer"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_FS = PS["Node.FS"];
  var Node_FS_Async = PS["Node.FS.Async"];
  var Node_FS_Perms = PS["Node.FS.Perms"];
  var Node_FS_Stats = PS["Node.FS.Stats"];
  var Node_Path = PS["Node.Path"];
  var Prelude = PS["Prelude"];                 
  var toAff = function (p) {
      return Effect_Aff.makeAff(function (k) {
          return Data_Functor.voidLeft(Effect.functorEffect)(p(k))(Effect_Aff.nonCanceler);
      });
  };
  var toAff1 = function (f) {
      return function (a) {
          return toAff(f(a));
      };
  };                                        
  var toAff2 = function (f) {
      return function (a) {
          return function (b) {
              return toAff(f(a)(b));
          };
      };
  };                                              
  var toAff3 = function (f) {
      return function (a) {
          return function (b) {
              return function (c) {
                  return toAff(f(a)(b)(c));
              };
          };
      };
  };                                        
  var writeTextFile = toAff3(Node_FS_Async.writeTextFile);
  var stat = toAff1(Node_FS_Async.stat);        
  var readdir = toAff1(Node_FS_Async.readdir);
  var readTextFile = toAff2(Node_FS_Async.readTextFile);
  var exists = function (file) {
      return Effect_Aff.makeAff(function (k) {
          return Data_Functor.voidLeft(Effect.functorEffect)(Node_FS_Async.exists(file)(function ($0) {
              return k(Control_Applicative.pure(Data_Either.applicativeEither)($0));
          }))(Effect_Aff.nonCanceler);
      });
  };
  exports["stat"] = stat;
  exports["readdir"] = readdir;
  exports["readTextFile"] = readTextFile;
  exports["writeTextFile"] = writeTextFile;
  exports["exists"] = exists;
})(PS["Node.FS.Aff"] = PS["Node.FS.Aff"] || {});
(function(exports) {
    "use strict";

  exports.mkdirp =
    function (dir) {
      return function () {
        require("mkdirp").sync(dir);
      };
    };
})(PS["Node.FS.Sync.Mkdirp"] = PS["Node.FS.Sync.Mkdirp"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Node.FS.Sync.Mkdirp"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  exports["mkdirp"] = $foreign.mkdirp;
})(PS["Node.FS.Sync.Mkdirp"] = PS["Node.FS.Sync.Mkdirp"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Chanterelle_Internal_Logging = PS["Chanterelle.Internal.Logging"];
  var Chanterelle_Internal_Types_Compile = PS["Chanterelle.Internal.Types.Compile"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_DateTime_Instant = PS["Data.DateTime.Instant"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Effect_Class = PS["Effect.Class"];
  var Node_FS_Aff = PS["Node.FS.Aff"];
  var Node_FS_Stats = PS["Node.FS.Stats"];
  var Node_FS_Sync_Mkdirp = PS["Node.FS.Sync.Mkdirp"];
  var Node_Path = PS["Node.Path"];
  var Prelude = PS["Prelude"];
  var fileModTime = function (dictMonadAff) {
      return function (filepath) {
          return Data_Functor.map(((((dictMonadAff.MonadEffect0()).Monad0()).Bind1()).Apply0()).Functor0())(function ($12) {
              return Data_DateTime_Instant.unInstant(Data_DateTime_Instant.fromDateTime(Node_FS_Stats.modifiedTime($12)));
          })(Effect_Aff_Class.liftAff(dictMonadAff)(Node_FS_Aff.stat(filepath)));
      };
  };
  var fileIsDirty = function (dictMonadAff) {
      return function (filepath) {
          return function (compiledAt) {
              return function (chanterelleJsonModTime) {
                  return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(fileModTime(dictMonadAff)(filepath))(function (v) {
                      return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(Data_Ord.lessThan(Data_Time_Duration.ordMilliseconds)(compiledAt)(v) || Data_Ord.lessThan(Data_Time_Duration.ordMilliseconds)(compiledAt)(chanterelleJsonModTime));
                  });
              };
          };
      };
  };
  var assertDirectory = function (dictMonadAff) {
      return function (dictMonadThrow) {
          return function (dn) {
              return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Effect_Aff_Class.liftAff(dictMonadAff)(Node_FS_Aff.exists(dn)))(function (v) {
                  var $9 = !v;
                  if ($9) {
                      return Control_Apply.applySecond((((dictMonadAff.MonadEffect0()).Monad0()).Bind1()).Apply0())(Chanterelle_Internal_Logging.log(dictMonadAff.MonadEffect0())(Chanterelle_Internal_Logging.Debug.value)("creating directory " + dn))(Effect_Class.liftEffect(dictMonadAff.MonadEffect0())(Node_FS_Sync_Mkdirp.mkdirp(dn)));
                  };
                  return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Effect_Aff_Class.liftAff(dictMonadAff)(Data_Functor.map(Effect_Aff.functorAff)(Node_FS_Stats.isDirectory)(Node_FS_Aff.stat(dn))))(function (v1) {
                      var $11 = !v1;
                      if ($11) {
                          return Control_Monad_Error_Class.throwError(dictMonadThrow)(new Chanterelle_Internal_Types_Compile.FSError("Path " + (dn + " exists but is not a directory!")));
                      };
                      return Chanterelle_Internal_Logging.log(dictMonadAff.MonadEffect0())(Chanterelle_Internal_Logging.Debug.value)("path " + (dn + " exists and is a directory"));
                  });
              });
          };
      };
  };
  exports["assertDirectory"] = assertDirectory;
  exports["fileModTime"] = fileModTime;
  exports["fileIsDirty"] = fileIsDirty;
})(PS["Chanterelle.Internal.Utils.FS"] = PS["Chanterelle.Internal.Utils.FS"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Chanterelle_Internal_Logging = PS["Chanterelle.Internal.Logging"];
  var Chanterelle_Internal_Types_Deploy = PS["Chanterelle.Internal.Types.Deploy"];
  var Chanterelle_Internal_Types_Project = PS["Chanterelle.Internal.Types.Project"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_Common = PS["Data.String.Common"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Exception = PS["Effect.Exception"];
  var Network_Ethereum_Core_HexString = PS["Network.Ethereum.Core.HexString"];
  var Network_Ethereum_Core_Signatures = PS["Network.Ethereum.Core.Signatures"];
  var Network_Ethereum_Web3 = PS["Network.Ethereum.Web3"];
  var Network_Ethereum_Web3_Api = PS["Network.Ethereum.Web3.Api"];
  var Network_Ethereum_Web3_Types = PS["Network.Ethereum.Web3.Types"];
  var Network_Ethereum_Web3_Types_Provider = PS["Network.Ethereum.Web3.Types.Provider"];
  var Network_Ethereum_Web3_Types_Types = PS["Network.Ethereum.Web3.Types.Types"];
  var Prelude = PS["Prelude"];
  var providerForNetwork = function (dictMonadEffect) {
      return function (v) {
          return Effect_Class.liftEffect(dictMonadEffect)(Network_Ethereum_Web3_Types_Provider.httpProvider(v.providerUrl));
      };
  };
  var resolveProvider = function (dictMonadAff) {
      return function (v) {
          var showWeb3Error = function (v1) {
              if (v1 instanceof Network_Ethereum_Web3_Types_Types.Rpc) {
                  return "Web3 Rpc: " + Data_Show.show(Network_Ethereum_Web3_Types_Types.showRpcError)(v1.value0);
              };
              if (v1 instanceof Network_Ethereum_Web3_Types_Types.RemoteError) {
                  return "Web3 Remote: " + v1.value0;
              };
              if (v1 instanceof Network_Ethereum_Web3_Types_Types.ParserError) {
                  return "Web3 Parser: " + v1.value0;
              };
              if (v1 instanceof Network_Ethereum_Web3_Types_Types.NullError) {
                  return "Web3 NullError";
              };
              throw new Error("Failed pattern match at Chanterelle.Internal.Utils.Web3 line 56, column 25 - line 62, column 1: " + [ v1.constructor.name ]);
          };
          return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT((dictMonadAff.MonadEffect0()).Monad0()))(Effect_Aff_Class.liftAff(Effect_Aff_Class.monadAffExceptT(dictMonadAff))(providerForNetwork(Effect_Aff.monadEffectAff)(v)))(function (v1) {
              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT((dictMonadAff.MonadEffect0()).Monad0()))(Control_Monad_Except_Trans.withExceptT(((((dictMonadAff.MonadEffect0()).Monad0()).Bind1()).Apply0()).Functor0())(showWeb3Error)(Control_Monad_Except_Trans.ExceptT(Effect_Aff_Class.liftAff(dictMonadAff)(Network_Ethereum_Web3_Types_Types.runWeb3(v1)(Control_Bind.bind(Network_Ethereum_Web3_Types_Types.bindWeb3)(Network_Ethereum_Web3_Api.net_version)(function (v2) {
                  return Control_Applicative.pure(Network_Ethereum_Web3_Types_Types.applicativeWeb3)((function () {
                      var $26 = Chanterelle_Internal_Types_Project.networkIDFitsChainSpec(v.allowedChains)(v2);
                      if ($26) {
                          return new Data_Either.Right(v1);
                      };
                      return Data_Either.Left.create("Network " + (Data_Show.show(Data_Show.showString)(v.name) + (" resolves to a provider which is serving chain ID " + (v2 + ", which is not within that network's permitted chains."))));
                  })());
              }))))))(function (v2) {
                  return Control_Monad_Except_Trans.except(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(v2);
              });
          }));
      };
  };
  var makeProvider = function (dictMonadEffect) {
      return function (dictMonadThrow) {
          return function (url) {
              return Control_Bind.bind((dictMonadEffect.Monad0()).Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Exception["try"](Network_Ethereum_Web3_Types_Provider.httpProvider(url))))(function (v) {
                  if (v instanceof Data_Either.Left) {
                      return Control_Monad_Error_Class.throwError(dictMonadThrow)(new Chanterelle_Internal_Types_Deploy.ConfigurationError("Cannot connect to Provider, check NODE_URL"));
                  };
                  if (v instanceof Data_Either.Right) {
                      return Control_Applicative.pure((dictMonadEffect.Monad0()).Applicative0())(v.value0);
                  };
                  throw new Error("Failed pattern match at Chanterelle.Internal.Utils.Web3 line 35, column 3 - line 37, column 22: " + [ v.constructor.name ]);
              });
          };
      };
  };
  var getPrimaryAccount = (function () {
      var accountsError = Control_Bind.discard(Control_Bind.discardUnit)(Network_Ethereum_Web3_Types_Types.bindWeb3)(Chanterelle_Internal_Logging.log(Network_Ethereum_Web3_Types_Types.monadEffectWeb3)(Chanterelle_Internal_Logging["Error"].value)("No PrimaryAccount found on ethereum client!"))(function () {
          return Control_Monad_Error_Class.throwError(Network_Ethereum_Web3_Types_Types.monadThrowWeb3)(Effect_Exception.error("No PrimaryAccount found on ethereum client!"));
      });
      return Control_Bind.bind(Network_Ethereum_Web3_Types_Types.bindWeb3)(Network_Ethereum_Web3_Api.eth_getAccounts)(function (v) {
          return Data_Maybe.maybe(accountsError)(Control_Applicative.pure(Network_Ethereum_Web3_Types_Types.applicativeWeb3))(Data_Array.index(v)(0));
      });
  })();
  var getCodeForContract = function (dictMonadAff) {
      return function (addr) {
          return function (provider) {
              return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT((dictMonadAff.MonadEffect0()).Monad0()))(Effect_Aff_Class.liftAff(Effect_Aff_Class.monadAffExceptT(dictMonadAff))(Network_Ethereum_Web3_Types_Types.runWeb3(provider)(Network_Ethereum_Web3_Api.eth_getCode(addr)(Network_Ethereum_Web3_Types_Types.Latest.value))))(function (v) {
                  if (v instanceof Data_Either.Left) {
                      return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT((dictMonadAff.MonadEffect0()).Monad0()))(Data_Show.show(Network_Ethereum_Web3_Types_Types.showWeb3Error)(v.value0));
                  };
                  if (v instanceof Data_Either.Right) {
                      var $40 = Data_String_Common["null"](Network_Ethereum_Core_HexString.unHex(v.value0));
                      if ($40) {
                          return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT((dictMonadAff.MonadEffect0()).Monad0()))("no code at address " + Data_Show.show(Network_Ethereum_Core_Signatures.addressShow)(addr));
                      };
                      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT((dictMonadAff.MonadEffect0()).Monad0()))(v.value0);
                  };
                  throw new Error("Failed pattern match at Chanterelle.Internal.Utils.Web3 line 70, column 3 - line 74, column 31: " + [ v.constructor.name ]);
              }));
          };
      };
  };
  var resolveCodeForContract = function (dictMonadAff) {
      return function (network) {
          return function (contract) {
              return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT((dictMonadAff.MonadEffect0()).Monad0()))(Control_Monad_Except_Trans.ExceptT(resolveProvider(dictMonadAff)(network)))(function (v) {
                  return Control_Monad_Except_Trans.ExceptT(getCodeForContract(dictMonadAff)(contract)(v));
              }));
          };
      };
  };
  exports["makeProvider"] = makeProvider;
  exports["providerForNetwork"] = providerForNetwork;
  exports["resolveProvider"] = resolveProvider;
  exports["getCodeForContract"] = getCodeForContract;
  exports["resolveCodeForContract"] = resolveCodeForContract;
  exports["getPrimaryAccount"] = getPrimaryAccount;
})(PS["Chanterelle.Internal.Utils.Web3"] = PS["Chanterelle.Internal.Utils.Web3"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Chanterelle_Internal_Types = PS["Chanterelle.Internal.Types"];
  var Chanterelle_Internal_Types_Deploy = PS["Chanterelle.Internal.Types.Deploy"];
  var Chanterelle_Internal_Utils_FS = PS["Chanterelle.Internal.Utils.FS"];
  var Chanterelle_Internal_Utils_Json = PS["Chanterelle.Internal.Utils.Json"];
  var Chanterelle_Internal_Utils_Web3 = PS["Chanterelle.Internal.Utils.Web3"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Parallel = PS["Control.Parallel"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Validation_Semigroup = PS["Data.Validation.Semigroup"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Effect_Exception = PS["Effect.Exception"];
  var Network_Ethereum_Web3 = PS["Network.Ethereum.Web3"];
  var Network_Ethereum_Web3_Api = PS["Network.Ethereum.Web3.Api"];
  var Network_Ethereum_Web3_Types_Types = PS["Network.Ethereum.Web3.Types.Types"];
  var Prelude = PS["Prelude"];
  var makeDeployConfigWithProvider = function (dictMonadAff) {
      return function (dictMonadThrow) {
          return function (provider) {
              return function (tout) {
                  var timeout = Data_Int.toNumber(tout);
                  return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Effect_Aff_Class.liftAff(dictMonadAff)(Network_Ethereum_Web3_Types_Types.runWeb3(provider)(Control_Bind.bind(Network_Ethereum_Web3_Types_Types.bindWeb3)(Chanterelle_Internal_Utils_Web3.getPrimaryAccount)(function (v) {
                      return Control_Bind.bind(Network_Ethereum_Web3_Types_Types.bindWeb3)(Network_Ethereum_Web3_Api.net_version)(function (v1) {
                          return Control_Applicative.pure(Network_Ethereum_Web3_Types_Types.applicativeWeb3)({
                              provider: provider,
                              primaryAccount: v,
                              networkId: v1,
                              timeout: timeout,
                              writeArtifacts: true
                          });
                      });
                  }))))(function (v) {
                      if (v instanceof Data_Either.Left) {
                          var errMsg = "Couldn't create DeployConfig -- " + Data_Show.show(Network_Ethereum_Web3_Types_Types.showWeb3Error)(v.value0);
                          return Control_Monad_Error_Class.throwError(dictMonadThrow)(new Chanterelle_Internal_Types_Deploy.ConfigurationError(errMsg));
                      };
                      if (v instanceof Data_Either.Right) {
                          return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(v.value0);
                      };
                      throw new Error("Failed pattern match at Chanterelle.Internal.Utils line 52, column 3 - line 56, column 32: " + [ v.constructor.name ]);
                  });
              };
          };
      };
  };
  exports["makeDeployConfigWithProvider"] = makeDeployConfigWithProvider;
})(PS["Chanterelle.Internal.Utils"] = PS["Chanterelle.Internal.Utils"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Chanterelle_Internal_Deploy = PS["Chanterelle.Internal.Deploy"];
  var Chanterelle_Internal_Logging = PS["Chanterelle.Internal.Logging"];
  var Chanterelle_Internal_Types = PS["Chanterelle.Internal.Types"];
  var Chanterelle_Internal_Types_Deploy = PS["Chanterelle.Internal.Types.Deploy"];
  var Chanterelle_Internal_Utils = PS["Chanterelle.Internal.Utils"];
  var Chanterelle_Internal_Utils_Web3 = PS["Chanterelle.Internal.Utils.Web3"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Exception = PS["Effect.Exception"];
  var Network_Ethereum_Web3 = PS["Network.Ethereum.Web3"];
  var Prelude = PS["Prelude"];                 
  var deployWithProvider = function (provider) {
      return function (tout) {
          return function (deployScript) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Except_Trans.runExceptT(Chanterelle_Internal_Utils.makeDeployConfigWithProvider(Effect_Aff_Class.monadAffExceptT(Effect_Aff_Class.monadAffAff))(Control_Monad_Except_Trans.monadThrowExceptT(Effect_Aff.monadAff))(provider)(tout)))(function (v) {
                  if (v instanceof Data_Either.Left) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Chanterelle_Internal_Logging.logDeployError(Effect_Aff.monadEffectAff)(v.value0))(function () {
                          return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("Error in building DeployConfig!"));
                      });
                  };
                  if (v instanceof Data_Either.Right) {
                      return Control_Bind.bind(Effect_Aff.bindAff)(Chanterelle_Internal_Types_Deploy.runDeployM(deployScript)(v.value0))(function (v1) {
                          if (v1 instanceof Data_Either.Left) {
                              return Control_Apply.applySecond(Effect_Aff.applyAff)(Chanterelle_Internal_Logging.logDeployError(Effect_Aff.monadEffectAff)(v1.value0))(Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("Error during deployment!")));
                          };
                          if (v1 instanceof Data_Either.Right) {
                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value0);
                          };
                          throw new Error("Failed pattern match at Chanterelle.Deploy line 48, column 7 - line 50, column 25: " + [ v1.constructor.name ]);
                      });
                  };
                  throw new Error("Failed pattern match at Chanterelle.Deploy line 42, column 3 - line 50, column 25: " + [ v.constructor.name ]);
              });
          };
      };
  };
  var deploy = function (url) {
      return function (tout) {
          return function (deployScript) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Except_Trans.runExceptT(Chanterelle_Internal_Utils_Web3.makeProvider(Control_Monad_Except_Trans.monadEffectExceptT(Effect_Aff.monadEffectAff))(Control_Monad_Except_Trans.monadThrowExceptT(Effect_Aff.monadAff))(url)))(function (v) {
                  if (v instanceof Data_Either.Left) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Chanterelle_Internal_Logging.logDeployError(Effect_Aff.monadEffectAff)(v.value0))(function () {
                          return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Exception["throw"]("DeployM error"));
                      });
                  };
                  if (v instanceof Data_Either.Right) {
                      return deployWithProvider(v.value0)(tout)(deployScript);
                  };
                  throw new Error("Failed pattern match at Chanterelle.Deploy line 28, column 37 - line 33, column 52: " + [ v.constructor.name ]);
              });
          };
      };
  };
  exports["deploy"] = deploy;
  exports["deployWithProvider"] = deployWithProvider;
})(PS["Chanterelle.Deploy"] = PS["Chanterelle.Deploy"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var ParseError = (function () {
      function ParseError(value0) {
          this.value0 = value0;
      };
      ParseError.create = function (value0) {
          return new ParseError(value0);
      };
      return ParseError;
  })();
  var unParser = function (v) {
      return v;
  };
  var $$try = function (v) {
      return function (v1) {
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v2) {
              return {
                  pos: v1.pos,
                  error: v2.error
              };
          })(v(v1));
      };
  };
  var showParseError = new Data_Show.Show(function (v) {
      return v.value0;
  });
  var runParser = function (v) {
      return function (s) {
          return Data_Bifunctor.bimap(Data_Either.bifunctorEither)(function (v1) {
              return v1.error;
          })(function (v1) {
              return v1.result;
          })(v({
              str: s,
              pos: 0
          }));
      };
  }; 
  var functorParser = new Data_Functor.Functor(function (f) {
      return function (v) {
          return function ($80) {
              return Data_Functor.map(Data_Either.functorEither)(function (v1) {
                  return {
                      result: f(v1.result),
                      suffix: v1.suffix
                  };
              })(v($80));
          };
      };
  });
  var fail = function (msg) {
      return function (v) {
          return new Data_Either.Left({
              pos: v.pos,
              error: new ParseError(msg)
          });
      };
  }; 
  var applyParser = new Control_Apply.Apply(function () {
      return functorParser;
  }, function (v) {
      return function (v1) {
          return function (s) {
              return Control_Bind.bind(Data_Either.bindEither)(v(s))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(v1(v2.suffix))(function (v3) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          result: v2.result(v3.result),
                          suffix: v3.suffix
                      });
                  });
              });
          };
      };
  });
  var bindParser = new Control_Bind.Bind(function () {
      return applyParser;
  }, function (v) {
      return function (f) {
          return function (s) {
              return Control_Bind.bind(Data_Either.bindEither)(v(s))(function (v1) {
                  return unParser(f(v1.result))(v1.suffix);
              });
          };
      };
  });
  var applicativeParser = new Control_Applicative.Applicative(function () {
      return applyParser;
  }, function (a) {
      return function (s) {
          return new Data_Either.Right({
              result: a,
              suffix: s
          });
      };
  });
  var monadParser = new Control_Monad.Monad(function () {
      return applicativeParser;
  }, function () {
      return bindParser;
  });
  var monadRecParser = new Control_Monad_Rec_Class.MonadRec(function () {
      return monadParser;
  }, function (f) {
      return function (a) {
          var split = function (v) {
              if (v.result instanceof Control_Monad_Rec_Class.Loop) {
                  return new Control_Monad_Rec_Class.Loop({
                      state: v.result.value0,
                      str: v.suffix
                  });
              };
              if (v.result instanceof Control_Monad_Rec_Class.Done) {
                  return new Control_Monad_Rec_Class.Done({
                      result: v.result.value0,
                      suffix: v.suffix
                  });
              };
              throw new Error("Failed pattern match at Text.Parsing.StringParser line 88, column 7 - line 88, column 70: " + [ v.constructor.name ]);
          };
          return function (str) {
              return Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEither)(function (st) {
                  return Data_Functor.map(Data_Either.functorEither)(split)(unParser(f(st.state))(st.str));
              })({
                  state: a,
                  str: str
              });
          };
      };
  });
  var altParser = new Control_Alt.Alt(function () {
      return functorParser;
  }, function (v) {
      return function (v1) {
          return function (s) {
              var v2 = v(s);
              if (v2 instanceof Data_Either.Left) {
                  if (s.pos === v2.value0.pos) {
                      return v1(s);
                  };
                  if (Data_Boolean.otherwise) {
                      return new Data_Either.Left({
                          error: v2.value0.error,
                          pos: v2.value0.pos
                      });
                  };
              };
              return v2;
          };
      };
  });
  var plusParser = new Control_Plus.Plus(function () {
      return altParser;
  }, fail("No alternative"));
  var alternativeParser = new Control_Alternative.Alternative(function () {
      return applicativeParser;
  }, function () {
      return plusParser;
  });
  exports["ParseError"] = ParseError;
  exports["unParser"] = unParser;
  exports["runParser"] = runParser;
  exports["fail"] = fail;
  exports["try"] = $$try;
  exports["showParseError"] = showParseError;
  exports["functorParser"] = functorParser;
  exports["applyParser"] = applyParser;
  exports["applicativeParser"] = applicativeParser;
  exports["altParser"] = altParser;
  exports["plusParser"] = plusParser;
  exports["alternativeParser"] = alternativeParser;
  exports["bindParser"] = bindParser;
  exports["monadParser"] = monadParser;
  exports["monadRecParser"] = monadRecParser;
})(PS["Text.Parsing.StringParser"] = PS["Text.Parsing.StringParser"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];                 
  var withError = function (p) {
      return function (msg) {
          return Control_Alt.alt(Text_Parsing_StringParser.altParser)(p)(Text_Parsing_StringParser.fail(msg));
      };
  };
  var option = function (a) {
      return function (p) {
          return Control_Alt.alt(Text_Parsing_StringParser.altParser)(p)(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(a));
      };
  };
  var optionMaybe = function (p) {
      return option(Data_Maybe.Nothing.value)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Maybe.Just.create)(p));
  };
  var many1Till = function (p) {
      return function (end) {
          var ending = function (acc) {
              return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(end)(function (v) {
                  return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Control_Monad_Rec_Class.Done(Data_List_NonEmpty.reverse(acc)));
              });
          };
          var $$continue = function (acc) {
              return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
                  return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Control_Monad_Rec_Class.Loop(Data_List_NonEmpty.cons(v)(acc)));
              });
          };
          var inner = function (acc) {
              return Control_Alt.alt(Text_Parsing_StringParser.altParser)(ending(acc))($$continue(acc));
          };
          return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
              return Control_Monad_Rec_Class.tailRecM(Text_Parsing_StringParser.monadRecParser)(inner)(Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(v));
          });
      };
  };
  var manyTill = function (p) {
      return function (end) {
          return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(end)(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_List_Types.Nil.value)))(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_List_NonEmpty.toList)(many1Till(p)(end)));
      };
  };
  var many = Data_List.manyRec(Text_Parsing_StringParser.monadRecParser)(Text_Parsing_StringParser.alternativeParser);
  var lookAhead = function (v) {
      return function (s) {
          var v1 = v(s);
          if (v1 instanceof Data_Either.Right) {
              return new Data_Either.Right({
                  result: v1.value0.result,
                  suffix: s
              });
          };
          return v1;
      };
  };
  var cons$prime = function (h) {
      return function (t) {
          return new Data_NonEmpty.NonEmpty(h, t);
      };
  };
  var many1 = function (p) {
      return Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(cons$prime)(p))(many(p));
  };
  var choice = function (dictFoldable) {
      return Data_Foldable.foldl(dictFoldable)(Control_Alt.alt(Text_Parsing_StringParser.altParser))(Text_Parsing_StringParser.fail("Nothing to parse"));
  };
  exports["lookAhead"] = lookAhead;
  exports["many"] = many;
  exports["many1"] = many1;
  exports["withError"] = withError;
  exports["option"] = option;
  exports["optionMaybe"] = optionMaybe;
  exports["choice"] = choice;
  exports["manyTill"] = manyTill;
  exports["many1Till"] = many1Till;
})(PS["Text.Parsing.StringParser.Combinators"] = PS["Text.Parsing.StringParser.Combinators"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Array_NonEmpty_Internal = PS["Data.Array.NonEmpty.Internal"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];          
  var unsafeFromArray = Unsafe_Coerce.unsafeCoerce;
  var toArray = Unsafe_Coerce.unsafeCoerce;
  var fromArray = function (xs) {
      if (Data_Array.length(xs) > 0) {
          return new Data_Maybe.Just(unsafeFromArray(xs));
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Array.NonEmpty line 134, column 1 - line 134, column 58: " + [ xs.constructor.name ]);
  };
  var adaptMaybe = function (f) {
      return function ($52) {
          return Data_Maybe.fromJust()(f(toArray($52)));
      };
  };                                     
  var uncons = adaptMaybe(Data_Array.uncons);
  var adaptAny = function (f) {
      return function ($54) {
          return f(toArray($54));
      };
  };                                     
  var length = adaptAny(Data_Array.length);
  exports["fromArray"] = fromArray;
  exports["toArray"] = toArray;
  exports["length"] = length;
  exports["uncons"] = uncons;
})(PS["Data.Array.NonEmpty"] = PS["Data.Array.NonEmpty"] || {});
(function(exports) {
    "use strict";

  exports["regex'"] = function (left) {
    return function (right) {
      return function (s1) {
        return function (s2) {
          try {
            return right(new RegExp(s1, s2));
          } catch (e) {
            return left(e.message);
          }
        };
      };
    };
  };

  exports.split = function (r) {
    return function (s) {
      return s.split(r);
    };
  };
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_Common = PS["Data.String.Common"];
  var Prelude = PS["Prelude"];                 
  var RegexFlags = (function () {
      function RegexFlags(value0) {
          this.value0 = value0;
      };
      RegexFlags.create = function (value0) {
          return new RegexFlags(value0);
      };
      return RegexFlags;
  })();
  var noFlags = new RegexFlags({
      global: false,
      ignoreCase: false,
      multiline: false,
      sticky: false,
      unicode: false
  });
  exports["RegexFlags"] = RegexFlags;
  exports["noFlags"] = noFlags;
})(PS["Data.String.Regex.Flags"] = PS["Data.String.Regex.Flags"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.String.Regex"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array_NonEmpty = PS["Data.Array.NonEmpty"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Prelude = PS["Prelude"];                                                    
  var renderFlags = function (v) {
      return (function () {
          if (v.value0.global) {
              return "g";
          };
          return "";
      })() + ((function () {
          if (v.value0.ignoreCase) {
              return "i";
          };
          return "";
      })() + ((function () {
          if (v.value0.multiline) {
              return "m";
          };
          return "";
      })() + ((function () {
          if (v.value0.sticky) {
              return "y";
          };
          return "";
      })() + (function () {
          if (v.value0.unicode) {
              return "u";
          };
          return "";
      })())));
  };
  var regex = function (s) {
      return function (f) {
          return $foreign["regex'"](Data_Either.Left.create)(Data_Either.Right.create)(s)(renderFlags(f));
      };
  };
  exports["regex"] = regex;
  exports["renderFlags"] = renderFlags;
  exports["split"] = $foreign.split;
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Array_NonEmpty = PS["Data.Array.NonEmpty"];
  var Data_Char = PS["Data.Char"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_CodePoints = PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_Combinators = PS["Text.Parsing.StringParser.Combinators"];                 
  var string = function (nt) {
      return function (s) {
          if (Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(Data_String_CodePoints["indexOf'"](nt)(s.pos)(s.str))(new Data_Maybe.Just(s.pos))) {
              return new Data_Either.Right({
                  result: nt,
                  suffix: {
                      str: s.str,
                      pos: s.pos + Data_String_CodePoints.length(nt) | 0
                  }
              });
          };
          return new Data_Either.Left({
              pos: s.pos,
              error: new Text_Parsing_StringParser.ParseError("Expected '" + (nt + "'."))
          });
      };
  };
  var eof = function (s) {
      if (s.pos < Data_String_CodePoints.length(s.str)) {
          return new Data_Either.Left({
              pos: s.pos,
              error: new Text_Parsing_StringParser.ParseError("Expected EOF")
          });
      };
      return new Data_Either.Right({
          result: Data_Unit.unit,
          suffix: s
      });
  };
  var anyChar = function (v) {
      var v1 = Data_String_CodeUnits.charAt(v.pos)(v.str);
      if (v1 instanceof Data_Maybe.Just) {
          return new Data_Either.Right({
              result: v1.value0,
              suffix: {
                  str: v.str,
                  pos: v.pos + 1 | 0
              }
          });
      };
      if (v1 instanceof Data_Maybe.Nothing) {
          return new Data_Either.Left({
              pos: v.pos,
              error: new Text_Parsing_StringParser.ParseError("Unexpected EOF")
          });
      };
      throw new Error("Failed pattern match at Text.Parsing.StringParser.String line 47, column 3 - line 49, column 64: " + [ v1.constructor.name ]);
  };
  var anyDigit = Text_Parsing_StringParser["try"](Control_Bind.bind(Text_Parsing_StringParser.bindParser)(anyChar)(function (v) {
      var $37 = v >= "0" && v <= "9";
      if ($37) {
          return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v);
      };
      return Text_Parsing_StringParser.fail("Character " + (Data_Show.show(Data_Show.showChar)(v) + " is not a digit"));
  }));
  var satisfy = function (f) {
      return Text_Parsing_StringParser["try"](Control_Bind.bind(Text_Parsing_StringParser.bindParser)(anyChar)(function (v) {
          var $41 = f(v);
          if ($41) {
              return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v);
          };
          return Text_Parsing_StringParser.fail("Character " + (Data_Show.show(Data_Show.showChar)(v) + " did not satisfy predicate"));
      }));
  };
  var $$char = function (c) {
      return Text_Parsing_StringParser_Combinators.withError(satisfy(function (v) {
          return v === c;
      }))("Could not match character " + Data_Show.show(Data_Show.showChar)(c));
  };
  exports["eof"] = eof;
  exports["anyChar"] = anyChar;
  exports["anyDigit"] = anyDigit;
  exports["string"] = string;
  exports["satisfy"] = satisfy;
  exports["char"] = $$char;
})(PS["Text.Parsing.StringParser.String"] = PS["Text.Parsing.StringParser.String"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Error_Util = PS["Control.Error.Util"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Combinators = PS["Data.Argonaut.Decode.Combinators"];
  var Data_Array = PS["Data.Array"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Eq = PS["Data.Generic.Rep.Eq"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int = PS["Data.Int"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_TacitString = PS["Data.TacitString"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_Combinators = PS["Text.Parsing.StringParser.Combinators"];
  var Text_Parsing_StringParser_String = PS["Text.Parsing.StringParser.String"];                 
  var SolidityBool = (function () {
      function SolidityBool() {

      };
      SolidityBool.value = new SolidityBool();
      return SolidityBool;
  })();
  var SolidityAddress = (function () {
      function SolidityAddress() {

      };
      SolidityAddress.value = new SolidityAddress();
      return SolidityAddress;
  })();
  var SolidityUint = (function () {
      function SolidityUint(value0) {
          this.value0 = value0;
      };
      SolidityUint.create = function (value0) {
          return new SolidityUint(value0);
      };
      return SolidityUint;
  })();
  var SolidityInt = (function () {
      function SolidityInt(value0) {
          this.value0 = value0;
      };
      SolidityInt.create = function (value0) {
          return new SolidityInt(value0);
      };
      return SolidityInt;
  })();
  var SolidityString = (function () {
      function SolidityString() {

      };
      SolidityString.value = new SolidityString();
      return SolidityString;
  })();
  var SolidityBytesN = (function () {
      function SolidityBytesN(value0) {
          this.value0 = value0;
      };
      SolidityBytesN.create = function (value0) {
          return new SolidityBytesN(value0);
      };
      return SolidityBytesN;
  })();
  var SolidityBytesD = (function () {
      function SolidityBytesD() {

      };
      SolidityBytesD.value = new SolidityBytesD();
      return SolidityBytesD;
  })();
  var SolidityVector = (function () {
      function SolidityVector(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SolidityVector.create = function (value0) {
          return function (value1) {
              return new SolidityVector(value0, value1);
          };
      };
      return SolidityVector;
  })();
  var SolidityArray = (function () {
      function SolidityArray(value0) {
          this.value0 = value0;
      };
      SolidityArray.create = function (value0) {
          return new SolidityArray(value0);
      };
      return SolidityArray;
  })();
  var SolidityFallback = (function () {
      function SolidityFallback() {

      };
      SolidityFallback.value = new SolidityFallback();
      return SolidityFallback;
  })();
  var IndexedSolidityValue = (function () {
      function IndexedSolidityValue(value0) {
          this.value0 = value0;
      };
      IndexedSolidityValue.create = function (value0) {
          return new IndexedSolidityValue(value0);
      };
      return IndexedSolidityValue;
  })();
  var SolidityEvent = (function () {
      function SolidityEvent(value0) {
          this.value0 = value0;
      };
      SolidityEvent.create = function (value0) {
          return new SolidityEvent(value0);
      };
      return SolidityEvent;
  })();
  var SolidityConstructor = (function () {
      function SolidityConstructor(value0) {
          this.value0 = value0;
      };
      SolidityConstructor.create = function (value0) {
          return new SolidityConstructor(value0);
      };
      return SolidityConstructor;
  })();
  var SolidityFunction = (function () {
      function SolidityFunction(value0) {
          this.value0 = value0;
      };
      SolidityFunction.create = function (value0) {
          return new SolidityFunction(value0);
      };
      return SolidityFunction;
  })();
  var AbiFunction = (function () {
      function AbiFunction(value0) {
          this.value0 = value0;
      };
      AbiFunction.create = function (value0) {
          return new AbiFunction(value0);
      };
      return AbiFunction;
  })();
  var AbiConstructor = (function () {
      function AbiConstructor(value0) {
          this.value0 = value0;
      };
      AbiConstructor.create = function (value0) {
          return new AbiConstructor(value0);
      };
      return AbiConstructor;
  })();
  var AbiEvent = (function () {
      function AbiEvent(value0) {
          this.value0 = value0;
      };
      AbiEvent.create = function (value0) {
          return new AbiEvent(value0);
      };
      return AbiEvent;
  })();
  var AbiFallback = (function () {
      function AbiFallback(value0) {
          this.value0 = value0;
      };
      AbiFallback.create = function (value0) {
          return new AbiFallback(value0);
      };
      return AbiFallback;
  })();
  var Abi = function (x) {
      return x;
  };
  var Format = function (format) {
      this.format = format;
  }; 
  var parseString = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_String.string("string"))(function (v) {
      return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(SolidityString.value);
  });
  var parseDigits = Data_Functor.map(Text_Parsing_StringParser.functorParser)(function ($209) {
      return Data_String_CodeUnits.fromCharArray(Data_Array.fromFoldable(Data_List_Types.foldableNonEmptyList)($209));
  })(Text_Parsing_StringParser_Combinators.many1(Text_Parsing_StringParser["try"](Text_Parsing_StringParser_String.anyDigit)));
  var parseBool = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_String.string("bool"))(function (v) {
      return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(SolidityBool.value);
  });
  var parseAddress = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_String.string("address"))(function (v) {
      return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(SolidityAddress.value);
  });
  var format = function (dict) {
      return dict.format;
  };
  var formatSolidityType = new Format(function (s) {
      if (s instanceof SolidityBool) {
          return "bool";
      };
      if (s instanceof SolidityAddress) {
          return "address";
      };
      if (s instanceof SolidityUint) {
          return "uint" + Data_Show.show(Data_Show.showInt)(s.value0);
      };
      if (s instanceof SolidityInt) {
          return "int" + Data_Show.show(Data_Show.showInt)(s.value0);
      };
      if (s instanceof SolidityString) {
          return "string";
      };
      if (s instanceof SolidityBytesN) {
          return "bytes" + Data_Show.show(Data_Show.showInt)(s.value0);
      };
      if (s instanceof SolidityBytesD) {
          return "bytes";
      };
      if (s instanceof SolidityVector) {
          return format(formatSolidityType)(s.value1) + Data_Foldable.foldMap(Data_List_Types.foldableNonEmptyList)(Data_Monoid.monoidString)(function (n) {
              return "[" + (Data_Show.show(Data_Show.showInt)(n) + "]");
          })(s.value0);
      };
      if (s instanceof SolidityArray) {
          return format(formatSolidityType)(s.value0) + "[]";
      };
      throw new Error("Failed pattern match at Data.AbiParser line 58, column 14 - line 69, column 1: " + [ s.constructor.name ]);
  });
  var formatIndexedSolidityValue = new Format(function (v) {
      return format(formatSolidityType)(v.value0.type);
  });
  var formatInput = new Format(function (v) {
      return format(formatSolidityType)(v.type);
  });
  var decodeJsonSolidityFallback = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Applicative.pure(Data_Either.applicativeEither)(SolidityFallback.value);
  });
  var asInt = function (n) {
      var v = Data_Int.fromString(n);
      if (v instanceof Data_Maybe.Nothing) {
          return Text_Parsing_StringParser.fail("Couldn't parse as Int : " + n);
      };
      if (v instanceof Data_Maybe.Just) {
          return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v.value0);
      };
      throw new Error("Failed pattern match at Data.AbiParser line 91, column 11 - line 94, column 25: " + [ v.constructor.name ]);
  };
  var parseBytes = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_String.string("bytes"))(function (v) {
      return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.optionMaybe(parseDigits))(function (v1) {
          if (v1 instanceof Data_Maybe.Nothing) {
              return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(SolidityBytesD.value);
          };
          if (v1 instanceof Data_Maybe.Just) {
              return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(asInt(v1.value0))(function (v2) {
                  return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new SolidityBytesN(v2));
              });
          };
          throw new Error("Failed pattern match at Data.AbiParser line 100, column 3 - line 104, column 30: " + [ v1.constructor.name ]);
      });
  });
  var $$parseInt = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_String.string("int"))(function (v) {
      return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(parseDigits)(asInt))(function (v1) {
          return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new SolidityInt(v1));
      });
  });
  var parseUint = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_String.string("uint"))(function (v) {
      return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(parseDigits)(asInt))(function (v1) {
          return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new SolidityUint(v1));
      });
  });
  var solidityBasicTypeParser = Text_Parsing_StringParser_Combinators.choice(Data_Foldable.foldableArray)([ parseUint, $$parseInt, parseAddress, parseBool, parseString, parseBytes, parseAddress ]);
  var vectoDimentionsParser = Text_Parsing_StringParser_Combinators.manyTill(Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_String["char"]("["))(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(parseDigits)(asInt)))(Text_Parsing_StringParser_String["char"]("]")))(Text_Parsing_StringParser_Combinators.lookAhead(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Data_Functor["void"](Text_Parsing_StringParser.functorParser)(Text_Parsing_StringParser_String.string("[]")))(Text_Parsing_StringParser_String.eof)));
  var solidityTypeParser = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(solidityBasicTypeParser)(function (v) {
      return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(vectoDimentionsParser)(function (v1) {
          var t$prime = (function () {
              if (v1 instanceof Data_List_Types.Nil) {
                  return v;
              };
              if (v1 instanceof Data_List_Types.Cons) {
                  return new SolidityVector(Data_List_Types.NonEmptyList(new Data_NonEmpty.NonEmpty(v1.value0, v1.value1)), v);
              };
              throw new Error("Failed pattern match at Data.AbiParser line 131, column 10 - line 133, column 61: " + [ v1.constructor.name ]);
          })();
          return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(new SolidityArray(t$prime))(Text_Parsing_StringParser_String.string("[]")))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(t$prime));
      });
  });
  var parseSolidityType = function (s) {
      return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (err) {
          return "Failed to parse SolidityType " + (Data_Show.show(Data_Show.showString)(s) + (" with error: " + Data_Show.show(Text_Parsing_StringParser.showParseError)(err)));
      })(Text_Parsing_StringParser.runParser(Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(solidityTypeParser)(Text_Parsing_StringParser_String.eof))(s));
  };
  var decodeFunctionInput = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("name"))(function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("type"))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(parseSolidityType(v2))(function (v3) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          type: v3,
                          name: v1
                      });
                  });
              });
          });
      });
  });
  var decodeJsonSolidityConstructor = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeFunctionInput))(v)("inputs"))(function (v1) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new SolidityConstructor({
                  inputs: v1,
                  isUnCurried: Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v2) {
                      return v2.name !== "";
                  })(v1) && !Data_Array["null"](v1)
              }));
          });
      });
  });
  var decodeJsonIndexedSolidityValue = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("name"))(function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("type"))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(parseSolidityType(v2))(function (v3) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonBoolean)(v)("indexed"))(function (v4) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(new IndexedSolidityValue({
                              name: v1,
                              type: v3,
                              indexed: v4
                          }));
                      });
                  });
              });
          });
      });
  });
  var decodeJsonSolidityEvent = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("name"))(function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeJsonIndexedSolidityValue))(v)("inputs"))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonBoolean)(v)("anonymous"))(function (v3) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new SolidityEvent({
                          name: v1,
                          inputs: v2,
                          anonymous: v3
                      }));
                  });
              });
          });
      });
  });
  var decodeJsonSolidityType = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("type"))(function (v1) {
              return parseSolidityType(v1);
          });
      });
  });
  var decodeJsonSolidityFunction = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("name"))(function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeFunctionInput))(v)("inputs"))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeJsonSolidityType))(v)("outputs"))(function (v3) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonBoolean)(v)("constant"))(function (v4) {
                          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonBoolean)(v)("payable"))(function (v5) {
                              return Control_Applicative.pure(Data_Either.applicativeEither)(new SolidityFunction({
                                  name: v1,
                                  inputs: v2,
                                  outputs: v3,
                                  constant: v4,
                                  payable: v5,
                                  isConstructor: false,
                                  isUnCurried: Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v6) {
                                      return v6.name !== "";
                                  })(v2) && !Data_Array["null"](v2)
                              }));
                          });
                      });
                  });
              });
          });
      });
  });
  var decodeJsonAbiType = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("type"))(function (v1) {
              var json$prime = Data_Argonaut_Core.fromObject(v);
              if (v1 === "function") {
                  return Data_Functor.map(Data_Either.functorEither)(AbiFunction.create)(Data_Argonaut_Decode_Class.decodeJson(decodeJsonSolidityFunction)(json$prime));
              };
              if (v1 === "constructor") {
                  return Data_Functor.map(Data_Either.functorEither)(AbiConstructor.create)(Data_Argonaut_Decode_Class.decodeJson(decodeJsonSolidityConstructor)(json$prime));
              };
              if (v1 === "event") {
                  return Data_Functor.map(Data_Either.functorEither)(AbiEvent.create)(Data_Argonaut_Decode_Class.decodeJson(decodeJsonSolidityEvent)(json$prime));
              };
              if (v1 === "fallback") {
                  return Data_Functor.map(Data_Either.functorEither)(AbiFallback.create)(Data_Argonaut_Decode_Class.decodeJson(decodeJsonSolidityFallback)(json$prime));
              };
              return Data_Either.Left.create("Unkown abi type: " + v1);
          });
      });
  });
  var decodeJsonAbi = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      var safeDecode = function (idx) {
          return function (json$prime) {
              return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (error) {
                  return {
                      idx: idx,
                      error: error
                  };
              })(Data_Argonaut_Decode_Class.decodeJson(decodeJsonAbiType)(json$prime));
          };
      };
      return Control_Bind.bind(Data_Either.bindEither)(Control_Error_Util.note("Failed to decode ABI as Array type.")(Data_Argonaut_Core.toArray(json)))(function (v) {
          return Control_Applicative.pure(Data_Either.applicativeEither)(Abi(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(safeDecode)(v)));
      });
  });
  exports["format"] = format;
  exports["Format"] = Format;
  exports["SolidityBool"] = SolidityBool;
  exports["SolidityAddress"] = SolidityAddress;
  exports["SolidityUint"] = SolidityUint;
  exports["SolidityInt"] = SolidityInt;
  exports["SolidityString"] = SolidityString;
  exports["SolidityBytesN"] = SolidityBytesN;
  exports["SolidityBytesD"] = SolidityBytesD;
  exports["SolidityVector"] = SolidityVector;
  exports["SolidityArray"] = SolidityArray;
  exports["parseUint"] = parseUint;
  exports["parseBool"] = parseBool;
  exports["parseString"] = parseString;
  exports["parseDigits"] = parseDigits;
  exports["asInt"] = asInt;
  exports["parseBytes"] = parseBytes;
  exports["parseAddress"] = parseAddress;
  exports["solidityBasicTypeParser"] = solidityBasicTypeParser;
  exports["vectoDimentionsParser"] = vectoDimentionsParser;
  exports["solidityTypeParser"] = solidityTypeParser;
  exports["parseSolidityType"] = parseSolidityType;
  exports["SolidityFunction"] = SolidityFunction;
  exports["SolidityConstructor"] = SolidityConstructor;
  exports["IndexedSolidityValue"] = IndexedSolidityValue;
  exports["SolidityEvent"] = SolidityEvent;
  exports["SolidityFallback"] = SolidityFallback;
  exports["AbiFunction"] = AbiFunction;
  exports["AbiConstructor"] = AbiConstructor;
  exports["AbiEvent"] = AbiEvent;
  exports["AbiFallback"] = AbiFallback;
  exports["Abi"] = Abi;
  exports["formatSolidityType"] = formatSolidityType;
  exports["decodeJsonSolidityType"] = decodeJsonSolidityType;
  exports["formatInput"] = formatInput;
  exports["decodeFunctionInput"] = decodeFunctionInput;
  exports["decodeJsonSolidityFunction"] = decodeJsonSolidityFunction;
  exports["decodeJsonSolidityConstructor"] = decodeJsonSolidityConstructor;
  exports["formatIndexedSolidityValue"] = formatIndexedSolidityValue;
  exports["decodeJsonIndexedSolidityValue"] = decodeJsonIndexedSolidityValue;
  exports["decodeJsonSolidityEvent"] = decodeJsonSolidityEvent;
  exports["decodeJsonSolidityFallback"] = decodeJsonSolidityFallback;
  exports["decodeJsonAbiType"] = decodeJsonAbiType;
  exports["decodeJsonAbi"] = decodeJsonAbi;
})(PS["Data.AbiParser"] = PS["Data.AbiParser"] || {});
(function(exports) {
    "use strict";

  exports._jsonParser = function (fail, succ, s) {
    try {
      return succ(JSON.parse(s));
    }
    catch (e) {
      return fail(e.message);
    }
  };
})(PS["Data.Argonaut.Parser"] = PS["Data.Argonaut.Parser"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Argonaut.Parser"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Either = PS["Data.Either"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];                 
  var jsonParser = function (j) {
      return $foreign._jsonParser(Data_Either.Left.create, Data_Either.Right.create, j);
  };
  exports["jsonParser"] = jsonParser;
})(PS["Data.Argonaut.Parser"] = PS["Data.Argonaut.Parser"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Prelude = PS["Prelude"];                 
  var Choice = function (Profunctor0, left, right) {
      this.Profunctor0 = Profunctor0;
      this.left = left;
      this.right = right;
  };
  var right = function (dict) {
      return dict.right;
  };
  var left = function (dict) {
      return dict.left;
  };
  exports["left"] = left;
  exports["right"] = right;
  exports["Choice"] = Choice;
})(PS["Data.Profunctor.Choice"] = PS["Data.Profunctor.Choice"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Lens_Internal_Market = PS["Data.Lens.Internal.Market"];
  var Data_Lens_Internal_Tagged = PS["Data.Lens.Internal.Tagged"];
  var Data_Lens_Types = PS["Data.Lens.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Prelude = PS["Prelude"];                                                                                                                        
  var prism = function (to) {
      return function (fro) {
          return function (dictChoice) {
              return function (pab) {
                  return Data_Profunctor.dimap(dictChoice.Profunctor0())(fro)(Data_Either.either(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn)))(Data_Profunctor_Choice.right(dictChoice)(Data_Profunctor.rmap(dictChoice.Profunctor0())(to)(pab)));
              };
          };
      };
  };
  var prism$prime = function (to) {
      return function (fro) {
          return function (dictChoice) {
              return prism(to)(function (s) {
                  return Data_Maybe.maybe(new Data_Either.Left(s))(Data_Either.Right.create)(fro(s));
              })(dictChoice);
          };
      };
  };
  exports["prism'"] = prism$prime;
  exports["prism"] = prism;
})(PS["Data.Lens.Prism"] = PS["Data.Lens.Prism"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Function = PS["Data.Function"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Lens_Prism = PS["Data.Lens.Prism"];
  var Foreign_Object = PS["Foreign.Object"];
  var Prelude = PS["Prelude"];
  var _Object = function (dictChoice) {
      return Data_Lens_Prism["prism'"](Data_Argonaut_Core.fromObject)(Data_Argonaut_Core.toObject)(dictChoice);
  };
  var _Number = function (dictChoice) {
      return Data_Lens_Prism["prism'"](Data_Argonaut_Core.fromNumber)(Data_Argonaut_Core.toNumber)(dictChoice);
  };
  exports["_Number"] = _Number;
  exports["_Object"] = _Object;
})(PS["Data.Argonaut.Prisms"] = PS["Data.Argonaut.Prisms"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var runWriter = function ($1) {
      return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Writer_Trans.runWriterT($1));
  };
  exports["runWriter"] = runWriter;
})(PS["Control.Monad.Writer"] = PS["Control.Monad.Writer"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Writer = PS["Control.Monad.Writer"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_AbiParser = PS["Data.AbiParser"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_CodePoints = PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Data_String_Common = PS["Data.String.Common"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Network_Ethereum_Core_HexString = PS["Network.Ethereum.Core.HexString"];
  var Network_Ethereum_Core_Keccak256 = PS["Network.Ethereum.Core.Keccak256"];
  var Network_Ethereum_Web3_Types = PS["Network.Ethereum.Web3.Types"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var IType = (function () {
      function IType(value0) {
          this.value0 = value0;
      };
      IType.create = function (value0) {
          return new IType(value0);
      };
      return IType;
  })();
  var ITypeCtr = (function () {
      function ITypeCtr(value0) {
          this.value0 = value0;
      };
      ITypeCtr.create = function (value0) {
          return new ITypeCtr(value0);
      };
      return ITypeCtr;
  })();
  var ITypeOp = (function () {
      function ITypeOp(value0) {
          this.value0 = value0;
      };
      ITypeOp.create = function (value0) {
          return new ITypeOp(value0);
      };
      return ITypeOp;
  })();
  var IClass = (function () {
      function IClass(value0) {
          this.value0 = value0;
      };
      IClass.create = function (value0) {
          return new IClass(value0);
      };
      return IClass;
  })();
  var IVal = (function () {
      function IVal(value0) {
          this.value0 = value0;
      };
      IVal.create = function (value0) {
          return new IVal(value0);
      };
      return IVal;
  })();
  var IOp = (function () {
      function IOp(value0) {
          this.value0 = value0;
      };
      IOp.create = function (value0) {
          return new IOp(value0);
      };
      return IOp;
  })();
  var FunTypeDecl = (function () {
      function FunTypeDecl(value0) {
          this.value0 = value0;
      };
      FunTypeDecl.create = function (value0) {
          return new FunTypeDecl(value0);
      };
      return FunTypeDecl;
  })();
  var EventGenericInstance = (function () {
      function EventGenericInstance(value0) {
          this.value0 = value0;
      };
      EventGenericInstance.create = function (value0) {
          return new EventGenericInstance(value0);
      };
      return EventGenericInstance;
  })();
  var EventFilterInstance = (function () {
      function EventFilterInstance(value0) {
          this.value0 = value0;
      };
      EventFilterInstance.create = function (value0) {
          return new EventFilterInstance(value0);
      };
      return EventFilterInstance;
  })();
  var EventDecodeInstance = (function () {
      function EventDecodeInstance(value0) {
          this.value0 = value0;
      };
      EventDecodeInstance.create = function (value0) {
          return new EventDecodeInstance(value0);
      };
      return EventDecodeInstance;
  })();
  var EventDataDecl = (function () {
      function EventDataDecl(value0) {
          this.value0 = value0;
      };
      EventDataDecl.create = function (value0) {
          return new EventDataDecl(value0);
      };
      return EventDataDecl;
  })();
  var CurriedHelperFunction = (function () {
      function CurriedHelperFunction(value0) {
          this.value0 = value0;
      };
      CurriedHelperFunction.create = function (value0) {
          return new CurriedHelperFunction(value0);
      };
      return CurriedHelperFunction;
  })();
  var UnCurriedHelperFunction = (function () {
      function UnCurriedHelperFunction(value0) {
          this.value0 = value0;
      };
      UnCurriedHelperFunction.create = function (value0) {
          return new UnCurriedHelperFunction(value0);
      };
      return UnCurriedHelperFunction;
  })();
  var FunctionCodeBlock = (function () {
      function FunctionCodeBlock(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      FunctionCodeBlock.create = function (value0) {
          return function (value1) {
              return new FunctionCodeBlock(value0, value1);
          };
      };
      return FunctionCodeBlock;
  })();
  var EventCodeBlock = (function () {
      function EventCodeBlock(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      EventCodeBlock.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new EventCodeBlock(value0, value1, value2, value3);
                  };
              };
          };
      };
      return EventCodeBlock;
  })();
  var Code = function (genCode) {
      this.genCode = genCode;
  };
  var paren = function (s) {
      return "(" + (s + ")");
  };
  var toSignature = function (v) {
      var args = Data_Functor.map(Data_Functor.functorArray)(function (i) {
          return Data_AbiParser.format(Data_AbiParser.formatInput)(i);
      })(v.value0.inputs);
      return v.value0.name + paren(Data_String_Common.joinWith(",")(args));
  };
  var newLine2 = Data_String_Common.joinWith("\x0a\x0a");
  var newLine1 = Data_String_Common.joinWith("\x0a");
  var mkComment = function (cs) {
      var sep = Data_String_CodeUnits.fromCharArray(Data_Array.replicate(80)("-")) + "\x0a";
      return sep + (newLine1(Data_Functor.map(Data_Functor.functorArray)(function (s) {
          return "-- | " + s;
      })(cs)) + ("\x0a" + sep));
  };
  var lowerCase = function (s) {
      var rest = Data_String_CodePoints.drop(1)(s);
      var h = Data_String_Common.toLower(Data_String_CodePoints.take(1)(s));
      return h + rest;
  };
  var isValidType = function (s) {
      var startChar = Data_String_CodePoints.take(1)(s);
      return Data_String_Common.toUpper(startChar) !== Data_String_Common.toLower(startChar);
  };
  var import$prime = function (mName) {
      return function (mImports) {
          return Control_Monad_Writer_Class.tell(Control_Monad_Writer_Trans.monadTellWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity))([ new Data_Tuple.Tuple(mName, mImports) ]);
      };
  };
  var makeDigits = function (n) {
      var digits = Data_Functor.map(Data_Functor.functorArray)(Data_String_CodeUnits.singleton)(Data_String_CodeUnits.toCharArray(Data_Show.show(Data_Show.showInt)(n)));
      return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(Data_Traversable["for"](Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(Data_Traversable.traversableArray)(digits)(function (d) {
          var d$prime = "D" + d;
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Solidity")([ new IType(d$prime) ]))(function () {
              return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(d$prime);
          });
      }))(function (v) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Solidity")([ new IType("DOne") ]))(function () {
              return Data_Functor.map(Control_Monad_Writer_Trans.functorWriterT(Data_Identity.functorIdentity))(paren)((function () {
                  var v1 = Data_Array.unsnoc(v);
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return Partial_Unsafe.unsafeCrashWith("imposible case reached in makeDigits");
                  };
                  if (v1 instanceof Data_Maybe.Just) {
                      if (Data_Array["null"](v1.value0.init)) {
                          return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))("DOne " + v1.value0.last);
                      };
                      if (Data_Boolean.otherwise) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Solidity.Size")([ new ITypeOp(":&") ]))(function () {
                              return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(Data_String_Common.joinWith(" :& ")(v1.value0.init) + (" :& " + ("DOne " + v1.value0.last)));
                          });
                      };
                  };
                  throw new Error("Failed pattern match at Data.Generator line 85, column 13 - line 91, column 65: " + [ v1.constructor.name ]);
              })());
          });
      });
  };
  var toPSType = function (s) {
      var expandVector = function (v) {
          return function (a$prime) {
              return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(makeDigits(v.value0))(function (v1) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3")([ new IType("Vector") ]))(function () {
                      var v2 = Data_List.uncons(v.value1);
                      if (v2 instanceof Data_Maybe.Nothing) {
                          return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(toPSType(a$prime))(function (v3) {
                              return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(paren("Vector " + (v1 + (" " + v3))));
                          });
                      };
                      if (v2 instanceof Data_Maybe.Just) {
                          return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(expandVector(Data_List_Types.NonEmptyList(new Data_NonEmpty.NonEmpty(v2.value0.head, v2.value0.tail)))(a$prime))(function (v3) {
                              return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(paren("Vector " + (v1 + (" " + v3))));
                          });
                      };
                      throw new Error("Failed pattern match at Data.Generator line 129, column 7 - line 135, column 52: " + [ v2.constructor.name ]);
                  });
              });
          };
      };
      if (s instanceof Data_AbiParser.SolidityBool) {
          return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))("Boolean");
      };
      if (s instanceof Data_AbiParser.SolidityAddress) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Types")([ new IType("Address") ]))(function () {
              return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))("Address");
          });
      };
      if (s instanceof Data_AbiParser.SolidityUint) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Solidity")([ new IType("UIntN") ]))(function () {
              return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(makeDigits(s.value0))(function (v) {
                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(paren("UIntN " + v));
              });
          });
      };
      if (s instanceof Data_AbiParser.SolidityInt) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Solidity")([ new IType("IntN") ]))(function () {
              return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(makeDigits(s.value0))(function (v) {
                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(paren("IntN " + v));
              });
          });
      };
      if (s instanceof Data_AbiParser.SolidityString) {
          return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))("String");
      };
      if (s instanceof Data_AbiParser.SolidityBytesN) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Solidity")([ new IType("BytesN") ]))(function () {
              return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(makeDigits(s.value0))(function (v) {
                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(paren("BytesN " + v));
              });
          });
      };
      if (s instanceof Data_AbiParser.SolidityBytesD) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Solidity")([ new IType("ByteString") ]))(function () {
              return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))("ByteString");
          });
      };
      if (s instanceof Data_AbiParser.SolidityVector) {
          return expandVector(s.value0)(s.value1);
      };
      if (s instanceof Data_AbiParser.SolidityArray) {
          return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(toPSType(s.value0))(function (v) {
              return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(paren("Array " + v));
          });
      };
      throw new Error("Failed pattern match at Data.Generator line 97, column 14 - line 124, column 35: " + [ s.constructor.name ]);
  };
  var tagInput = function (v) {
      return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(toPSType(v.type))(function (v1) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Data.Functor.Tagged")([ new IType("Tagged") ]))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Data.Symbol")([ new IType("SProxy") ]))(function () {
                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))("(Tagged (SProxy " + ("\"" + (v.name + ("\") " + (v1 + ")")))));
              });
          });
      });
  };
  var toPayload = function (isWhereClause) {
      return function (typeName) {
          return function (args) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Data.Functor.Tagged")([ new IVal("tagged") ]))(function () {
                  var tupleType = "Tuple" + Data_Show.show(Data_Show.showInt)(Data_Array.length(args));
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Solidity")([ new ITypeCtr(tupleType) ]))(function () {
                      return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))("((tagged $ " + (tupleType + (" " + (Data_String_Common.joinWith(" ")(args) + (") :: " + (typeName + ")"))))));
                  });
              });
          };
      };
  };
  var toReturnType = function (constant) {
      return function (outputs$prime) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Types")([ new IType("Web3") ]))(function () {
              var $136 = !constant;
              if ($136) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Types")([ new IType("HexString") ]))(function () {
                      return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))("Web3 HexString");
                  });
              };
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Types")([ new IType("CallError") ]))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Data.Either")([ new IType("Either") ]))(function () {
                      return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(Data_Traversable["for"](Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(Data_Traversable.traversableArray)(outputs$prime)(toPSType))(function (v) {
                          return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))((function () {
                              var v1 = Data_Array.uncons(v);
                              if (v1 instanceof Data_Maybe.Nothing) {
                                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))("Unit");
                              };
                              if (v1 instanceof Data_Maybe.Just && v1.value0.tail.length === 0) {
                                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(v1.value0.head);
                              };
                              if (v1 instanceof Data_Maybe.Just) {
                                  var tupleType = "Tuple" + Data_Show.show(Data_Show.showInt)(Data_Array.length(v));
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Solidity")([ new IType(tupleType) ]))(function () {
                                      return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(paren(tupleType + (" " + Data_String_Common.joinWith(" ")(v))));
                                  });
                              };
                              throw new Error("Failed pattern match at Data.Generator line 369, column 14 - line 375, column 66: " + [ v1.constructor.name ]);
                          })())(function (v1) {
                              return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))("Web3 " + paren("Either CallError " + v1));
                          });
                      });
                  });
              });
          });
      };
  };
  var toTransportPrefix = function (isConstructor) {
      return function (isCall) {
          return function (outputCount) {
              return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))((function () {
                  if (isConstructor) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3")([ new IVal("deployContract") ]))(function () {
                          return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))("deployContract");
                      });
                  };
                  if (isCall) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3")([ new IVal("call") ]))(function () {
                          return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))("call");
                      });
                  };
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3")([ new IVal("sendTx") ]))(function () {
                      return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))("sendTx");
                  });
              })())(function (v) {
                  return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))((function () {
                      var $147 = isCall && outputCount === 1;
                      if ($147) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Solidity")([ new IVal("unTuple1") ]))(function () {
                              return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))((function () {
                                  if (isCall) {
                                      return "map unTuple1 <$> ";
                                  };
                                  return "unTuple1 <$> ";
                              })());
                          });
                      };
                      return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))("");
                  })())(function (v1) {
                      return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(v1 + v);
                  });
              });
          };
      };
  };
  var genCode = function (dict) {
      return dict.genCode;
  };
  var eventId = function (v) {
      var eventArgs = Data_Functor.map(Data_Functor.functorArray)(function (a) {
          return Data_AbiParser.format(Data_AbiParser.formatIndexedSolidityValue)(a);
      })(v.value0.inputs);
      return Network_Ethereum_Core_HexString.fromByteString(Network_Ethereum_Core_Keccak256.keccak256(Network_Ethereum_Core_Keccak256.keccak256String)(v.value0.name + paren(Data_String_Common.joinWith(",")(eventArgs))));
  };
  var codeHelperFunction = new Code(function (v) {
      return function (v1) {
          if (v instanceof CurriedHelperFunction) {
              var indentation = Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(Data_Array.replicate(v1.indentationLevel)(" "));
              var quantification = (function () {
                  var $154 = Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqString))(v.value0.quantifiedVars)([  ]);
                  if ($154) {
                      return "";
                  };
                  return "forall " + (Data_String_Common.joinWith(" ")(v.value0.quantifiedVars) + ". ");
              })();
              var defR = v.value0.transport + (" " + (Data_String_Common.joinWith(" ")(v.value0.unpackExpr.stockArgs) + (" " + v.value0.payload)));
              var defL = v.value0.unpackExpr.name + (" " + Data_String_Common.joinWith(" ")(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.value0.unpackExpr.stockArgs)(v.value0.unpackExpr.payloadArgs)));
              var constraints = Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(Data_Functor.map(Data_Functor.functorArray)(function (c) {
                  return c + " => ";
              })(v.value0.constraints));
              var decl = v.value0.unpackExpr.name + (" :: " + (quantification + (constraints + Data_String_Common.joinWith(" -> ")(v.value0.signature))));
              return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(Data_Functor.map(Data_Functor.functorArray)(function (s) {
                  return indentation + s;
              })([ decl + "\x0a", defL + (" = " + defR) ])));
          };
          if (v instanceof UnCurriedHelperFunction) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Contract.Internal")([ new IVal("uncurryFields") ]))(function () {
                  var quantification = (function () {
                      var $156 = Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqString))(v.value0.quantifiedVars)([  ]);
                      if ($156) {
                          return "";
                      };
                      return "forall " + (Data_String_Common.joinWith(" ")(v.value0.quantifiedVars) + ". ");
                  })();
                  var defR = "uncurryFields " + (" r $ " + (v.value0.unpackExpr.name + ("'" + (" " + Data_String_Common.joinWith(" ")(v.value0.unpackExpr.stockArgsR)))));
                  var defL = v.value0.unpackExpr.name + (" " + Data_String_Common.joinWith(" ")(v.value0.unpackExpr.stockArgs));
                  var constraints = Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(Data_Functor.map(Data_Functor.functorArray)(function (c) {
                      return c + " => ";
                  })(v.value0.constraints));
                  var decl = v.value0.unpackExpr.name + (" :: " + (quantification + (constraints + Data_String_Common.joinWith(" -> ")(v.value0.signature))));
                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)([ decl + "\x0a", defL + (" = " + (defR + "\x0a")), "   where\x0a", v.value0.whereClause ]));
              });
          };
          throw new Error("Failed pattern match at Data.Generator line 378, column 1 - line 378, column 51: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var codeEventGenericInstance = new Code(function (v) {
      return function (v1) {
          var headers = Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.uncurry(function (n) {
              return function (t) {
                  return "instance " + (n + (" :: " + (t + " where")));
              };
          }))(Data_Array.zip(v.value0.instanceNames)(v.value0.instanceTypes));
          var eventGenerics = Data_Functor.map(Data_Functor.functorArray)(function (d) {
              return "\x09" + d;
          })(v.value0.genericDefs);
          var instances = Data_Array.zipWith(function (h) {
              return function (g) {
                  return h + ("\x0a" + g);
              };
          })(headers)(eventGenerics);
          return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(newLine2(Data_Array.cons(v.value0.genericDeriving)(instances)));
      };
  });
  var codeEventFilterInstance = new Code(function (v) {
      return function (v1) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3")([ new IClass("EventFilter") ]))(function () {
              var header = "instance " + (v.value0.instanceName + (" :: EventFilter " + (v.value0.instanceType + " where")));
              var eventFilter = "\x09" + v.value0.filterDef;
              return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(newLine1([ header, eventFilter ]));
          });
      };
  });
  var codeEventDecodeInstance = new Code(function (v) {
      return function (v1) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Solidity")([ new IClass("IndexedEvent") ]))(function () {
              var indexedEventDecl = "instance indexedEvent" + (v.value0.combinedType + (" :: IndexedEvent " + (v.value0.indexedTuple + (" " + (v.value0.nonIndexedTuple + (" " + (v.value0.combinedType + " where")))))));
              var indexedEventBody = "isAnonymous _ = " + Data_Show.show(Data_Show.showBoolean)(v.value0.anonymous);
              return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(newLine1([ indexedEventDecl, "  " + indexedEventBody ]));
          });
      };
  });
  var codeEventDataDecl = new Code(function (v) {
      return function (v1) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Data.Newtype")([ new IClass("Newtype") ]))(function () {
              var recordField = function (v2) {
                  return v2.value0 + (" :: " + v2.value1);
              };
              var newtypeInstanceDecl = "derive instance newtype" + (v.value0.constructor + (" :: Newtype " + (v.value0.constructor + " _")));
              var newtypeDef = "newtype " + (v.value0.constructor + (" = " + (v.value0.constructor + (" {" + (Data_String_Common.joinWith(",")(Data_Functor.map(Data_Functor.functorArray)(recordField)(v.value0.recordType)) + "}")))));
              return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(newLine2([ newtypeDef, newtypeInstanceDecl ]));
          });
      };
  });
  var codeDataDecl = new Code(function (v) {
      return function (v1) {
          var nArgs = Data_Array.length(v.value0.factorTypes);
          var tupleType = "Tuple" + Data_Show.show(Data_Show.showInt)(nArgs);
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Data.Functor.Tagged")([ new IType("Tagged") ]))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Data.Symbol")([ new IType("SProxy") ]))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Solidity")([ new ITypeCtr(tupleType) ]))(function () {
                      return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)([ "type ", v.value0.typeName, " = ", "Tagged (SProxy \"" + (v.value0.signature + ("\") (" + (tupleType + (" " + (Data_String_Common.joinWith(" ")(v.value0.factorTypes) + ")"))))) ]));
                  });
              });
          });
      };
  });
  var codeFunctionCodeBlock = new Code(function (v) {
      return function (opts) {
          if (v instanceof FunctionCodeBlock) {
              var header = mkComment([ v.value0.value0.typeName ]);
              return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(genCode(codeDataDecl)(v.value0)(opts))(function (v1) {
                  return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(genCode(codeHelperFunction)(v.value1)(opts))(function (v2) {
                      return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(newLine2([ header, v1, v2 ]));
                  });
              });
          };
          if (v instanceof EventCodeBlock) {
              var header = mkComment([ v.value0.value0.constructor ]);
              return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(genCode(codeEventDataDecl)(v.value0)(opts))(function (v1) {
                  return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(genCode(codeEventFilterInstance)(v.value1)(opts))(function (v2) {
                      return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(genCode(codeEventDecodeInstance)(v.value2)(opts))(function (v3) {
                          return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(genCode(codeEventGenericInstance)(v.value3)(opts))(function (v4) {
                              return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(newLine2([ header, v1, v2, v3, v4 ]));
                          });
                      });
                  });
              });
          };
          throw new Error("Failed pattern match at Data.Generator line 595, column 1 - line 595, column 49: " + [ v.constructor.name, opts.constructor.name ]);
      };
  });
  var capitalize = function (s) {
      var rest = Data_String_CodePoints.drop(1)(s);
      var h = Data_String_Common.toUpper(Data_String_CodePoints.take(1)(s));
      return h + rest;
  };
  var eventToDataDecl = function (v) {
      var nis = Data_Array.filter(function (v1) {
          return !v1.value0.indexed;
      })(v.value0.inputs);
      var is = Data_Array.filter(function (v1) {
          return v1.value0.indexed;
      })(v.value0.inputs);
      return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(Data_Traversable["for"](Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(Data_Traversable.traversableArray)(is)(function (v1) {
          return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(toPSType(v1.value0.type))(function (v2) {
              return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(new Data_Tuple.Tuple(v1.value0.name, v2));
          });
      }))(function (v1) {
          return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(Data_Traversable["for"](Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(Data_Traversable.traversableArray)(nis)(function (v2) {
              return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(toPSType(v2.value0.type))(function (v3) {
                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(new Data_Tuple.Tuple(v2.value0.name, v3));
              });
          }))(function (v2) {
              return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(Data_Traversable["for"](Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(Data_Traversable.traversableArray)(v.value0.inputs)(function (v3) {
                  return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(toPSType(v3.value0.type))(function (v4) {
                      return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(new Data_Tuple.Tuple(v3.value0.name, v4));
                  });
              }))(function (v3) {
                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(new EventDataDecl({
                      constructor: (function () {
                          var $209 = isValidType(capitalize(v.value0.name));
                          if ($209) {
                              return capitalize(v.value0.name);
                          };
                          return "EvT" + v.value0.name;
                      })(),
                      indexedTypes: v1,
                      nonIndexedTypes: v2,
                      recordType: v3
                  }));
              });
          });
      });
  };
  var eventToDecodeEventInstance = function (v) {
      var taggedFactor = function (v1) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Data.Functor.Tagged")([ new IType("Tagged") ]))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Data.Symbol")([ new IType("SProxy") ]))(function () {
                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))("(Tagged (SProxy \"" + (v1.value0 + ("\") " + (v1.value1 + ")"))));
              });
          });
      };
      return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(eventToDataDecl(v))(function (v1) {
          return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(Data_Traversable["for"](Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(Data_Traversable.traversableArray)(v1.value0.indexedTypes)(taggedFactor))(function (v2) {
              return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(Data_Traversable["for"](Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(Data_Traversable.traversableArray)(v1.value0.nonIndexedTypes)(taggedFactor))(function (v3) {
                  var nonIndexedTupleType = "Tuple" + Data_Show.show(Data_Show.showInt)(Data_Array.length(v1.value0.nonIndexedTypes));
                  var nonIndexedTuple = paren(nonIndexedTupleType + (" " + Data_String_Common.joinWith(" ")(v3)));
                  var indexedTupleType = "Tuple" + Data_Show.show(Data_Show.showInt)(Data_Array.length(v1.value0.indexedTypes));
                  var indexedTuple = paren(indexedTupleType + (" " + Data_String_Common.joinWith(" ")(v2)));
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Solidity")([ new IType(indexedTupleType), new IType(nonIndexedTupleType) ]))(function () {
                      return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(new EventDecodeInstance({
                          indexedTuple: indexedTuple,
                          nonIndexedTuple: nonIndexedTuple,
                          combinedType: v1.value0.constructor,
                          anonymous: v.value0.anonymous
                      }));
                  });
              });
          });
      });
  };
  var eventToEventFilterInstance = function (v) {
      var mkFilterExpr = function (addr) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Types")([ new IVal("mkHexString") ]))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Data.Maybe")([ new ITypeCtr("Maybe"), new IVal("fromJust") ]))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Data.Lens")([ new IOp(".~") ]))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3")([ new IVal("_address"), new IVal("_topics") ]))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Types")([ new IVal("defaultFilter") ]))(function () {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Partial.Unsafe")([ new IVal("unsafePartial") ]))(function () {
                                  var nIndexedArgs = Data_Array.length(Data_Array.filter(function (v1) {
                                      return v1.value0.indexed;
                                  })(v.value0.inputs));
                                  var indexedVals = (function () {
                                      var $223 = nIndexedArgs === 0;
                                      if ($223) {
                                          return "";
                                      };
                                      return "," + Data_String_Common.joinWith(",")(Data_Array.replicate(nIndexedArgs)("Nothing"));
                                  })();
                                  var eventIdStr = "Just ( unsafePartial $ fromJust $ mkHexString " + ("\"" + (Network_Ethereum_Core_HexString.unHex(eventId(v)) + ("\"" + ")")));
                                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)([ "defaultFilter", "\x0a\x09\x09", Data_String_Common.joinWith("\x0a\x09\x09")([ "# _address .~ Just " + addr, "# _topics .~ Just [" + (eventIdStr + (indexedVals + "]")) ]) ]));
                              });
                          });
                      });
                  });
              });
          });
      };
      return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(eventToDataDecl(v))(function (v1) {
          return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(mkFilterExpr("addr"))(function (v2) {
              return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(new EventFilterInstance({
                  instanceName: "eventFilter" + capitalize(v1.value0.constructor),
                  instanceType: v1.value0.constructor,
                  filterDef: "eventFilter _ addr = " + v2
              }));
          });
      });
  };
  var eventToEventGenericInstance = function (v) {
      return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(eventToDataDecl(v))(function (v1) {
          var capConst = capitalize(v1.value0.constructor);
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Data.Generic.Rep.Eq")([ new IVal("genericEq") ]))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Data.Generic.Rep.Show")([ new IVal("genericShow") ]))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Data.Generic.Rep")([ new IClass("Generic") ]))(function () {
                      return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(new EventGenericInstance({
                          instanceNames: Data_Functor.map(Data_Functor.functorArray)(function (n) {
                              return "eventGeneric" + (capConst + n);
                          })([ "Show", "eq" ]),
                          instanceTypes: Data_Functor.map(Data_Functor.functorArray)(function (t) {
                              return t + (" " + capConst);
                          })([ "Show", "Eq" ]),
                          genericDefs: [ "show = genericShow", "eq = genericEq" ],
                          genericDeriving: "derive instance generic" + (capConst + (" :: Generic " + (capConst + " _")))
                      }));
                  });
              });
          });
      });
  };
  var eventToEventCodeBlock = function (v) {
      return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(eventToDataDecl(v))(function (v1) {
          return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(eventToEventFilterInstance(v))(function (v2) {
              return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(eventToDecodeEventInstance(v))(function (v3) {
                  return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(eventToEventGenericInstance(v))(function (v4) {
                      return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(new EventCodeBlock(v1, v2, v3, v4));
                  });
              });
          });
      });
  };
  var funToTypeDecl = function (v) {
      return function (opts) {
          return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))((function () {
              if (v.value0.isUnCurried) {
                  return Data_Traversable["for"](Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(Data_Traversable.traversableArray)(v.value0.inputs)(tagInput);
              };
              return Data_Traversable["for"](Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(Data_Traversable.traversableArray)(v.value0.inputs)(function (v1) {
                  return toPSType(v1.type);
              });
          })())(function (v1) {
              return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(new FunTypeDecl({
                  typeName: (function () {
                      var $243 = isValidType(v.value0.name);
                      if ($243) {
                          return capitalize(v.value0.name + "Fn");
                      };
                      return "FnT" + (v.value0.name + "Fn");
                  })(),
                  factorTypes: v1,
                  signature: toSignature(v)
              }));
          });
      };
  };
  var funToHelperFunction = function (isWhereClause) {
      return function (v) {
          return function (opts) {
              return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(funToTypeDecl(v)(opts))(function (v1) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Types")([ new IType("TransactionOptions") ]))(function () {
                      return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))((function () {
                          if (v.value0.isConstructor) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Types")([ new IType("NoPay") ]))(function () {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Types")([ new IType("HexString") ]))(function () {
                                      return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))([ "TransactionOptions NoPay", "HexString" ]);
                                  });
                              });
                          };
                          if (v.value0.constant) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Types")([ new IType("NoPay") ]))(function () {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Types")([ new IType("ChainCursor") ]))(function () {
                                      return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))([ "TransactionOptions NoPay", "ChainCursor" ]);
                                  });
                              });
                          };
                          if (v.value0.payable) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Types.TokenUnit")([ new IType("MinorUnit") ]))(function () {
                                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))([ "TransactionOptions MinorUnit" ]);
                              });
                          };
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Types")([ new IType("NoPay") ]))(function () {
                              return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))([ "TransactionOptions NoPay" ]);
                          });
                      })())(function (v2) {
                          var $$var = (function () {
                              if (isWhereClause) {
                                  return "y";
                              };
                              return "x";
                          })();
                          var stockVars = (function () {
                              if (v.value0.isConstructor) {
                                  return [ $$var + "0", (function () {
                                      if (isWhereClause) {
                                          return "bc'";
                                      };
                                      return "bc";
                                  })() ];
                              };
                              if (v.value0.constant) {
                                  return [ $$var + "0", (function () {
                                      if (isWhereClause) {
                                          return "cm'";
                                      };
                                      return "cm";
                                  })() ];
                              };
                              return [ $$var + "0" ];
                          })();
                          var quantifiedVars = [  ];
                          var offset = Data_Array.length(stockVars);
                          var inputs$prime = Data_Functor.map(Data_Functor.functorArray)(function (v3) {
                              return v3.type;
                          })(v.value0.inputs);
                          var constraints = [  ];
                          var conVars = Data_Array.mapWithIndex(function (i) {
                              return function (v3) {
                                  return $$var + Data_Show.show(Data_Show.showInt)(offset + i | 0);
                              };
                          })(inputs$prime);
                          return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(toTransportPrefix(v.value0.isConstructor)(v.value0.constant)(Data_Array.length(v.value0.outputs)))(function (v3) {
                              return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(toPayload(isWhereClause)(v1.value0.typeName)(conVars))(function (v4) {
                                  return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(toReturnType(v.value0.constant)(v.value0.outputs))(function (v5) {
                                      return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))((function () {
                                          if (v.value0.isUnCurried) {
                                              return Data_Traversable["for"](Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(Data_Traversable.traversableArray)(v.value0.inputs)(tagInput);
                                          };
                                          return Data_Traversable["for"](Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(Data_Traversable.traversableArray)(v.value0.inputs)(function (v6) {
                                              return toPSType(v6.type);
                                          });
                                      })())(function (v6) {
                                          return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))({
                                              signature: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v2)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v6)([ v5 ])),
                                              unpackExpr: {
                                                  name: lowerCase(opts.exprPrefix + v.value0.name),
                                                  stockArgs: stockVars,
                                                  payloadArgs: conVars
                                              },
                                              payload: v4,
                                              transport: v3,
                                              constraints: constraints,
                                              quantifiedVars: quantifiedVars
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  });
              });
          };
      };
  };
  var funToHelperFunction$prime = function (v) {
      return function (opts) {
          var whereHelper = function (d) {
              return function (pre) {
                  return function (is) {
                      return function (ret) {
                          return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(funToHelperFunction(true)(v)(opts))(function (v1) {
                              return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))((function () {
                                  if (v.value0.isUnCurried) {
                                      return Data_Traversable["for"](Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(Data_Traversable.traversableArray)(v.value0.inputs)(tagInput);
                                  };
                                  return Data_Traversable["for"](Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(Data_Traversable.traversableArray)(v.value0.inputs)(function (v2) {
                                      return toPSType(v2.type);
                                  });
                              })())(function (v2) {
                                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(new CurriedHelperFunction({
                                      signature: Data_Semigroup.append(Data_Semigroup.semigroupArray)(pre)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v2)([ ret ])),
                                      unpackExpr: {
                                          name: v1.unpackExpr.name + "'",
                                          stockArgs: v1.unpackExpr.stockArgs,
                                          payloadArgs: v1.unpackExpr.payloadArgs
                                      },
                                      payload: v1.payload,
                                      transport: v1.transport,
                                      constraints: [  ],
                                      quantifiedVars: [  ]
                                  }));
                              });
                          });
                      };
                  };
              };
          };
          var recordInput = function (fis) {
              return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(Data_Traversable["for"](Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(Data_Traversable.traversableArray)(fis)(function (v1) {
                  return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(toPSType(v1.type))(function (v2) {
                      return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(v1.name + (" :: " + v2));
                  });
              }))(function (v1) {
                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))("{ " + (Data_String_Common.joinWith(", ")(v1) + " }"));
              });
          };
          return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(funToTypeDecl(v)(opts))(function (v1) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Types")([ new IType("TransactionOptions") ]))(function () {
                  return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))((function () {
                      if (v.value0.isConstructor) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Types")([ new IType("HexString") ]))(function () {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Types")([ new IType("NoPay") ]))(function () {
                                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))([ "TransactionOptions NoPay", "HexString" ]);
                              });
                          });
                      };
                      if (v.value0.constant) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Types")([ new IType("ChainCursor") ]))(function () {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Types")([ new IType("NoPay") ]))(function () {
                                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))([ "TransactionOptions NoPay", "ChainCursor" ]);
                              });
                          });
                      };
                      if (v.value0.payable) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Types.TokenUnit")([ new IType("MinorUnit") ]))(function () {
                              return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))([ "TransactionOptions MinorUnit" ]);
                          });
                      };
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(import$prime("Network.Ethereum.Web3.Types")([ new IType("NoPay") ]))(function () {
                          return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))([ "TransactionOptions NoPay" ]);
                      });
                  })())(function (v2) {
                      var stockVars = (function () {
                          if (v.value0.isConstructor) {
                              return [ "x0", "bc" ];
                          };
                          if (v.value0.constant) {
                              return [ "x0", "cm" ];
                          };
                          return [ "x0" ];
                      })();
                      var quantifiedVars = [  ];
                      var constraints = [  ];
                      return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(toReturnType(v.value0.constant)(v.value0.outputs))(function (v3) {
                          return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(recordInput(v.value0.inputs))(function (v4) {
                              return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(whereHelper(v1.value0)(v2)(v.value0.inputs)(v3))(function (h) {
                                  return genCode(codeHelperFunction)(h)({
                                      exprPrefix: opts.exprPrefix,
                                      indentationLevel: opts.indentationLevel + 4 | 0
                                  });
                              }))(function (v5) {
                                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(new UnCurriedHelperFunction({
                                      signature: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v2)([ v4, v3 ]),
                                      unpackExpr: {
                                          name: lowerCase(opts.exprPrefix + v.value0.name),
                                          stockArgs: Data_Semigroup.append(Data_Semigroup.semigroupArray)(stockVars)([ "r" ]),
                                          stockArgsR: stockVars
                                      },
                                      constraints: constraints,
                                      quantifiedVars: quantifiedVars,
                                      whereClause: v5
                                  }));
                              });
                          });
                      });
                  });
              });
          });
      };
  };
  var funToFunctionCodeBlock = function (v) {
      return function (opts) {
          return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(funToTypeDecl(v)(opts))(function (v1) {
              return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))((function () {
                  if (v.value0.isUnCurried) {
                      return funToHelperFunction$prime(v)(opts);
                  };
                  return Data_Functor.mapFlipped(Control_Monad_Writer_Trans.functorWriterT(Data_Identity.functorIdentity))(funToHelperFunction(false)(v)(opts))(CurriedHelperFunction.create);
              })())(function (v2) {
                  return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(new FunctionCodeBlock(v1, v2));
              });
          });
      };
  };
  var codeAbi = new Code(function (v) {
      return function (opts) {
          return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(Data_Traversable["for"](Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(Data_Traversable.traversableArray)(v)(function ($306) {
              return (function (v1) {
                  if (v1 instanceof Data_AbiParser.AbiFunction) {
                      return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(funToFunctionCodeBlock(v1.value0)(opts))(function (v2) {
                          return genCode(codeFunctionCodeBlock)(v2)(opts);
                      });
                  };
                  if (v1 instanceof Data_AbiParser.AbiEvent) {
                      return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(eventToEventCodeBlock(v1.value0))(function (v2) {
                          return genCode(codeFunctionCodeBlock)(v2)(opts);
                      });
                  };
                  if (v1 instanceof Data_AbiParser.AbiConstructor) {
                      var f = new Data_AbiParser.SolidityFunction({
                          name: "constructor",
                          inputs: v1.value0.value0.inputs,
                          outputs: [  ],
                          constant: false,
                          payable: false,
                          isConstructor: true,
                          isUnCurried: v1.value0.value0.isUnCurried
                      });
                      return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(funToFunctionCodeBlock(f)(opts))(function (v2) {
                          return genCode(codeFunctionCodeBlock)(v2)(opts);
                      });
                  };
                  if (v1 instanceof Data_AbiParser.AbiFallback) {
                      return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))("");
                  };
                  throw new Error("Failed pattern match at Data.Generator line 623, column 40 - line 646, column 5: " + [ v1.constructor.name ]);
              })(Data_Newtype.un(Data_Identity.newtypeIdentity)(Data_Identity.Identity)($306));
          }))(function (v1) {
              return Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))(newLine2(v1));
          });
      };
  });
  exports["genCode"] = genCode;
  exports["IType"] = IType;
  exports["ITypeCtr"] = ITypeCtr;
  exports["ITypeOp"] = ITypeOp;
  exports["IClass"] = IClass;
  exports["IVal"] = IVal;
  exports["IOp"] = IOp;
  exports["Code"] = Code;
  exports["paren"] = paren;
  exports["toSignature"] = toSignature;
  exports["capitalize"] = capitalize;
  exports["isValidType"] = isValidType;
  exports["lowerCase"] = lowerCase;
  exports["makeDigits"] = makeDigits;
  exports["toPSType"] = toPSType;
  exports["FunTypeDecl"] = FunTypeDecl;
  exports["funToTypeDecl"] = funToTypeDecl;
  exports["CurriedHelperFunction"] = CurriedHelperFunction;
  exports["UnCurriedHelperFunction"] = UnCurriedHelperFunction;
  exports["funToHelperFunction"] = funToHelperFunction;
  exports["tagInput"] = tagInput;
  exports["toTransportPrefix"] = toTransportPrefix;
  exports["toPayload"] = toPayload;
  exports["toReturnType"] = toReturnType;
  exports["EventDataDecl"] = EventDataDecl;
  exports["eventToDataDecl"] = eventToDataDecl;
  exports["EventGenericInstance"] = EventGenericInstance;
  exports["eventToEventGenericInstance"] = eventToEventGenericInstance;
  exports["EventDecodeInstance"] = EventDecodeInstance;
  exports["eventToDecodeEventInstance"] = eventToDecodeEventInstance;
  exports["EventFilterInstance"] = EventFilterInstance;
  exports["eventId"] = eventId;
  exports["eventToEventFilterInstance"] = eventToEventFilterInstance;
  exports["eventToEventCodeBlock"] = eventToEventCodeBlock;
  exports["mkComment"] = mkComment;
  exports["FunctionCodeBlock"] = FunctionCodeBlock;
  exports["EventCodeBlock"] = EventCodeBlock;
  exports["funToFunctionCodeBlock"] = funToFunctionCodeBlock;
  exports["newLine1"] = newLine1;
  exports["newLine2"] = newLine2;
  exports["codeDataDecl"] = codeDataDecl;
  exports["codeHelperFunction"] = codeHelperFunction;
  exports["codeEventDataDecl"] = codeEventDataDecl;
  exports["codeEventGenericInstance"] = codeEventGenericInstance;
  exports["codeEventDecodeInstance"] = codeEventDecodeInstance;
  exports["codeEventFilterInstance"] = codeEventFilterInstance;
  exports["codeFunctionCodeBlock"] = codeFunctionCodeBlock;
  exports["codeAbi"] = codeAbi;
})(PS["Data.Generator"] = PS["Data.Generator"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Contravariant = PS["Data.Functor.Contravariant"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Prelude = PS["Prelude"];                 
  var Const = function (x) {
      return x;
  };
  var newtypeConst = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Const);
  var functorConst = new Data_Functor.Functor(function (f) {
      return function (m) {
          return m;
      };
  });
  var applyConst = function (dictSemigroup) {
      return new Control_Apply.Apply(function () {
          return functorConst;
      }, function (v) {
          return function (v1) {
              return Data_Semigroup.append(dictSemigroup)(v)(v1);
          };
      });
  };
  var applicativeConst = function (dictMonoid) {
      return new Control_Applicative.Applicative(function () {
          return applyConst(dictMonoid.Semigroup0());
      }, function (v) {
          return Data_Monoid.mempty(dictMonoid);
      });
  };
  exports["Const"] = Const;
  exports["newtypeConst"] = newtypeConst;
  exports["functorConst"] = functorConst;
  exports["applyConst"] = applyConst;
  exports["applicativeConst"] = applicativeConst;
})(PS["Data.Const"] = PS["Data.Const"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Data_Profunctor_Star = PS["Data.Profunctor.Star"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Prelude = PS["Prelude"];                 
  var Wander = function (Choice1, Strong0, wander) {
      this.Choice1 = Choice1;
      this.Strong0 = Strong0;
      this.wander = wander;
  }; 
  var wander = function (dict) {
      return dict.wander;
  };
  exports["wander"] = wander;
  exports["Wander"] = Wander;
})(PS["Data.Lens.Internal.Wander"] = PS["Data.Lens.Internal.Wander"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Const = PS["Data.Const"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Lens_Internal_Wander = PS["Data.Lens.Internal.Wander"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Data_Profunctor_Cochoice = PS["Data.Profunctor.Cochoice"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];                 
  var Forget = function (x) {
      return x;
  };
  var profunctorForget = new Data_Profunctor.Profunctor(function (f) {
      return function (v) {
          return function (v1) {
              return function ($27) {
                  return v1(f($27));
              };
          };
      };
  });
  var strongForget = new Data_Profunctor_Strong.Strong(function () {
      return profunctorForget;
  }, function (v) {
      return function ($28) {
          return v(Data_Tuple.fst($28));
      };
  }, function (v) {
      return function ($29) {
          return v(Data_Tuple.snd($29));
      };
  });
  var newtypeForget = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Forget);
  var choiceForget = function (dictMonoid) {
      return new Data_Profunctor_Choice.Choice(function () {
          return profunctorForget;
      }, function (v) {
          return Data_Either.either(v)(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)));
      }, function (v) {
          return Data_Either.either(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)))(v);
      });
  };
  var wanderForget = function (dictMonoid) {
      return new Data_Lens_Internal_Wander.Wander(function () {
          return choiceForget(dictMonoid);
      }, function () {
          return strongForget;
      }, function (f) {
          return function (v) {
              return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Const.newtypeConst)(Data_Const.newtypeConst)(Data_Const.Const)(f(Data_Const.applicativeConst(dictMonoid)))(v);
          };
      });
  };
  exports["Forget"] = Forget;
  exports["newtypeForget"] = newtypeForget;
  exports["profunctorForget"] = profunctorForget;
  exports["choiceForget"] = choiceForget;
  exports["strongForget"] = strongForget;
  exports["wanderForget"] = wanderForget;
})(PS["Data.Lens.Internal.Forget"] = PS["Data.Lens.Internal.Forget"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Lens_Internal_Forget = PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Internal_Indexed = PS["Data.Lens.Internal.Indexed"];
  var Data_Lens_Types = PS["Data.Lens.Types"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var foldMapOf = Data_Newtype.under(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.Forget);
  var preview = function (p) {
      return function ($64) {
          return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(foldMapOf(p)(function ($65) {
              return Data_Maybe_First.First(Data_Maybe.Just.create($65));
          })($64));
      };
  };
  var previewOn = function (s) {
      return function (p) {
          return preview(p)(s);
      };
  };
  exports["previewOn"] = previewOn;
  exports["preview"] = preview;
  exports["foldMapOf"] = foldMapOf;
})(PS["Data.Lens.Fold"] = PS["Data.Lens.Fold"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Lens_Internal_Wander = PS["Data.Lens.Internal.Wander"];
  var Data_Lens_Types = PS["Data.Lens.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Map_Internal = PS["Data.Map.Internal"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Set = PS["Data.Set"];
  var Data_Traversable = PS["Data.Traversable"];
  var Foreign_Object = PS["Foreign.Object"];
  var Prelude = PS["Prelude"];                 
  var Index = function (ix) {
      this.ix = ix;
  };
  var ix = function (dict) {
      return dict.ix;
  }; 
  var indexForeignObject = new Index(function (k) {
      return function (dictWander) {
          return Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
              return function (coalg) {
                  return function (m) {
                      return Data_Maybe.maybe(Control_Applicative.pure(dictApplicative)(m))(function ($22) {
                          return Data_Functor.map((dictApplicative.Apply0()).Functor0())(function (v) {
                              return Foreign_Object.insert(k)(v)(m);
                          })(coalg($22));
                      })(Foreign_Object.lookup(k)(m));
                  };
              };
          });
      };
  });
  exports["Index"] = Index;
  exports["ix"] = ix;
  exports["indexForeignObject"] = indexForeignObject;
})(PS["Data.Lens.Index"] = PS["Data.Lens.Index"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Ansi_Codes = PS["Ansi.Codes"];
  var Ansi_Output = PS["Ansi.Output"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Error_Util = PS["Control.Error.Util"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_State = PS["Control.Monad.State"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Control_Monad_Writer = PS["Control.Monad.Writer"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_AbiParser = PS["Data.AbiParser"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Parser = PS["Data.Argonaut.Parser"];
  var Data_Argonaut_Prisms = PS["Data.Argonaut.Prisms"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generator = PS["Data.Generator"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Lens_Fold = PS["Data.Lens.Fold"];
  var Data_Lens_Index = PS["Data.Lens.Index"];
  var Data_Lens_Internal_Forget = PS["Data.Lens.Internal.Forget"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Map_Internal = PS["Data.Map.Internal"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Data_String_Common = PS["Data.String.Common"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Console = PS["Effect.Console"];
  var Effect_Exception = PS["Effect.Exception"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_FS_Aff = PS["Node.FS.Aff"];
  var Node_FS_Stats = PS["Node.FS.Stats"];
  var Node_FS_Sync_Mkdirp = PS["Node.FS.Sync.Mkdirp"];
  var Node_Path = PS["Node.Path"];
  var Prelude = PS["Prelude"];                 
  var CtrIsInImports = (function () {
      function CtrIsInImports() {

      };
      CtrIsInImports.value = new CtrIsInImports();
      return CtrIsInImports;
  })();
  var CtrIsNotInImports = (function () {
      function CtrIsNotInImports() {

      };
      CtrIsNotInImports.value = new CtrIsNotInImports();
      return CtrIsNotInImports;
  })();
  var validateRootedDir = function (dictMonadAff) {
      return function (prefix) {
          return function (dir) {
              return Effect_Aff_Class.liftAff(dictMonadAff)((function () {
                  var fullPath = prefix + ("/" + dir);
                  return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Error_Class["try"](Effect_Aff.monadErrorAff)(Node_FS_Aff.stat(fullPath)))(function (v) {
                      return Control_Applicative.pure(Effect_Aff.applicativeAff)((function () {
                          if (v instanceof Data_Either.Left) {
                              return Data_Maybe.Nothing.value;
                          };
                          if (v instanceof Data_Either.Right) {
                              var isValid = Node_FS_Stats.isDirectory(v.value0) && Data_Maybe.isNothing(Data_String_CodeUnits.stripPrefix(".")(dir));
                              if (isValid) {
                                  return new Data_Maybe.Just(fullPath);
                              };
                              return Data_Maybe.Nothing.value;
                          };
                          throw new Error("Failed pattern match at Data.CodeGen line 221, column 8 - line 227, column 21: " + [ v.constructor.name ]);
                      })());
                  });
              })());
          };
      };
  };
  var validateFile = function (dictMonadAff) {
      return function (dir) {
          return function (f) {
              return Effect_Aff_Class.liftAff(dictMonadAff)((function () {
                  var fullPath = dir + ("/" + f);
                  return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Error_Class["try"](Effect_Aff.monadErrorAff)(Node_FS_Aff.stat(fullPath)))(function (v) {
                      return Control_Applicative.pure(Effect_Aff.applicativeAff)((function () {
                          if (v instanceof Data_Either.Left) {
                              return Data_Maybe.Nothing.value;
                          };
                          if (v instanceof Data_Either.Right) {
                              var isValid = Node_FS_Stats.isFile(v.value0) && Node_Path.extname(f) === ".json";
                              if (isValid) {
                                  return new Data_Maybe.Just(fullPath);
                              };
                              return Data_Maybe.Nothing.value;
                          };
                          throw new Error("Failed pattern match at Data.CodeGen line 251, column 8 - line 257, column 25: " + [ v.constructor.name ]);
                      })());
                  });
              })());
          };
      };
  }; 
  var runImports = (function () {
      var runModuleImports = (function () {
          var resolveCtrImports = function (v) {
              if (v.value1 instanceof CtrIsInImports) {
                  return [  ];
              };
              if (v.value1 instanceof CtrIsNotInImports) {
                  return [ v.value0 ];
              };
              throw new Error("Failed pattern match at Data.CodeGen line 74, column 59 - line 76, column 40: " + [ v.value1.constructor.name ]);
          };
          var runAcc = function (acc) {
              return Data_Array.sort(Data_Ord.ordString)(Data_Array.nub(Data_Ord.ordString)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(acc.imports)(Control_Bind.bind(Control_Bind.bindArray)(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(acc.types))(resolveCtrImports))));
          };
          var f = function (acc) {
              return function (v) {
                  if (v instanceof Data_Generator.IType) {
                      var $66 = Data_Map_Internal.member(Data_Ord.ordString)(v.value0)(acc.types);
                      if ($66) {
                          return acc;
                      };
                      return {
                          types: Data_Map_Internal.insert(Data_Ord.ordString)(v.value0)(CtrIsNotInImports.value)(acc.types),
                          imports: acc.imports
                      };
                  };
                  if (v instanceof Data_Generator.ITypeCtr) {
                      var v1 = Data_Map_Internal.lookup(Data_Ord.ordString)(v.value0)(acc.types);
                      if (v1 instanceof Data_Maybe.Nothing) {
                          return {
                              types: Data_Map_Internal.insert(Data_Ord.ordString)(v.value0)(CtrIsInImports.value)(acc.types),
                              imports: Data_Semigroup.append(Data_Semigroup.semigroupArray)(acc.imports)([ v.value0 + "(..)" ])
                          };
                      };
                      if (v1 instanceof Data_Maybe.Just && v1.value0 instanceof CtrIsInImports) {
                          return acc;
                      };
                      if (v1 instanceof Data_Maybe.Just && v1.value0 instanceof CtrIsNotInImports) {
                          return {
                              types: Data_Map_Internal.insert(Data_Ord.ordString)(v.value0)(CtrIsInImports.value)(acc.types),
                              imports: Data_Semigroup.append(Data_Semigroup.semigroupArray)(acc.imports)([ v.value0 + "(..)" ])
                          };
                      };
                      throw new Error("Failed pattern match at Data.CodeGen line 84, column 11 - line 90, column 99: " + [ v1.constructor.name ]);
                  };
                  if (v instanceof Data_Generator.ITypeOp) {
                      return {
                          types: acc.types,
                          imports: Data_Semigroup.append(Data_Semigroup.semigroupArray)(acc.imports)([ "type (" + (v.value0 + ")") ])
                      };
                  };
                  if (v instanceof Data_Generator.IClass) {
                      return {
                          types: acc.types,
                          imports: Data_Semigroup.append(Data_Semigroup.semigroupArray)(acc.imports)([ "class " + v.value0 ])
                      };
                  };
                  if (v instanceof Data_Generator.IVal) {
                      return {
                          types: acc.types,
                          imports: Data_Semigroup.append(Data_Semigroup.semigroupArray)(acc.imports)([ v.value0 ])
                      };
                  };
                  if (v instanceof Data_Generator.IOp) {
                      return {
                          types: acc.types,
                          imports: Data_Semigroup.append(Data_Semigroup.semigroupArray)(acc.imports)([ "(" + (v.value0 + ")") ])
                      };
                  };
                  throw new Error("Failed pattern match at Data.CodeGen line 78, column 15 - line 98, column 61: " + [ v.constructor.name ]);
              };
          };
          return function ($126) {
              return runAcc(Data_Foldable.foldl(Data_Foldable.foldableArray)(f)({
                  types: Data_Monoid.mempty(Data_Map_Internal.monoidMap(Data_Ord.ordString)),
                  imports: Data_Monoid.mempty(Data_Monoid.monoidArray)
              })($126));
          };
      })();
      var runImport = function (v) {
          return "import " + (v.value0 + (" (" + (Data_String_Common.joinWith(", ")(runModuleImports(v.value1)) + ")")));
      };
      var mergeImports = function ($127) {
          return Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(Data_Map_Internal.fromFoldableWith(Data_Ord.ordString)(Data_Foldable.foldableArray)(Data_Semigroup.append(Data_Semigroup.semigroupArray))($127));
      };
      return function ($128) {
          return (function ($129) {
              return (function (v) {
                  return "import Prelude \x0a\x0a" + v;
              })(Data_Generator.newLine1($129));
          })(Data_Functor.map(Data_Functor.functorArray)(runImport)(mergeImports($128)));
      };
  })();
  var parseAbi = function (v) {
      return function (abiJson) {
          if (!v.truffle) {
              return Data_Argonaut_Decode_Class.decodeJson(Data_AbiParser.decodeJsonAbi)(abiJson);
          };
          if (v.truffle) {
              var mabi = Data_Lens_Fold.previewOn(abiJson)(function ($130) {
                  return Data_Argonaut_Prisms._Object(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))(Data_Lens_Index.ix(Data_Lens_Index.indexForeignObject)("abi")(Data_Lens_Internal_Forget.wanderForget(Data_Maybe_First.monoidFirst))($130));
              });
              return Control_Bind.bind(Data_Either.bindEither)(Control_Error_Util.note("truffle artifact missing abi field")(mabi))(Data_Argonaut_Decode_Class.decodeJson(Data_AbiParser.decodeJsonAbi));
          };
          throw new Error("Failed pattern match at Data.CodeGen line 181, column 30 - line 184, column 75: " + [ v.truffle.constructor.name ]);
      };
  };
  var maybeAnnotateArity = function (abi) {
      var groupingFunc = function (v) {
          if (v instanceof Data_AbiParser.AbiFunction) {
              return new Data_Tuple.Tuple([  ], [ v.value0 ]);
          };
          return new Data_Tuple.Tuple([ v ], [  ]);
      };
      var go = function (v) {
          return new Data_AbiParser.SolidityFunction({
              name: v.value0.name + Data_Show.show(Data_Show.showInt)(Data_Array.length(v.value0.inputs)),
              inputs: v.value0.inputs,
              outputs: v.value0.outputs,
              constant: v.value0.constant,
              payable: v.value0.payable,
              isConstructor: v.value0.isConstructor,
              isUnCurried: v.value0.isUnCurried
          });
      };
      var v = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Tuple.monoidTuple(Data_Monoid.monoidArray)(Data_Monoid.monoidArray))(groupingFunc)(abi);
      var nameToFunctions = Data_Map_Internal.fromFoldableWith(Data_Ord.ordString)(Data_Foldable.foldableArray)(Data_Semigroup.append(Data_Semigroup.semigroupArray))(Data_Functor.mapFlipped(Data_Functor.functorArray)(v.value1)(function (v1) {
          return new Data_Tuple.Tuple(v1.value0.name, [ v1 ]);
      }));
      var functionsWithArity = Control_Bind.bind(Control_Bind.bindArray)(Data_Array.fromFoldable(Data_List_Types.foldableList)(Data_Map_Internal.values(nameToFunctions)))(function (fs) {
          var $90 = Data_Array.length(fs) > 1;
          if ($90) {
              return Data_Functor.map(Data_Functor.functorArray)(go)(fs);
          };
          return fs;
      });
      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.value0)(Data_Functor.map(Data_Functor.functorArray)(Data_AbiParser.AbiFunction.create)(functionsWithArity));
  };
  var getJsonFilesInDirectory = function (dictMonadAff) {
      return function (dictMonadState) {
          return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Control_Monad_State_Class.get(dictMonadState))(function (v) {
              return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Effect_Aff_Class.liftAff(dictMonadAff)(Node_FS_Aff.readdir(v)))(function (v1) {
                  return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Data_Traversable["for"](((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(Data_Traversable.traversableArray)(v1)(validateFile(dictMonadAff)(v)))(function (v2) {
                      return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(Data_Array.catMaybes(v2));
                  });
              });
          });
      };
  };
  var getAllDirectories = function (dictMonadAff) {
      return function (dictMonadState) {
          return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Control_Monad_State_Class.get(dictMonadState))(function (v) {
              return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Effect_Aff_Class.liftAff(dictMonadAff)(Node_FS_Aff.readdir(v)))(function (v1) {
                  return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Data_Traversable["for"](((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(Data_Traversable.traversableArray)(v1)(validateRootedDir(dictMonadAff)(v)))(function (v2) {
                      return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(Data_Array.catMaybes(v2));
                  });
              });
          });
      };
  };
  var getAllJsonFiles = function (dictMonadAff) {
      return function (root) {
          var getAllJsonFiles$prime = Control_Bind.bind(Control_Monad_State_Trans.bindStateT((dictMonadAff.MonadEffect0()).Monad0()))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT((dictMonadAff.MonadEffect0()).Monad0())))(function (v) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT((dictMonadAff.MonadEffect0()).Monad0()))(getJsonFilesInDirectory(Effect_Aff_Class.monadAffState(dictMonadAff))(Control_Monad_State_Trans.monadStateStateT((dictMonadAff.MonadEffect0()).Monad0())))(function (v1) {
                  return Control_Bind.bind(Control_Monad_State_Trans.bindStateT((dictMonadAff.MonadEffect0()).Monad0()))(getAllDirectories(Effect_Aff_Class.monadAffState(dictMonadAff))(Control_Monad_State_Trans.monadStateStateT((dictMonadAff.MonadEffect0()).Monad0())))(function (v2) {
                      var $102 = Data_Array["null"](v2);
                      if ($102) {
                          return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT((dictMonadAff.MonadEffect0()).Monad0()))(v1);
                      };
                      return Control_Bind.bind(Control_Monad_State_Trans.bindStateT((dictMonadAff.MonadEffect0()).Monad0()))(Data_Traversable["for"](Control_Monad_State_Trans.applicativeStateT((dictMonadAff.MonadEffect0()).Monad0()))(Data_Traversable.traversableArray)(v2)(function (d) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT((dictMonadAff.MonadEffect0()).Monad0()))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT((dictMonadAff.MonadEffect0()).Monad0()))(d))(function () {
                              return getAllJsonFiles$prime;
                          });
                      }))(function (v3) {
                          return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT((dictMonadAff.MonadEffect0()).Monad0()))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1)(Data_Array.concat(v3)));
                      });
                  });
              });
          });
          return Control_Monad_State_Trans.evalStateT(((((dictMonadAff.MonadEffect0()).Monad0()).Bind1()).Apply0()).Functor0())(getAllJsonFiles$prime)(root);
      };
  };
  var genPSModuleStatement = function (opts) {
      return function (fp) {
          var comment = Data_Generator.mkComment([ Node_Path.basenameWithoutExt(fp)(".purs") ]);
          return comment + ("\x0a" + ("module " + (opts.modulePrefix + ("." + (Node_Path.basenameWithoutExt(fp)(".purs") + " where\x0a")))));
      };
  };
  var runImported = function (opts) {
      return function (destFile) {
          return function (c) {
              var v = Control_Monad_Writer.runWriter(c);
              return genPSModuleStatement(opts)(destFile) + (function () {
                  var $105 = v.value0 === "";
                  if ($105) {
                      return "";
                  };
                  return "\x0a" + (runImports(v.value1) + ("\x0a" + v.value0));
              })();
          };
      };
  };
  var generateCodeFromAbi = function (opts) {
      return function (v) {
          return function (destFile) {
              var abi$prime = Data_Functor.map(Data_Functor.functorArray)(Data_Identity.Identity)(maybeAnnotateArity(Data_Functor.map(Data_Functor.functorArray)(Data_Newtype.un(Data_Identity.newtypeIdentity)(Data_Identity.Identity))(v)));
              return runImported(opts)(destFile)(Data_Generator.genCode(Data_Generator.codeAbi)(Data_AbiParser.Abi(abi$prime))({
                  exprPrefix: opts.exprPrefix,
                  indentationLevel: 0
              }));
          };
      };
  };
  var writeCodeFromAbi = function (dictMonadAff) {
      return function (dictMonadTell) {
          return function (opts) {
              return function (abiPath) {
                  return function (destFile) {
                      return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Data_Functor.map(((((dictMonadAff.MonadEffect0()).Monad0()).Bind1()).Apply0()).Functor0())(Data_Argonaut_Parser.jsonParser)(Effect_Aff_Class.liftAff(dictMonadAff)(Node_FS_Aff.readTextFile(Node_Encoding.UTF8.value)(abiPath))))(function (v) {
                          return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Data_Either.either(function ($131) {
                              return Effect_Aff_Class.liftAff(dictMonadAff)(Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error($131)));
                          })(Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0()))(v))(function (v1) {
                              return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Data_Either.either(function ($132) {
                                  return Effect_Aff_Class.liftAff(dictMonadAff)(Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error($132)));
                              })(Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0()))(parseAbi(opts)(v1)))(function (v2) {
                                  return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Data_Traversable["for"](((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(Data_Traversable.traversableArray)(v2)(function (v3) {
                                      if (v3 instanceof Data_Either.Left) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Control_Monad_Writer_Class.tell(dictMonadTell)([ {
                                              abiPath: abiPath,
                                              error: v3.value0.error,
                                              idx: v3.value0.idx
                                          } ]))(function () {
                                              return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(Data_Maybe.Nothing.value);
                                          });
                                      };
                                      if (v3 instanceof Data_Either.Right) {
                                          return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(Data_Maybe.Just.create(v3.value0));
                                      };
                                      throw new Error("Failed pattern match at Data.CodeGen line 156, column 35 - line 160, column 46: " + [ v3.constructor.name ]);
                                  }))(function (v3) {
                                      var code = generateCodeFromAbi(opts)(Data_AbiParser.Abi(Data_Array.catMaybes(v3)))(destFile);
                                      return Effect_Aff_Class.liftAff(dictMonadAff)(Node_FS_Aff.writeTextFile(Node_Encoding.UTF8.value)(destFile)(code));
                                  });
                              });
                          });
                      });
                  };
              };
          };
      };
  };
  var generatePS = function (os) {
      var warningCheck = Ansi_Output.withGraphics(Ansi_Output.foreground(Ansi_Codes.Yellow.value))("\u26a0");
      var successCheck = Ansi_Output.withGraphics(Ansi_Output.foreground(Ansi_Codes.Green.value))("\u2714");
      var genPSFileName = function (opts) {
          return function (fp) {
              return opts.pursDir + ("/" + (Node_Path.basenameWithoutExt(fp)(".json") + ".purs"));
          };
      };
      var errorCheck = Ansi_Output.withGraphics(Ansi_Output.foreground(Ansi_Codes.Red.value))("\u26a0");
      var opts = {
          pursDir: os.pursDir + ("/" + Data_String_Common.replaceAll(".")("/")(os.modulePrefix)),
          exprPrefix: os.exprPrefix,
          jsonDir: os.jsonDir,
          modulePrefix: os.modulePrefix,
          truffle: os.truffle
      };
      return Control_Bind.bind(Effect_Aff.bindAff)(getAllJsonFiles(Effect_Aff_Class.monadAffAff)(opts.jsonDir))(function (v) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Node_FS_Sync_Mkdirp.mkdirp(opts.pursDir)))(function () {
              if (v.length === 0) {
                  return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("No abi json files found in directory: " + opts.jsonDir));
              };
              return Control_Bind.bind(Effect_Aff.bindAff)(Data_Functor.map(Effect_Aff.functorAff)(Control_Bind.join(Control_Bind.bindArray))(Data_Traversable["for"](Effect_Aff.applicativeAff)(Data_Traversable.traversableArray)(v)(function (f) {
                  var f$prime = genPSFileName(opts)(f);
                  return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Writer_Trans.runWriterT(writeCodeFromAbi(Effect_Aff_Class.monadAffWriter(Effect_Aff_Class.monadAffAff)(Data_Monoid.monoidArray))(Control_Monad_Writer_Trans.monadTellWriterT(Data_Monoid.monoidArray)(Effect_Aff.monadAff))(opts)(f)(f$prime)))(function (v1) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Console.log((function () {
                          var $121 = Data_Array["null"](v1.value1);
                          if ($121) {
                              return successCheck + (" contract module for " + (f + (" successfully written to " + f$prime)));
                          };
                          return warningCheck + (" (" + (Data_Show.show(Data_Show.showInt)(Data_Array.length(v1.value1)) + (") contract module for " + (f + (" written to " + f$prime)))));
                      })())))(function () {
                          return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                      });
                  });
              })))(function (v1) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Applicative.unless(Effect_Aff.applicativeAff)(Data_Array["null"](v1))(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Console.log(errorCheck + (" got " + (Data_Show.show(Data_Show.showInt)(Data_Array.length(v1)) + " error(s) during generation")))))(function () {
                      return Data_Foldable.for_(Effect_Aff.applicativeAff)(Data_Foldable.foldableArray)(v1)(function (v2) {
                          return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Console.log(errorCheck + (" while parsing abi type of object at index: " + (Data_Show.show(Data_Show.showInt)(v2.idx) + (" from: " + (v2.abiPath + (" got error:\x0a    " + v2.error)))))));
                      });
                  })))(function () {
                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1);
                  });
              });
          });
      });
  };
  exports["CtrIsInImports"] = CtrIsInImports;
  exports["CtrIsNotInImports"] = CtrIsNotInImports;
  exports["runImported"] = runImported;
  exports["runImports"] = runImports;
  exports["generatePS"] = generatePS;
  exports["generateCodeFromAbi"] = generateCodeFromAbi;
  exports["writeCodeFromAbi"] = writeCodeFromAbi;
  exports["maybeAnnotateArity"] = maybeAnnotateArity;
  exports["parseAbi"] = parseAbi;
  exports["genPSModuleStatement"] = genPSModuleStatement;
  exports["getAllDirectories"] = getAllDirectories;
  exports["validateRootedDir"] = validateRootedDir;
  exports["getJsonFilesInDirectory"] = getJsonFilesInDirectory;
  exports["validateFile"] = validateFile;
  exports["getAllJsonFiles"] = getAllJsonFiles;
})(PS["Data.CodeGen"] = PS["Data.CodeGen"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Chanterelle_Internal_Logging = PS["Chanterelle.Internal.Logging"];
  var Chanterelle_Internal_Types_Compile = PS["Chanterelle.Internal.Types.Compile"];
  var Chanterelle_Internal_Types_Project = PS["Chanterelle.Internal.Types.Project"];
  var Chanterelle_Internal_Utils = PS["Chanterelle.Internal.Utils"];
  var Chanterelle_Internal_Utils_FS = PS["Chanterelle.Internal.Utils.FS"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Error_Util = PS["Control.Error.Util"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader = PS["Control.Monad.Reader"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_AbiParser = PS["Data.AbiParser"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Parser = PS["Data.Argonaut.Parser"];
  var Data_Argonaut_Prisms = PS["Data.Argonaut.Prisms"];
  var Data_Array = PS["Data.Array"];
  var Data_CodeGen = PS["Data.CodeGen"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Lens_Fold = PS["Data.Lens.Fold"];
  var Data_Lens_Index = PS["Data.Lens.Index"];
  var Data_Lens_Internal_Forget = PS["Data.Lens.Internal.Forget"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_FS_Aff = PS["Node.FS.Aff"];
  var Node_Path = PS["Node.Path"];
  var Prelude = PS["Prelude"];                 
  var projectPSArgs = function (v) {
      return {
          jsonDir: v.value0.jsonOut,
          pursDir: v.value0.psOut,
          truffle: true,
          exprPrefix: v.value0.spec.psGen.exprPrefix,
          modulePrefix: v.value0.spec.psGen.modulePrefix
      };
  };
  var loadAbi = function (dictMonadAff) {
      return function (dictMonadThrow) {
          return function (v) {
              return function (abiFile) {
                  var parseAbi = function (json) {
                      var mabi = Data_Lens_Fold.previewOn(json)(function ($42) {
                          return Data_Argonaut_Prisms._Object(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))(Data_Lens_Index.ix(Data_Lens_Index.indexForeignObject)("abi")(Data_Lens_Internal_Forget.wanderForget(Data_Maybe_First.monoidFirst))($42));
                      });
                      return Control_Bind.bind(Data_Either.bindEither)(Control_Error_Util.note("ABI field missing in " + abiFile)(mabi))(Data_Argonaut_Decode_Class.decodeJson(Data_AbiParser.decodeJsonAbi));
                  };
                  return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Effect_Aff_Class.liftAff(dictMonadAff)(Data_Functor.map(Effect_Aff.functorAff)(Data_Argonaut_Parser.jsonParser)(Node_FS_Aff.readTextFile(Node_Encoding.UTF8.value)(abiFile))))(function (v1) {
                      return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Data_Either.either(function ($43) {
                          return Control_Monad_Error_Class.throwError(dictMonadThrow)(Chanterelle_Internal_Types_Compile.CompileParseError.create((function (v2) {
                              return {
                                  objectName: "Json File " + abiFile,
                                  parseError: v2
                              };
                          })($43)));
                      })(Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0()))(v1))(function (v2) {
                          return Data_Either.either(function ($44) {
                              return Control_Monad_Error_Class.throwError(dictMonadThrow)(Chanterelle_Internal_Types_Compile.CompileParseError.create((function (v3) {
                                  return {
                                      objectName: "ABI " + abiFile,
                                      parseError: v3
                                  };
                              })($44)));
                          })(Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0()))(parseAbi(v2));
                      });
                  });
              };
          };
      };
  };
  var generatePS = function (dictMonadAff) {
      return function (dictMonadThrow) {
          return function (dictMonadAsk) {
              return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Control_Monad_Reader_Class.ask(dictMonadAsk))(function (v) {
                  var psArgs = projectPSArgs(v);
                  return Control_Bind.discard(Control_Bind.discardUnit)(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Data_Functor["void"](((((dictMonadAff.MonadEffect0()).Monad0()).Bind1()).Apply0()).Functor0())(Data_Traversable["for"](((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(Data_Traversable.traversableArray)(v.value0.modules)(function (v1) {
                      return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(loadAbi(dictMonadAff)(dictMonadThrow)(v)(v1.value0.jsonPath))(function (v2) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Chanterelle_Internal_Logging.log(dictMonadAff.MonadEffect0())(Chanterelle_Internal_Logging.Debug.value)("generating purescript for " + v1.value0.moduleName))(function () {
                              return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Data_Traversable["for"](((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(Data_Traversable.traversableArray)(v2)(function (v3) {
                                  if (v3 instanceof Data_Either.Left) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Chanterelle_Internal_Logging.log(dictMonadAff.MonadEffect0())(Chanterelle_Internal_Logging["Error"].value)("while parsing abi type of object at index: " + (Data_Show.show(Data_Show.showInt)(v3.value0.idx) + (" from: " + (v1.value0.jsonPath + (" got error: " + v3.value0.error))))))(function () {
                                          return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(Data_Maybe.Nothing.value);
                                      });
                                  };
                                  if (v3 instanceof Data_Either.Right) {
                                      return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(new Data_Maybe.Just(v3.value0));
                                  };
                                  throw new Error("Failed pattern match at Chanterelle.Internal.Codegen line 43, column 32 - line 47, column 33: " + [ v3.constructor.name ]);
                              }))(function (v3) {
                                  var psModule = Data_CodeGen.generateCodeFromAbi(projectPSArgs(v))(Data_AbiParser.Abi(Data_Array.mapMaybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Identity.Identity))(v3)))(v1.value0.moduleName);
                                  return Control_Bind.discard(Control_Bind.discardUnit)(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Chanterelle_Internal_Utils_FS.assertDirectory(dictMonadAff)(dictMonadThrow)(Node_Path.dirname(v1.value0.pursPath)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Chanterelle_Internal_Logging.log(dictMonadAff.MonadEffect0())(Chanterelle_Internal_Logging.Info.value)("writing PureScript bindings for " + v1.value0.moduleName))(function () {
                                          return Effect_Aff_Class.liftAff(dictMonadAff)(Node_FS_Aff.writeTextFile(Node_Encoding.UTF8.value)(v1.value0.pursPath)(psModule));
                                      });
                                  });
                              });
                          });
                      });
                  })))(function () {
                      return Effect_Aff_Class.liftAff(dictMonadAff)((function () {
                          if (v.value0.spec.extraAbis instanceof Data_Maybe.Nothing) {
                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit);
                          };
                          if (v.value0.spec.extraAbis instanceof Data_Maybe.Just) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Chanterelle_Internal_Logging.log(Effect_Aff.monadEffectAff)(Chanterelle_Internal_Logging.Info.value)("Writing additional PureScript bindings using abis from directory " + v.value0.spec.extraAbis.value0))(function () {
                                  return Control_Bind.bind(Effect_Aff.bindAff)(Data_CodeGen.generatePS({
                                      jsonDir: v.value0.spec.extraAbis.value0,
                                      pursDir: psArgs.pursDir,
                                      truffle: false,
                                      exprPrefix: psArgs.exprPrefix,
                                      modulePrefix: psArgs.modulePrefix
                                  }))(function (v1) {
                                      return Data_Foldable.for_(Effect_Aff.applicativeAff)(Data_Foldable.foldableArray)(v1)(function (v2) {
                                          return Chanterelle_Internal_Logging.log(Effect_Aff.monadEffectAff)(Chanterelle_Internal_Logging["Error"].value)("while parsing abi type of object at index: " + (Data_Show.show(Data_Show.showInt)(v2.idx) + (" from: " + (v2.abiPath + (" got error: " + v2.error)))));
                                      });
                                  });
                              });
                          };
                          throw new Error("Failed pattern match at Chanterelle.Internal.Codegen line 55, column 13 - line 65, column 85: " + [ v.value0.spec.extraAbis.constructor.name ]);
                      })());
                  });
              });
          };
      };
  };
  exports["generatePS"] = generatePS;
})(PS["Chanterelle.Internal.Codegen"] = PS["Chanterelle.Internal.Codegen"] || {});
(function(exports) {
  var solc =require("solc"); 

  exports.solcInputCallbackSuccess = function (contents) {
    return { "contents": contents };
  };

  exports.solcInputCallbackFailure = function (error) {
    return { "error": error };
  };

  exports._compile = function (inputJson, readCallback) {
      return function () {
        return solc.compileStandardWrapper(inputJson, function(requestedFile) {
          return readCallback(requestedFile)();
        });
      };
  };
})(PS["Chanterelle.Internal.Compile"] = PS["Chanterelle.Internal.Compile"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_DateTime = PS["Data.DateTime"];
  var Data_DateTime_Instant = PS["Data.DateTime.Instant"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Show = PS["Data.Show"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Effect = PS["Effect"];
  var Node_Buffer = PS["Node.Buffer"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_FS = PS["Node.FS"];
  var Node_FS_Internal = PS["Node.FS.Internal"];
  var Node_FS_Perms = PS["Node.FS.Perms"];
  var Node_FS_Stats = PS["Node.FS.Stats"];
  var Node_Path = PS["Node.Path"];
  var Prelude = PS["Prelude"];                 
  var fs = Node_FS_Internal.unsafeRequireFS;
  var readTextFile = function (encoding) {
      return function (file) {
          return Node_FS_Internal.mkEffect(function (v) {
              return fs.readFileSync(file, {
                  encoding: Data_Show.show(Node_Encoding.showEncoding)(encoding)
              });
          });
      };
  };
  exports["readTextFile"] = readTextFile;
})(PS["Node.FS.Sync"] = PS["Node.FS.Sync"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Chanterelle.Internal.Compile"];
  var Chanterelle_Internal_Logging = PS["Chanterelle.Internal.Logging"];
  var Chanterelle_Internal_Types_Compile = PS["Chanterelle.Internal.Types.Compile"];
  var Chanterelle_Internal_Types_Project = PS["Chanterelle.Internal.Types.Project"];
  var Chanterelle_Internal_Utils_FS = PS["Chanterelle.Internal.Utils.FS"];
  var Chanterelle_Internal_Utils_Json = PS["Chanterelle.Internal.Utils.Json"];
  var Chanterelle_Internal_Utils_Time = PS["Chanterelle.Internal.Utils.Time"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Error_Util = PS["Control.Error.Util"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader = PS["Control.Monad.Reader"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Parser = PS["Data.Argonaut.Parser"];
  var Data_Argonaut_Prisms = PS["Data.Argonaut.Prisms"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Lens_Fold = PS["Data.Lens.Fold"];
  var Data_Lens_Index = PS["Data.Lens.Index"];
  var Data_Lens_Internal_Forget = PS["Data.Lens.Internal.Forget"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Effect = PS["Effect"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Exception = PS["Effect.Exception"];
  var Foreign_Object = PS["Foreign.Object"];
  var Network_Ethereum_Core_HexString = PS["Network.Ethereum.Core.HexString"];
  var Network_Ethereum_Core_Keccak256 = PS["Network.Ethereum.Core.Keccak256"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_FS_Aff = PS["Node.FS.Aff"];
  var Node_FS_Sync = PS["Node.FS.Sync"];
  var Node_Path = PS["Node.Path"];
  var Prelude = PS["Prelude"];                 
  var resolveContractMainModule = function (dictMonadAff) {
      return function (dictMonadThrow) {
          return function (fileName) {
              return function (decodedOutputs) {
                  return function (solContractName) {
                      var v = Foreign_Object.lookup(solContractName)(decodedOutputs);
                      if (v instanceof Data_Maybe.Nothing) {
                          return Control_Monad_Error_Class.throwError(dictMonadThrow)(new Chanterelle_Internal_Types_Compile.MissingArtifactError({
                              fileName: fileName,
                              objectName: solContractName
                          }));
                      };
                      if (v instanceof Data_Maybe.Just) {
                          return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(v.value0);
                      };
                      throw new Error("Failed pattern match at Chanterelle.Internal.Compile line 226, column 3 - line 228, column 22: " + [ v.constructor.name ]);
                  };
              };
          };
      };
  };
  var modulesToCompile = function (dictMonadAff) {
      return function (dictMonadThrow) {
          return function (dictMonadAsk) {
              return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Control_Monad_Reader_Class.ask(dictMonadAsk))(function (v) {
                  return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Data_Traversable["for"](((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(Data_Traversable.traversableArray)(v.value0.modules)(function (v1) {
                      return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Effect_Aff_Class.liftAff(dictMonadAff)(Effect_Aff.attempt(Node_FS_Aff.readTextFile(Node_Encoding.UTF8.value)(v1.value0.jsonPath))))(function (v2) {
                          if (v2 instanceof Data_Either.Left) {
                              return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(new Data_Maybe.Just(v1));
                          };
                          if (v2 instanceof Data_Either.Right) {
                              var v3 = Control_Bind.bind(Data_Maybe.bindMaybe)(Control_Error_Util.hush(Data_Argonaut_Parser.jsonParser(v2.value0)))(function (json$prime) {
                                  return Data_Lens_Fold.previewOn(json$prime)(function ($113) {
                                      return Data_Argonaut_Prisms._Object(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))(Data_Lens_Index.ix(Data_Lens_Index.indexForeignObject)("compiledAt")(Data_Lens_Internal_Forget.wanderForget(Data_Maybe_First.monoidFirst))(Data_Argonaut_Prisms._Number(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))($113)));
                                  });
                              });
                              if (v3 instanceof Data_Maybe.Nothing) {
                                  return Control_Apply.applySecond((((dictMonadAff.MonadEffect0()).Monad0()).Bind1()).Apply0())(Chanterelle_Internal_Logging.log(dictMonadAff.MonadEffect0())(Chanterelle_Internal_Logging.Debug.value)("Couldn't find 'compiledAt' timestamp for dirty file checking: " + v1.value0.jsonPath))(Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(new Data_Maybe.Just(v1)));
                              };
                              if (v3 instanceof Data_Maybe.Just) {
                                  return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Effect_Aff_Class.liftAff(dictMonadAff)(Effect_Aff.attempt(Chanterelle_Internal_Utils_FS.fileIsDirty(Effect_Aff_Class.monadAffAff)(v1.value0.solPath)(v3.value0)(v.value0.specModTime))))(function (v4) {
                                      if (v4 instanceof Data_Either.Left) {
                                          return Control_Monad_Error_Class.throwError(dictMonadThrow)(new Chanterelle_Internal_Types_Compile.MissingArtifactError({
                                              fileName: v1.value0.solPath,
                                              objectName: v1.value0.solContractName
                                          }));
                                      };
                                      if (v4 instanceof Data_Either.Right) {
                                          var $63 = !v4.value0;
                                          if ($63) {
                                              return Control_Apply.applySecond((((dictMonadAff.MonadEffect0()).Monad0()).Bind1()).Apply0())(Chanterelle_Internal_Logging.log(dictMonadAff.MonadEffect0())(Chanterelle_Internal_Logging.Debug.value)("File is clean: " + v1.value0.solPath))(Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(Data_Maybe.Nothing.value));
                                          };
                                          return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(new Data_Maybe.Just(v1));
                                      };
                                      throw new Error("Failed pattern match at Chanterelle.Internal.Compile line 90, column 11 - line 95, column 35: " + [ v4.constructor.name ]);
                                  });
                              };
                              throw new Error("Failed pattern match at Chanterelle.Internal.Compile line 86, column 21 - line 95, column 35: " + [ v3.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Chanterelle.Internal.Compile line 84, column 5 - line 95, column 35: " + [ v2.constructor.name ]);
                      });
                  }))(function (v1) {
                      return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(Data_Array.catMaybes(v1));
                  });
              });
          };
      };
  };
  var makeSolcContract = function (sourceCode) {
      return {
          content: sourceCode,
          hash: Network_Ethereum_Core_HexString.fromByteString(Network_Ethereum_Core_Keccak256.keccak256(Network_Ethereum_Core_Keccak256.keccak256String)(sourceCode))
      };
  };
  var makeSolcInput = function (dictMonadAff) {
      return function (dictMonadAsk) {
          return function (moduleName) {
              return function (sourcePath) {
                  return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Control_Monad_Reader_Class.ask(dictMonadAsk))(function (v) {
                      return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Effect_Aff_Class.liftAff(dictMonadAff)(Node_FS_Aff.readTextFile(Node_Encoding.UTF8.value)(sourcePath)))(function (v1) {
                          var sources = Foreign_Object.singleton(moduleName + ".sol")(makeSolcContract(v1));
                          var sourceDirMapping = [ ":g=" + Node_Path.concat([ v.value0.root, v.value0.spec.sourceDir ]) ];
                          var outputSelection = Foreign_Object.singleton("*")(Foreign_Object.singleton("*")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ "abi", "evm.deployedBytecode.object", "evm.bytecode.object" ])(v.value0.spec.solcOutputSelection)));
                          var optimizer = Data_Maybe.fromMaybe(Chanterelle_Internal_Types_Project.defaultSolcOptimizerSettings)(v.value0.spec.solcOptimizerSettings);
                          var libraries = Foreign_Object.singleton(moduleName + ".sol")(v.value0.spec.libraries);
                          var depMappings = Data_Functor.map(Data_Functor.functorArray)(function (v2) {
                              return v2 + ("=" + (v.value0.root + ("/node_modules/" + v2)));
                          })(v.value0.spec.dependencies);
                          var remappings = Data_Semigroup.append(Data_Semigroup.semigroupArray)(sourceDirMapping)(depMappings);
                          var settings = {
                              outputSelection: outputSelection,
                              remappings: remappings,
                              libraries: libraries,
                              optimizer: optimizer
                          };
                          return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())({
                              language: "Solidity",
                              sources: sources,
                              settings: settings
                          });
                      });
                  });
              };
          };
      };
  };
  var loadSolcCallback = function (root) {
      return function (v) {
          return function (filePath) {
              var isAbs = Node_Path.isAbsolute(filePath);
              var fullPath = (function () {
                  if (isAbs) {
                      return filePath;
                  };
                  return Node_Path.normalize(Node_Path.concat([ root, v.sourceDir, filePath ]));
              })();
              return function __do() {
                  Chanterelle_Internal_Logging.log(Effect_Class.monadEffectEffect)(Chanterelle_Internal_Logging.Debug.value)("Solc load: " + (filePath + (" -> " + fullPath)))();
                  return Effect_Exception.catchException(function ($114) {
                      return Control_Applicative.pure(Effect.applicativeEffect)($foreign.solcInputCallbackFailure(Data_Show.show(Effect_Exception.showError)($114)));
                  })(Data_Functor.map(Effect.functorEffect)($foreign.solcInputCallbackSuccess)(Node_FS_Sync.readTextFile(Node_Encoding.UTF8.value)(fullPath)))();
              };
          };
      };
  };
  var decodeContract = function (dictMonadEffect) {
      return function (dictMonadThrow) {
          return function (srcName) {
              return function (v) {
                  var warnings = Data_Array.filter(function (v1) {
                      return v1.severity === "warning";
                  })(v.errors);
                  var srcNameWithSol = srcName + ".sol";
                  return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEffect.Monad0()).Bind1())(Data_Foldable.for_((dictMonadEffect.Monad0()).Applicative0())(Data_Foldable.foldableArray)(warnings)(function (v1) {
                      return Chanterelle_Internal_Logging.log(dictMonadEffect)(Chanterelle_Internal_Logging.Warn.value)(v1.formattedMessage);
                  }))(function () {
                      var v1 = Foreign_Object.lookup(srcNameWithSol)(v.contracts);
                      if (v1 instanceof Data_Maybe.Nothing) {
                          var errs = Data_Array.filter(function (v2) {
                              return v2.severity === "error";
                          })(v.errors);
                          return Control_Monad_Error_Class.throwError(dictMonadThrow)(Chanterelle_Internal_Types_Compile.CompilationError.create(Data_Functor.map(Data_Functor.functorArray)(function (v2) {
                              return v2.formattedMessage;
                          })(errs)));
                      };
                      if (v1 instanceof Data_Maybe.Just) {
                          return Control_Applicative.pure((dictMonadEffect.Monad0()).Applicative0())(v1.value0);
                      };
                      throw new Error("Failed pattern match at Chanterelle.Internal.Compile line 193, column 5 - line 197, column 45: " + [ v1.constructor.name ]);
                  });
              };
          };
      };
  };
  var writeBuildArtifact = function (dictMonadAff) {
      return function (dictMonadThrow) {
          return function (srcName) {
              return function (filepath) {
                  return function (output) {
                      return function (solContractName) {
                          return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(decodeContract(dictMonadAff.MonadEffect0())(dictMonadThrow)(srcName)(output))(function (v) {
                              return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(resolveContractMainModule(dictMonadAff)(dictMonadThrow)(filepath)(v)(solContractName))(function (v1) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Chanterelle_Internal_Utils_FS.assertDirectory(dictMonadAff)(dictMonadThrow)(Node_Path.dirname(filepath)))(function () {
                                      return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Data_Functor.map(((((dictMonadAff.MonadEffect0()).Monad0()).Bind1()).Apply0()).Functor0())(Chanterelle_Internal_Utils_Time.toEpoch)(Effect_Class.liftEffect(dictMonadAff.MonadEffect0())(Chanterelle_Internal_Utils_Time.now)))(function (v2) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Chanterelle_Internal_Logging.log(dictMonadAff.MonadEffect0())(Chanterelle_Internal_Logging.Debug.value)("Writing artifact " + filepath))(function () {
                                              return Effect_Aff_Class.liftAff(dictMonadAff)(Node_FS_Aff.writeTextFile(Node_Encoding.UTF8.value)(filepath)(Chanterelle_Internal_Utils_Json.jsonStringifyWithSpaces(4)(Chanterelle_Internal_Types_Compile.encodeOutputContract(v1)(v2))));
                                          });
                                      });
                                  });
                              });
                          });
                      };
                  };
              };
          };
      };
  };
  var compileModuleWithoutWriting = function (dictMonadAff) {
      return function (dictMonadThrow) {
          return function (dictMonadAsk) {
              return function (v) {
                  return function (solcInput) {
                      return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Control_Monad_Reader_Class.ask(dictMonadAsk))(function (v1) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Chanterelle_Internal_Logging.log(dictMonadAff.MonadEffect0())(Chanterelle_Internal_Logging.Info.value)("compiling " + v.value0.moduleName))(function () {
                              return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Effect_Class.liftEffect(dictMonadAff.MonadEffect0())($foreign._compile(Data_Argonaut_Core.stringify(Data_Argonaut_Encode_Class.encodeJson(Chanterelle_Internal_Types_Compile.encodeSolcInput)(solcInput)), loadSolcCallback(v1.value0.root)(v1.value0.spec))))(function (v2) {
                                  var v3 = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Parser.jsonParser(v2))(Chanterelle_Internal_Types_Compile.parseSolcOutput);
                                  if (v3 instanceof Data_Either.Left) {
                                      return Control_Monad_Error_Class.throwError(dictMonadThrow)(new Chanterelle_Internal_Types_Compile.CompileParseError({
                                          objectName: "Solc Output",
                                          parseError: v3.value0
                                      }));
                                  };
                                  if (v3 instanceof Data_Either.Right) {
                                      return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(v3.value0);
                                  };
                                  throw new Error("Failed pattern match at Chanterelle.Internal.Compile line 122, column 3 - line 124, column 34: " + [ v3.constructor.name ]);
                              });
                          });
                      });
                  };
              };
          };
      };
  };
  var compileModule = function (dictMonadAff) {
      return function (dictMonadThrow) {
          return function (dictMonadAsk) {
              return function (v) {
                  return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(compileModuleWithoutWriting(dictMonadAff)(dictMonadThrow)(dictMonadAsk)(v.value0)(v.value1))(function (v1) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(writeBuildArtifact(dictMonadAff)(dictMonadThrow)(v.value0.value0.solContractName)(v.value0.value0.jsonPath)(v1)(v.value0.value0.solContractName))(function () {
                          return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(new Data_Tuple.Tuple(v.value0.value0.moduleName, new Data_Tuple.Tuple(v.value0, v1)));
                      });
                  });
              };
          };
      };
  };
  var compile = function (dictMonadAff) {
      return function (dictMonadThrow) {
          return function (dictMonadAsk) {
              return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Control_Monad_Reader_Class.ask(dictMonadAsk))(function (v) {
                  return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(modulesToCompile(dictMonadAff)(dictMonadThrow)(dictMonadAsk))(function (v1) {
                      return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Data_Traversable["for"](((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(Data_Traversable.traversableArray)(v1)(function (v2) {
                          return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(makeSolcInput(dictMonadAff)(dictMonadAsk)(v2.value0.solContractName)(v2.value0.solPath))(function (v3) {
                              return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(new Data_Tuple.Tuple(v2, v3));
                          });
                      }))(function (v2) {
                          return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Data_Traversable["for"](((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(Data_Traversable.traversableArray)(v2)(compileModule(dictMonadAff)(dictMonadThrow)(dictMonadAsk)))(function (v3) {
                              return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(Foreign_Object.fromFoldable(Data_Foldable.foldableArray)(v3));
                          });
                      });
                  });
              });
          };
      };
  };
  exports["compile"] = compile;
  exports["makeSolcInput"] = makeSolcInput;
  exports["compileModuleWithoutWriting"] = compileModuleWithoutWriting;
  exports["decodeContract"] = decodeContract;
  exports["resolveContractMainModule"] = resolveContractMainModule;
})(PS["Chanterelle.Internal.Compile"] = PS["Chanterelle.Internal.Compile"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Prelude = PS["Prelude"];                 
  var firstSuccess = function (dictMonadAff) {
      return function (arr) {
          return function (runner) {
              var go = function (arr$prime) {
                  return function (failures) {
                      var v = Data_Array.uncons(arr$prime);
                      if (v instanceof Data_Maybe.Nothing) {
                          return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(new Data_Either.Left({
                              failures: failures
                          }));
                      };
                      if (v instanceof Data_Maybe.Just) {
                          return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(runner(v.value0.head))(function (v1) {
                              if (v1 instanceof Data_Either.Left) {
                                  return go(v.value0.tail)(Data_Array.snoc(failures)(new Data_Tuple.Tuple(v.value0.head, v1.value0)));
                              };
                              if (v1 instanceof Data_Either.Right) {
                                  return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(new Data_Either.Right({
                                      result: v1.value0,
                                      input: v.value0.head,
                                      failures: failures
                                  }));
                              };
                              throw new Error("Failed pattern match at Chanterelle.Internal.Utils.Lazy line 18, column 50 - line 20, column 74: " + [ v1.constructor.name ]);
                          });
                      };
                      throw new Error("Failed pattern match at Chanterelle.Internal.Utils.Lazy line 16, column 28 - line 20, column 74: " + [ v.constructor.name ]);
                  };
              };
              return go(arr)([  ]);
          };
      };
  };
  exports["firstSuccess"] = firstSuccess;
})(PS["Chanterelle.Internal.Utils.Lazy"] = PS["Chanterelle.Internal.Utils.Lazy"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Chanterelle_Internal_Types_Project = PS["Chanterelle.Internal.Types.Project"];
  var Chanterelle_Internal_Utils_FS = PS["Chanterelle.Internal.Utils.FS"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Parser = PS["Data.Argonaut.Parser"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_String = PS["Data.String"];
  var Data_String_Common = PS["Data.String.Common"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Effect_Exception = PS["Effect.Exception"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_FS_Aff = PS["Node.FS.Aff"];
  var Node_Path = PS["Node.Path"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var loadProject = function (dictMonadAff) {
      return function (dictMonadThrow) {
          return function (root) {
              var fullChanterelleJsonPath = Node_Path.concat([ root, "chanterelle.json" ]);
              return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Effect_Aff_Class.liftAff(dictMonadAff)(Effect_Aff.attempt(Chanterelle_Internal_Utils_FS.fileModTime(Effect_Aff_Class.monadAffAff)(fullChanterelleJsonPath))))(function (v) {
                  return Data_Either.either(Data_Function["const"](Control_Monad_Error_Class.throwError(dictMonadThrow)(Effect_Exception.error("Error reading chanterelle.json, make sure this file exists."))))(Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0()))(v);
              }))(function (v) {
                  return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Effect_Aff_Class.liftAff(dictMonadAff)(Node_FS_Aff.readTextFile(Node_Encoding.UTF8.value)(fullChanterelleJsonPath)))(function (v1) {
                      var v2 = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Parser.jsonParser(v1))(Data_Argonaut_Decode_Class.decodeJson(Chanterelle_Internal_Types_Project.decodeJsonChanterelleProjectSpec));
                      if (v2 instanceof Data_Either.Left) {
                          return Control_Monad_Error_Class.throwError(dictMonadThrow)(Effect_Exception.error("Error parsing chanterelle.json: " + v2.value0));
                      };
                      if (v2 instanceof Data_Either.Right) {
                          return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(v2.value0);
                      };
                      throw new Error("Failed pattern match at Chanterelle.Project line 37, column 5 - line 39, column 24: " + [ v2.constructor.name ]);
                  }))(function (v1) {
                      var srcIn = Node_Path.concat([ root, v1.sourceDir ]);
                      var psOut = Node_Path.concat([ root, v1.psGen.outputPath ]);
                      var jsonOut = Node_Path.concat([ root, v1.artifactsDir ]);
                      var mkModule = function (moduleName) {
                          var solContractName = Partial_Unsafe.unsafePartialBecause("String.split always returns a non-empty Array")(function (dictPartial) {
                              return Data_Maybe.fromJust(dictPartial)(Data_Array.last(Data_String_Common.split(".")(moduleName)));
                          });
                          var psModBase = Data_String_Common.replaceAll(".")(Node_Path.sep)(v1.psGen.modulePrefix);
                          var pathModName = Data_String_Common.replaceAll(".")(Node_Path.sep)(moduleName);
                          var pursPath = Node_Path.concat([ psOut, psModBase, pathModName + ".purs" ]);
                          var solPath = Node_Path.concat([ srcIn, pathModName + ".sol" ]);
                          var jsonPath = Node_Path.concat([ jsonOut, pathModName + ".json" ]);
                          return new Chanterelle_Internal_Types_Project.ChanterelleModule({
                              moduleName: moduleName,
                              solContractName: solContractName,
                              solPath: solPath,
                              jsonPath: jsonPath,
                              pursPath: pursPath
                          });
                      };
                      var modules = Data_Functor.map(Data_Functor.functorArray)(mkModule)(v1.modules);
                      return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(new Chanterelle_Internal_Types_Project.ChanterelleProject({
                          root: root,
                          srcIn: srcIn,
                          jsonOut: jsonOut,
                          psOut: psOut,
                          spec: v1,
                          modules: modules,
                          specModTime: v
                      }));
                  });
              });
          };
      };
  };
  exports["loadProject"] = loadProject;
})(PS["Chanterelle.Project"] = PS["Chanterelle.Project"] || {});
(function(exports) {
    "use strict";

  exports.process = process;

  exports.exit = function (code) {
    return function () {
      process.exit(code);
    };
  };
})(PS["Node.Process"] = PS["Node.Process"] || {});
(function(exports) {
    "use strict";

  exports.write = function (w) {
    return function (chunk) {
      return function (done) {
        return function () {
          return w.write(chunk, null, done);
        };
      };
    };
  };

  exports.writeStringImpl = function (w) {
    return function (enc) {
      return function (s) {
        return function (done) {
          return function () {
            return w.write(s, enc, done);
          };
        };
      };
    };
  };
})(PS["Node.Stream"] = PS["Node.Stream"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Node.Stream"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Effect = PS["Effect"];
  var Effect_Exception = PS["Effect.Exception"];
  var Node_Buffer = PS["Node.Buffer"];
  var Node_Encoding = PS["Node.Encoding"];
  var Prelude = PS["Prelude"];                 
  var writeString = function (w) {
      return function (enc) {
          return $foreign.writeStringImpl(w)(Data_Show.show(Node_Encoding.showEncoding)(enc));
      };
  };
  exports["writeString"] = writeString;
})(PS["Node.Stream"] = PS["Node.Stream"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Node.Process"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Posix = PS["Data.Posix"];
  var Data_Posix_Signal = PS["Data.Posix.Signal"];
  var Effect = PS["Effect"];
  var Foreign_Object = PS["Foreign.Object"];
  var Node_Platform = PS["Node.Platform"];
  var Node_Stream = PS["Node.Stream"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var stdout = $foreign.process.stdout;           
  var stderr = $foreign.process.stderr;
  var mkEffect = Unsafe_Coerce.unsafeCoerce;
  var cwd = $foreign.process.cwd;
  var argv = mkEffect(function (v) {
      return $foreign.process.argv;
  });
  exports["argv"] = argv;
  exports["cwd"] = cwd;
  exports["stdout"] = stdout;
  exports["stderr"] = stderr;
  exports["exit"] = $foreign.exit;
})(PS["Node.Process"] = PS["Node.Process"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Chanterelle_Internal_Compile = PS["Chanterelle.Internal.Compile"];
  var Chanterelle_Internal_Logging = PS["Chanterelle.Internal.Logging"];
  var Chanterelle_Internal_Types_Compile = PS["Chanterelle.Internal.Types.Compile"];
  var Chanterelle_Internal_Types_Genesis = PS["Chanterelle.Internal.Types.Genesis"];
  var Chanterelle_Internal_Types_Project = PS["Chanterelle.Internal.Types.Project"];
  var Chanterelle_Internal_Utils_Json = PS["Chanterelle.Internal.Utils.Json"];
  var Chanterelle_Internal_Utils_Lazy = PS["Chanterelle.Internal.Utils.Lazy"];
  var Chanterelle_Internal_Utils_Web3 = PS["Chanterelle.Internal.Utils.Web3"];
  var Chanterelle_Project = PS["Chanterelle.Project"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Error_Util = PS["Control.Error.Util"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Parser = PS["Data.Argonaut.Parser"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_CodePoints = PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Exception = PS["Effect.Exception"];
  var Effect_Random = PS["Effect.Random"];
  var Network_Ethereum_Core_BigNumber = PS["Network.Ethereum.Core.BigNumber"];
  var Network_Ethereum_Core_HexString = PS["Network.Ethereum.Core.HexString"];
  var Network_Ethereum_Core_Signatures = PS["Network.Ethereum.Core.Signatures"];
  var Network_Ethereum_Web3 = PS["Network.Ethereum.Web3"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_FS_Aff = PS["Node.FS.Aff"];
  var Node_Path = PS["Node.Path"];
  var Node_Process = PS["Node.Process"];
  var Prelude = PS["Prelude"];                 
  var substituteLibraryAddress = function (hsBytecode) {
      return function (target) {
          var op_push20 = function (addr) {
              return "73" + Network_Ethereum_Core_HexString.unHex(Network_Ethereum_Core_Signatures.unAddress(addr));
          };
          var newPreamble = op_push20(target) + ("30" + "14");
          var bytecode = Network_Ethereum_Core_HexString.unHex(hsBytecode);
          var bcsplit = (function () {
              var s = Data_String_CodePoints.splitAt(46)(bytecode);
              return {
                  preamble: s.before,
                  code: s.after
              };
          })();
          var firstByteIsPush20 = Data_String_CodePoints.take(2)(bcsplit.preamble) === "73";
          var preambleEndsInAddrEq = Data_String_CodeUnits.takeRight(4)(bcsplit.preamble) === "30" + "14";
          var firstBytesAreLibPreamble = firstByteIsPush20 && preambleEndsInAddrEq;
          var ret = (function () {
              if (Data_String_CodePoints.length(bytecode) <= 46) {
                  return new Data_Either.Left("Bytecode too short to be a library");
              };
              if (firstBytesAreLibPreamble === false) {
                  return new Data_Either.Left("Bytecode does not look like a library");
              };
              if (Data_Boolean.otherwise) {
                  return Control_Error_Util.note("Couldn't make a valid HexString")(Network_Ethereum_Core_HexString.mkHexString(newPreamble + bcsplit.code));
              };
              throw new Error("Failed pattern match at Chanterelle.Internal.Genesis line 70, column 11 - line 72, column 140: " + [  ]);
          })();
          return ret;
      };
  };
  var generateGenesis = function (dictMonadAff) {
      return function (v) {
          return function (genesisIn) {
              var moduleForInput = function (v1) {
                  var v2 = Node_Path.parse(v1.filePath);
                  return new Chanterelle_Internal_Types_Project.ChanterelleModule({
                      moduleName: v2.name,
                      solContractName: v2.name,
                      solPath: v1.filePath,
                      jsonPath: "",
                      pursPath: ""
                  });
              };
              var v1 = (function () {
                  var $52 = Data_Array["null"](v.value0.spec.libraries);
                  if ($52) {
                      return {
                          nothingToDo: true,
                          ntdReason: "No libraries specified in project"
                      };
                  };
                  var $53 = Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Chanterelle_Internal_Types_Project.isFixedLibrary)(v.value0.spec.libraries);
                  if ($53) {
                      return {
                          nothingToDo: true,
                          ntdReason: "All libraries are fixed libraries"
                      };
                  };
                  return {
                      nothingToDo: false,
                      ntdReason: "There's stuff to do!"
                  };
              })();
              var wrapLoadFailure = function (dictShow) {
                  return function (dictFunctor) {
                      return function ($128) {
                          return Control_Monad_Except_Trans.withExceptT(dictFunctor)(function ($129) {
                              return Chanterelle_Internal_Types_Genesis.CouldntLoadGenesisBlock.create(genesisIn)(Data_Show.show(dictShow)($129));
                          })(Control_Monad_Except_Trans.ExceptT($128));
                      };
                  };
              };
              var loadGenesisIn = Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(wrapLoadFailure(Effect_Exception.showError)(Effect_Aff.functorAff)(Control_Monad_Error_Class["try"](Effect_Aff.monadErrorAff)(Node_FS_Aff.readTextFile(Node_Encoding.UTF8.value)(genesisIn))))(function (v2) {
                  return wrapLoadFailure(Data_Show.showString)(Effect_Aff.functorAff)(Control_Applicative.pure(Effect_Aff.applicativeAff)(Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Parser.jsonParser(v2))(Data_Argonaut_Decode_Class.decodeJson(Chanterelle_Internal_Types_Genesis.decodeJsonGenesisBlock))));
              });
              return Effect_Aff_Class.liftAff(dictMonadAff)(Control_Monad_Except_Trans.runExceptT((function () {
                  if (v1.nothingToDo) {
                      return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Effect_Aff.monadAff))(new Chanterelle_Internal_Types_Genesis.NothingToDo(v1.ntdReason));
                  };
                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(loadGenesisIn)(function (v2) {
                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Data_Traversable["for"](Control_Monad_Except_Trans.applicativeExceptT(Effect_Aff.monadAff))(Data_Traversable.traversableArray)(v.value0.spec.libraries)(function (v3) {
                          if (v3 instanceof Chanterelle_Internal_Types_Project.FixedLibrary) {
                              return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Effect_Aff.monadAff))(new Chanterelle_Internal_Types_Genesis.CouldntInjectLibrary(v3.value0.name, "is a fixed library without any source code"));
                          };
                          if (v3 instanceof Chanterelle_Internal_Types_Project.FixedLibraryWithNetwork) {
                              var v4 = Chanterelle_Internal_Types_Project.resolveNetworkRefs(v3.value0.networks)(v.value0.spec.networks);
                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))((function () {
                                  var $63 = Data_Array["null"](v4);
                                  if ($63) {
                                      return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Effect_Aff.monadAff))(new Chanterelle_Internal_Types_Genesis.CouldntResolveLibraryNoNetworks(v3.value0.name));
                                  };
                                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Effect_Aff.monadAff))(Data_Unit.unit);
                              })())(function () {
                                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Chanterelle_Internal_Utils_Lazy.firstSuccess(Effect_Aff_Class.monadAffExceptT(Effect_Aff_Class.monadAffAff))(v4)(function (network) {
                                      return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Except_Trans.monadExceptT(Effect_Aff.monadAff)))(Control_Monad_Except_Trans.ExceptT(Chanterelle_Internal_Utils_Web3.resolveCodeForContract(Effect_Aff_Class.monadAffExceptT(Effect_Aff_Class.monadAffAff))(network)(v3.value0.address)))(function (v5) {
                                          return Control_Monad_Except_Trans.except(Control_Monad_Except_Trans.applicativeExceptT(Effect_Aff.monadAff))(substituteLibraryAddress(v5)(v3.value0.address));
                                      }));
                                  }))(function (v5) {
                                      if (v5 instanceof Data_Either.Left) {
                                          return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Effect_Aff.monadAff))(new Chanterelle_Internal_Types_Genesis.CouldntResolveLibrary(v3.value0.name, v5.value0.failures));
                                      };
                                      if (v5 instanceof Data_Either.Right) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Chanterelle_Internal_Logging.log(Control_Monad_Except_Trans.monadEffectExceptT(Effect_Aff.monadEffectAff))(Chanterelle_Internal_Logging.Warn.value)("Failures encountered when resolving library " + (Data_Show.show(Data_Show.showString)(v3.value0.name) + ": ")))(function () {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Data_Foldable.for_(Control_Monad_Except_Trans.applicativeExceptT(Effect_Aff.monadAff))(Data_Foldable.foldableArray)(v5.value0.failures)(function (v6) {
                                                  return Chanterelle_Internal_Logging.log(Control_Monad_Except_Trans.monadEffectExceptT(Effect_Aff.monadEffectAff))(Chanterelle_Internal_Logging.Warn.value)("    via " + (Data_Show.show(Data_Show.showString)(v6.value0.name) + (": " + v6.value1)));
                                              }))(function () {
                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Chanterelle_Internal_Logging.log(Control_Monad_Except_Trans.monadEffectExceptT(Effect_Aff.monadEffectAff))(Chanterelle_Internal_Logging.Info.value)("Successfully resolved library " + (Data_Show.show(Data_Show.showString)(v3.value0.name) + (" via network " + Data_Show.show(Data_Show.showString)(v5.value0.input.name)))))(function () {
                                                      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Effect_Aff.monadAff))({
                                                          name: v3.value0.name,
                                                          address: v3.value0.address,
                                                          injectedBytecode: v5.value0.result
                                                      });
                                                  });
                                              });
                                          });
                                      };
                                      throw new Error("Failed pattern match at Chanterelle.Internal.Genesis line 120, column 13 - line 128, column 67: " + [ v5.constructor.name ]);
                                  });
                              });
                          };
                          if (v3 instanceof Chanterelle_Internal_Types_Project.InjectableLibrary) {
                              if (v3.value0.code instanceof Chanterelle_Internal_Types_Project.InjectableWithBytecode) {
                                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Except_Trans.withExceptT(Effect_Aff.functorAff)(Chanterelle_Internal_Types_Genesis.CouldntInjectLibraryAddress.create(v3.value0.name))(Control_Monad_Except_Trans.except(Effect_Aff.applicativeAff)(substituteLibraryAddress(v3.value0.code.value0)(v3.value0.address))))(function (v4) {
                                      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Effect_Aff.monadAff))({
                                          name: v3.value0.name,
                                          address: v3.value0.address,
                                          injectedBytecode: v4
                                      });
                                  });
                              };
                              if (v3.value0.code instanceof Chanterelle_Internal_Types_Project.InjectableWithSourceCode) {
                                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Except_Trans.withExceptT(Effect_Aff.functorAff)(Chanterelle_Internal_Types_Genesis.CouldntCompileLibrary.create(v3.value0.name))(Data_Function.flip(Chanterelle_Internal_Types_Compile.runCompileMExceptT)(v)((function () {
                                      var v4 = moduleForInput({
                                          name: v3.value0.name,
                                          root: v3.value0.code.value0,
                                          filePath: v3.value0.code.value1
                                      });
                                      return Control_Bind.bind(Chanterelle_Internal_Types_Compile.bindCompileM)(Chanterelle_Internal_Compile.makeSolcInput(Chanterelle_Internal_Types_Compile.monadAffCompileM)(Chanterelle_Internal_Types_Compile.monadAskCompileM)(v3.value0.name)(v3.value0.code.value1))(function (v5) {
                                          return Control_Bind.bind(Chanterelle_Internal_Types_Compile.bindCompileM)(Chanterelle_Internal_Compile.compileModuleWithoutWriting(Chanterelle_Internal_Types_Compile.monadAffCompileM)(Chanterelle_Internal_Types_Compile.monadThrowCompileM)(Chanterelle_Internal_Types_Compile.monadAskCompileM)(v4)(v5))(function (v6) {
                                              return Control_Bind.bind(Chanterelle_Internal_Types_Compile.bindCompileM)(Chanterelle_Internal_Compile.decodeContract(Chanterelle_Internal_Types_Compile.monadEffCompileM)(Chanterelle_Internal_Types_Compile.monadThrowCompileM)(v3.value0.name)(v6))(function (v7) {
                                                  return Control_Bind.bind(Chanterelle_Internal_Types_Compile.bindCompileM)(Chanterelle_Internal_Compile.resolveContractMainModule(Chanterelle_Internal_Types_Compile.monadAffCompileM)(Chanterelle_Internal_Types_Compile.monadThrowCompileM)(v3.value0.code.value1)(v7)(v4.value0.solContractName))(function (v8) {
                                                      return Control_Applicative.pure(Chanterelle_Internal_Types_Compile.applicativeCompileM)(v8.deployedBytecode);
                                                  });
                                              });
                                          });
                                      });
                                  })())))(function (v4) {
                                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Except_Trans.withExceptT(Effect_Aff.functorAff)(function ($130) {
                                          return Chanterelle_Internal_Types_Genesis.CouldntCompileLibrary.create(v3.value0.name)(Chanterelle_Internal_Types_Compile.UnexpectedSolcOutput.create($130));
                                      })(Control_Monad_Except_Trans.except(Effect_Aff.applicativeAff)(Control_Error_Util.note("Solc somehow gave us invalid hex")(Network_Ethereum_Core_HexString.mkHexString(v4)))))(function (v5) {
                                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Except_Trans.withExceptT(Effect_Aff.functorAff)(Chanterelle_Internal_Types_Genesis.CouldntInjectLibraryAddress.create(v3.value0.name))(Control_Monad_Except_Trans.except(Effect_Aff.applicativeAff)(substituteLibraryAddress(v5)(v3.value0.address))))(function (v6) {
                                              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Effect_Aff.monadAff))({
                                                  name: v3.value0.name,
                                                  address: v3.value0.address,
                                                  injectedBytecode: v6
                                              });
                                          });
                                      });
                                  });
                              };
                              throw new Error("Failed pattern match at Chanterelle.Internal.Genesis line 129, column 54 - line 144, column 57: " + [ v3.value0.code.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Chanterelle.Internal.Genesis line 109, column 29 - line 144, column 57: " + [ v3.constructor.name ]);
                      }))(function (v3) {
                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Data_Function.flip(Control_Monad_State_Trans.execStateT(Control_Monad_Except_Trans.functorExceptT(Effect_Aff.functorAff)))(v2)(Data_Traversable["for"](Control_Monad_State_Trans.applicativeStateT(Control_Monad_Except_Trans.monadExceptT(Effect_Aff.monadAff)))(Data_Traversable.traversableArray)(v3)(function (v4) {
                              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Control_Monad_Except_Trans.monadExceptT(Effect_Aff.monadAff)))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Control_Monad_Except_Trans.monadExceptT(Effect_Aff.monadAff))))(function (v5) {
                                  return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Control_Monad_Except_Trans.monadExceptT(Effect_Aff.monadAff)))((function () {
                                      var v6 = Chanterelle_Internal_Types_Genesis.lookupGenesisAllocs(v4.address)(v5.allocs);
                                      if (v6 instanceof Data_Maybe.Nothing) {
                                          return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Control_Monad_Except_Trans.monadExceptT(Effect_Aff.monadAff)))(Chanterelle_Internal_Types_Genesis.insertGenesisAllocs(v4.address)({
                                              code: new Data_Maybe.Just(v4.injectedBytecode),
                                              storage: Data_Maybe.Nothing.value,
                                              balance: Network_Ethereum_Core_BigNumber.embed(Network_Ethereum_Core_BigNumber["embedInt'"])(0)
                                          })(v5.allocs));
                                      };
                                      if (v6 instanceof Data_Maybe.Just) {
                                          var $104 = Data_Eq.eq(Data_Maybe.eqMaybe(Network_Ethereum_Core_HexString.hexStringEq))(v6.value0.code)(new Data_Maybe.Just(v4.injectedBytecode));
                                          if ($104) {
                                              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Control_Monad_Except_Trans.monadExceptT(Effect_Aff.monadAff)))(v5.allocs);
                                          };
                                          return Control_Monad_Error_Class.throwError(Control_Monad_State_Trans.monadThrowStateT(Control_Monad_Except_Trans.monadThrowExceptT(Effect_Aff.monadAff)))(Chanterelle_Internal_Types_Genesis.CouldntInjectLibraryAddress.create(v4.name)("Genesis block already contains an entry for address " + (Data_Show.show(Network_Ethereum_Core_Signatures.addressShow)(v4.address) + " with different bytecode")));
                                      };
                                      throw new Error("Failed pattern match at Chanterelle.Internal.Genesis line 147, column 22 - line 152, column 9: " + [ v6.constructor.name ]);
                                  })())(function (v6) {
                                      return Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(Control_Monad_Except_Trans.monadExceptT(Effect_Aff.monadAff)))({
                                          config: v5.config,
                                          allocs: v6,
                                          nonce: v5.nonce,
                                          coinbase: v5.coinbase,
                                          extraData: v5.extraData,
                                          gasLimit: v5.gasLimit,
                                          mixHash: v5.mixHash,
                                          parentHash: v5.parentHash,
                                          timestamp: v5.timestamp,
                                          difficulty: v5.difficulty
                                      });
                                  });
                              });
                          })))(function (v4) {
                              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Effect_Aff.monadAff))(v4);
                          });
                      });
                  });
              })()));
          };
      };
  };
  exports["substituteLibraryAddress"] = substituteLibraryAddress;
  exports["generateGenesis"] = generateGenesis;
})(PS["Chanterelle.Internal.Genesis"] = PS["Chanterelle.Internal.Genesis"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Chanterelle_Deploy = PS["Chanterelle.Deploy"];
  var Chanterelle_Internal_Codegen = PS["Chanterelle.Internal.Codegen"];
  var Chanterelle_Internal_Compile = PS["Chanterelle.Internal.Compile"];
  var Chanterelle_Internal_Genesis = PS["Chanterelle.Internal.Genesis"];
  var Chanterelle_Internal_Logging = PS["Chanterelle.Internal.Logging"];
  var Chanterelle_Internal_Types = PS["Chanterelle.Internal.Types"];
  var Chanterelle_Internal_Types_Compile = PS["Chanterelle.Internal.Types.Compile"];
  var Chanterelle_Internal_Types_Genesis = PS["Chanterelle.Internal.Types.Genesis"];
  var Chanterelle_Internal_Types_Project = PS["Chanterelle.Internal.Types.Project"];
  var Chanterelle_Internal_Utils = PS["Chanterelle.Internal.Utils"];
  var Chanterelle_Internal_Utils_Json = PS["Chanterelle.Internal.Utils.Json"];
  var Chanterelle_Project = PS["Chanterelle.Project"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Exception = PS["Effect.Exception"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_FS_Aff = PS["Node.FS.Aff"];
  var Node_Path = PS["Node.Path"];
  var Node_Process = PS["Node.Process"];
  var Prelude = PS["Prelude"];                 
  var SelectPS = (function () {
      function SelectPS(value0) {
          this.value0 = value0;
      };
      SelectPS.create = function (value0) {
          return new SelectPS(value0);
      };
      return SelectPS;
  })();
  var SelectCLI = (function () {
      function SelectCLI(value0) {
          this.value0 = value0;
      };
      SelectCLI.create = function (value0) {
          return new SelectCLI(value0);
      };
      return SelectCLI;
  })();
  var GenesisOptions = (function () {
      function GenesisOptions(value0) {
          this.value0 = value0;
      };
      GenesisOptions.create = function (value0) {
          return new GenesisOptions(value0);
      };
      return GenesisOptions;
  })();
  var DeployOptions = (function () {
      function DeployOptions(value0) {
          this.value0 = value0;
      };
      DeployOptions.create = function (value0) {
          return new DeployOptions(value0);
      };
      return DeployOptions;
  })();
  var CommonOpts = (function () {
      function CommonOpts(value0) {
          this.value0 = value0;
      };
      CommonOpts.create = function (value0) {
          return new CommonOpts(value0);
      };
      return CommonOpts;
  })();
  var Build = (function () {
      function Build() {

      };
      Build.value = new Build();
      return Build;
  })();
  var Compile = (function () {
      function Compile() {

      };
      Compile.value = new Compile();
      return Compile;
  })();
  var Codegen = (function () {
      function Codegen() {

      };
      Codegen.value = new Codegen();
      return Codegen;
  })();
  var Genesis = (function () {
      function Genesis(value0) {
          this.value0 = value0;
      };
      Genesis.create = function (value0) {
          return new Genesis(value0);
      };
      return Genesis;
  })();
  var Deploy = (function () {
      function Deploy(value0) {
          this.value0 = value0;
      };
      Deploy.create = function (value0) {
          return new Deploy(value0);
      };
      return Deploy;
  })();
  var Args$prime = (function () {
      function Args$prime(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Args$prime.create = function (value0) {
          return function (value1) {
              return new Args$prime(value0, value1);
          };
      };
      return Args$prime;
  })();
  var traverseArgs = function (dictApplicative) {
      return function (f) {
          return function (v) {
              return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Args$prime.create(v.value0))((function () {
                  if (v.value1 instanceof Build) {
                      return Control_Applicative.pure(dictApplicative)(Build.value);
                  };
                  if (v.value1 instanceof Compile) {
                      return Control_Applicative.pure(dictApplicative)(Compile.value);
                  };
                  if (v.value1 instanceof Codegen) {
                      return Control_Applicative.pure(dictApplicative)(Codegen.value);
                  };
                  if (v.value1 instanceof Genesis) {
                      return Control_Applicative.pure(dictApplicative)(new Genesis(v.value1.value0));
                  };
                  if (v.value1 instanceof Deploy) {
                      return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Deploy.create)(f(v.value1.value0));
                  };
                  throw new Error("Failed pattern match at Chanterelle line 57, column 44 - line 62, column 37: " + [ v.value1.constructor.name ]);
              })());
          };
      };
  }; 
  var runCommand = function (project) {
      var doGenesis = function (v) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Chanterelle_Internal_Genesis.generateGenesis(Effect_Aff_Class.monadAffAff)(project)(v.value0.input))(function (v1) {
              if (v1 instanceof Data_Either.Left) {
                  return Chanterelle_Internal_Logging.logGenesisGenerationError(Effect_Aff.monadEffectAff)(v1.value0);
              };
              if (v1 instanceof Data_Either.Right) {
                  var strungGb = Chanterelle_Internal_Utils_Json.jsonStringifyWithSpaces(4)(Data_Argonaut_Encode_Class.encodeJson(Chanterelle_Internal_Types_Genesis.encodeJsonGenesisBlock)(v1.value0));
                  return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Error_Class["try"](Effect_Aff.monadErrorAff)(Node_FS_Aff.writeTextFile(Node_Encoding.UTF8.value)(v.value0.output)(strungGb)))(function (v2) {
                      if (v2 instanceof Data_Either.Left) {
                          return Chanterelle_Internal_Logging.log(Effect_Aff.monadEffectAff)(Chanterelle_Internal_Logging["Error"].value)("Couldn't write genesis block to " + (Data_Show.show(Data_Show.showString)(v.value0.output) + (": " + Data_Show.show(Effect_Exception.showError)(v2.value0))));
                      };
                      if (v2 instanceof Data_Either.Right) {
                          return Chanterelle_Internal_Logging.log(Effect_Aff.monadEffectAff)(Chanterelle_Internal_Logging.Info.value)("Successfully wrote generated genesis block to " + Data_Show.show(Data_Show.showString)(v.value0.output));
                      };
                      throw new Error("Failed pattern match at Chanterelle line 114, column 54 - line 116, column 91: " + [ v2.constructor.name ]);
                  });
              };
              throw new Error("Failed pattern match at Chanterelle line 110, column 83 - line 116, column 91: " + [ v1.constructor.name ]);
          });
      };
      var doDeploy = function (v) {
          return Chanterelle_Deploy.deploy(v.value0.nodeURL)(v.value0.timeout)(v.value0.script.value0);
      };
      var doCompile = Control_Bind.bind(Effect_Aff.bindAff)(Chanterelle_Internal_Types_Compile.runCompileM(Chanterelle_Internal_Compile.compile(Chanterelle_Internal_Types_Compile.monadAffCompileM)(Chanterelle_Internal_Types_Compile.monadThrowCompileM)(Chanterelle_Internal_Types_Compile.monadAskCompileM))(project))(function (v) {
          if (v instanceof Data_Either.Left) {
              return Chanterelle_Internal_Logging.logCompileError(Effect_Aff.monadEffectAff)(v.value0);
          };
          if (v instanceof Data_Either.Right) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit);
          };
          throw new Error("Failed pattern match at Chanterelle line 104, column 61 - line 106, column 27: " + [ v.constructor.name ]);
      });
      var doCodegen = Control_Bind.bind(Effect_Aff.bindAff)(Chanterelle_Internal_Types_Compile.runCompileM(Chanterelle_Internal_Codegen.generatePS(Chanterelle_Internal_Types_Compile.monadAffCompileM)(Chanterelle_Internal_Types_Compile.monadThrowCompileM)(Chanterelle_Internal_Types_Compile.monadAskCompileM))(project))(function (v) {
          if (v instanceof Data_Either.Left) {
              return Chanterelle_Internal_Logging.logCompileError(Effect_Aff.monadEffectAff)(v.value0);
          };
          if (v instanceof Data_Either.Right) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit);
          };
          throw new Error("Failed pattern match at Chanterelle line 107, column 64 - line 109, column 27: " + [ v.constructor.name ]);
      });
      var doClassicBuild = Control_Apply.applySecond(Effect_Aff.applyAff)(doCompile)(doCodegen);
      return function (v) {
          if (v instanceof Build) {
              return Control_Apply.applySecond(Effect_Aff.applyAff)(doCompile)(doCodegen);
          };
          if (v instanceof Compile) {
              return doCompile;
          };
          if (v instanceof Codegen) {
              return doCodegen;
          };
          if (v instanceof Genesis) {
              return doGenesis(v.value0);
          };
          if (v instanceof Deploy) {
              return doDeploy(v.value0);
          };
          throw new Error("Failed pattern match at Chanterelle line 94, column 22 - line 99, column 33: " + [ v.constructor.name ]);
      };
  };
  var chanterelle = function (v) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Node_Process.cwd))(function (v1) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Chanterelle_Internal_Logging.setLogLevel(Chanterelle_Internal_Logging.readLogLevel(v.value0.value0.optVerbosity))))(function () {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Node_Path.resolve([ v1 ])(v.value0.value0.rootPath)))(function (v2) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Error_Class["try"](Effect_Aff.monadErrorAff)(Chanterelle_Project.loadProject(Effect_Aff_Class.monadAffAff)(Effect_Aff.monadThrowAff)(v2)))(function (v3) {
                      if (v3 instanceof Data_Either.Left) {
                          return Chanterelle_Internal_Logging.log(Effect_Aff.monadEffectAff)(Chanterelle_Internal_Logging["Error"].value)("Couldn't parse chanterelle.json: " + Data_Show.show(Effect_Exception.showError)(v3.value0));
                      };
                      if (v3 instanceof Data_Either.Right) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Chanterelle_Internal_Logging.log(Effect_Aff.monadEffectAff)(Chanterelle_Internal_Logging.Info.value)("Loaded chanterelle.json successfully!"))(function () {
                              return runCommand(v3.value0)(v.value1);
                          });
                      };
                      throw new Error("Failed pattern match at Chanterelle line 87, column 3 - line 91, column 29: " + [ v3.constructor.name ]);
                  });
              });
          });
      });
  };
  exports["SelectCLI"] = SelectCLI;
  exports["SelectPS"] = SelectPS;
  exports["Args'"] = Args$prime;
  exports["CommonOpts"] = CommonOpts;
  exports["Build"] = Build;
  exports["Compile"] = Compile;
  exports["Codegen"] = Codegen;
  exports["Genesis"] = Genesis;
  exports["Deploy"] = Deploy;
  exports["traverseArgs"] = traverseArgs;
  exports["GenesisOptions"] = GenesisOptions;
  exports["DeployOptions"] = DeployOptions;
  exports["chanterelle"] = chanterelle;
  exports["runCommand"] = runCommand;
})(PS["Chanterelle"] = PS["Chanterelle"] || {});
(function(exports) {exports.loadDeployMFromScriptPath = function (filePath) {
    return function () {
      return require(filePath).deploy;
    };
  };
})(PS["ChanterelleMain"] = PS["ChanterelleMain"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];                 
  var Success = (function () {
      function Success() {

      };
      Success.value = new Success();
      return Success;
  })();
  var $$Error = (function () {
      function $$Error() {

      };
      $$Error.value = new $$Error();
      return $$Error;
  })();
  var MisuseOfShellBuiltins = (function () {
      function MisuseOfShellBuiltins() {

      };
      MisuseOfShellBuiltins.value = new MisuseOfShellBuiltins();
      return MisuseOfShellBuiltins;
  })();
  var CLIUsageError = (function () {
      function CLIUsageError() {

      };
      CLIUsageError.value = new CLIUsageError();
      return CLIUsageError;
  })();
  var DataFormatError = (function () {
      function DataFormatError() {

      };
      DataFormatError.value = new DataFormatError();
      return DataFormatError;
  })();
  var CannotOpenInput = (function () {
      function CannotOpenInput() {

      };
      CannotOpenInput.value = new CannotOpenInput();
      return CannotOpenInput;
  })();
  var AddresseeUnknown = (function () {
      function AddresseeUnknown() {

      };
      AddresseeUnknown.value = new AddresseeUnknown();
      return AddresseeUnknown;
  })();
  var HostNameUnknown = (function () {
      function HostNameUnknown() {

      };
      HostNameUnknown.value = new HostNameUnknown();
      return HostNameUnknown;
  })();
  var ServiceUnavailable = (function () {
      function ServiceUnavailable() {

      };
      ServiceUnavailable.value = new ServiceUnavailable();
      return ServiceUnavailable;
  })();
  var InternalSoftwareError = (function () {
      function InternalSoftwareError() {

      };
      InternalSoftwareError.value = new InternalSoftwareError();
      return InternalSoftwareError;
  })();
  var SystemError = (function () {
      function SystemError() {

      };
      SystemError.value = new SystemError();
      return SystemError;
  })();
  var CriticalOSFileMissing = (function () {
      function CriticalOSFileMissing() {

      };
      CriticalOSFileMissing.value = new CriticalOSFileMissing();
      return CriticalOSFileMissing;
  })();
  var CannotCreateOutputFile = (function () {
      function CannotCreateOutputFile() {

      };
      CannotCreateOutputFile.value = new CannotCreateOutputFile();
      return CannotCreateOutputFile;
  })();
  var IOError = (function () {
      function IOError() {

      };
      IOError.value = new IOError();
      return IOError;
  })();
  var TemporaryFailure = (function () {
      function TemporaryFailure() {

      };
      TemporaryFailure.value = new TemporaryFailure();
      return TemporaryFailure;
  })();
  var RemoteError = (function () {
      function RemoteError() {

      };
      RemoteError.value = new RemoteError();
      return RemoteError;
  })();
  var PermissionDenied = (function () {
      function PermissionDenied() {

      };
      PermissionDenied.value = new PermissionDenied();
      return PermissionDenied;
  })();
  var ConfigurationError = (function () {
      function ConfigurationError() {

      };
      ConfigurationError.value = new ConfigurationError();
      return ConfigurationError;
  })();
  var CannotExecute = (function () {
      function CannotExecute() {

      };
      CannotExecute.value = new CannotExecute();
      return CannotExecute;
  })();
  var CommandNotFound = (function () {
      function CommandNotFound() {

      };
      CommandNotFound.value = new CommandNotFound();
      return CommandNotFound;
  })();
  var InvalidExitArgument = (function () {
      function InvalidExitArgument() {

      };
      InvalidExitArgument.value = new InvalidExitArgument();
      return InvalidExitArgument;
  })();
  var SIGHUP = (function () {
      function SIGHUP() {

      };
      SIGHUP.value = new SIGHUP();
      return SIGHUP;
  })();
  var SIGINT = (function () {
      function SIGINT() {

      };
      SIGINT.value = new SIGINT();
      return SIGINT;
  })();
  var SIGQUIT = (function () {
      function SIGQUIT() {

      };
      SIGQUIT.value = new SIGQUIT();
      return SIGQUIT;
  })();
  var SIGILL = (function () {
      function SIGILL() {

      };
      SIGILL.value = new SIGILL();
      return SIGILL;
  })();
  var SIGABRT = (function () {
      function SIGABRT() {

      };
      SIGABRT.value = new SIGABRT();
      return SIGABRT;
  })();
  var SIGFPE = (function () {
      function SIGFPE() {

      };
      SIGFPE.value = new SIGFPE();
      return SIGFPE;
  })();
  var SIGKILL = (function () {
      function SIGKILL() {

      };
      SIGKILL.value = new SIGKILL();
      return SIGKILL;
  })();
  var SIGSEGV = (function () {
      function SIGSEGV() {

      };
      SIGSEGV.value = new SIGSEGV();
      return SIGSEGV;
  })();
  var SIGPIPE = (function () {
      function SIGPIPE() {

      };
      SIGPIPE.value = new SIGPIPE();
      return SIGPIPE;
  })();
  var SIGALRM = (function () {
      function SIGALRM() {

      };
      SIGALRM.value = new SIGALRM();
      return SIGALRM;
  })();
  var SIGTERM = (function () {
      function SIGTERM() {

      };
      SIGTERM.value = new SIGTERM();
      return SIGTERM;
  })();
  var eqExitCode = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Success && y instanceof Success) {
              return true;
          };
          if (x instanceof $$Error && y instanceof $$Error) {
              return true;
          };
          if (x instanceof MisuseOfShellBuiltins && y instanceof MisuseOfShellBuiltins) {
              return true;
          };
          if (x instanceof CLIUsageError && y instanceof CLIUsageError) {
              return true;
          };
          if (x instanceof DataFormatError && y instanceof DataFormatError) {
              return true;
          };
          if (x instanceof CannotOpenInput && y instanceof CannotOpenInput) {
              return true;
          };
          if (x instanceof AddresseeUnknown && y instanceof AddresseeUnknown) {
              return true;
          };
          if (x instanceof HostNameUnknown && y instanceof HostNameUnknown) {
              return true;
          };
          if (x instanceof ServiceUnavailable && y instanceof ServiceUnavailable) {
              return true;
          };
          if (x instanceof InternalSoftwareError && y instanceof InternalSoftwareError) {
              return true;
          };
          if (x instanceof SystemError && y instanceof SystemError) {
              return true;
          };
          if (x instanceof CriticalOSFileMissing && y instanceof CriticalOSFileMissing) {
              return true;
          };
          if (x instanceof CannotCreateOutputFile && y instanceof CannotCreateOutputFile) {
              return true;
          };
          if (x instanceof IOError && y instanceof IOError) {
              return true;
          };
          if (x instanceof TemporaryFailure && y instanceof TemporaryFailure) {
              return true;
          };
          if (x instanceof RemoteError && y instanceof RemoteError) {
              return true;
          };
          if (x instanceof PermissionDenied && y instanceof PermissionDenied) {
              return true;
          };
          if (x instanceof ConfigurationError && y instanceof ConfigurationError) {
              return true;
          };
          if (x instanceof CannotExecute && y instanceof CannotExecute) {
              return true;
          };
          if (x instanceof CommandNotFound && y instanceof CommandNotFound) {
              return true;
          };
          if (x instanceof InvalidExitArgument && y instanceof InvalidExitArgument) {
              return true;
          };
          if (x instanceof SIGHUP && y instanceof SIGHUP) {
              return true;
          };
          if (x instanceof SIGINT && y instanceof SIGINT) {
              return true;
          };
          if (x instanceof SIGQUIT && y instanceof SIGQUIT) {
              return true;
          };
          if (x instanceof SIGILL && y instanceof SIGILL) {
              return true;
          };
          if (x instanceof SIGABRT && y instanceof SIGABRT) {
              return true;
          };
          if (x instanceof SIGFPE && y instanceof SIGFPE) {
              return true;
          };
          if (x instanceof SIGKILL && y instanceof SIGKILL) {
              return true;
          };
          if (x instanceof SIGSEGV && y instanceof SIGSEGV) {
              return true;
          };
          if (x instanceof SIGPIPE && y instanceof SIGPIPE) {
              return true;
          };
          if (x instanceof SIGALRM && y instanceof SIGALRM) {
              return true;
          };
          if (x instanceof SIGTERM && y instanceof SIGTERM) {
              return true;
          };
          return false;
      };
  });
  var ordExitCode = new Data_Ord.Ord(function () {
      return eqExitCode;
  }, function (x) {
      return function (y) {
          if (x instanceof Success && y instanceof Success) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Success) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Success) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof $$Error && y instanceof $$Error) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof $$Error) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof $$Error) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof MisuseOfShellBuiltins && y instanceof MisuseOfShellBuiltins) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof MisuseOfShellBuiltins) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof MisuseOfShellBuiltins) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof CLIUsageError && y instanceof CLIUsageError) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof CLIUsageError) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof CLIUsageError) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof DataFormatError && y instanceof DataFormatError) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof DataFormatError) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof DataFormatError) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof CannotOpenInput && y instanceof CannotOpenInput) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof CannotOpenInput) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof CannotOpenInput) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof AddresseeUnknown && y instanceof AddresseeUnknown) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof AddresseeUnknown) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof AddresseeUnknown) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof HostNameUnknown && y instanceof HostNameUnknown) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof HostNameUnknown) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof HostNameUnknown) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof ServiceUnavailable && y instanceof ServiceUnavailable) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof ServiceUnavailable) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof ServiceUnavailable) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof InternalSoftwareError && y instanceof InternalSoftwareError) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof InternalSoftwareError) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof InternalSoftwareError) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof SystemError && y instanceof SystemError) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof SystemError) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof SystemError) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof CriticalOSFileMissing && y instanceof CriticalOSFileMissing) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof CriticalOSFileMissing) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof CriticalOSFileMissing) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof CannotCreateOutputFile && y instanceof CannotCreateOutputFile) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof CannotCreateOutputFile) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof CannotCreateOutputFile) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof IOError && y instanceof IOError) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof IOError) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof IOError) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof TemporaryFailure && y instanceof TemporaryFailure) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof TemporaryFailure) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof TemporaryFailure) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof RemoteError && y instanceof RemoteError) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof RemoteError) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof RemoteError) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof PermissionDenied && y instanceof PermissionDenied) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof PermissionDenied) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof PermissionDenied) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof ConfigurationError && y instanceof ConfigurationError) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof ConfigurationError) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof ConfigurationError) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof CannotExecute && y instanceof CannotExecute) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof CannotExecute) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof CannotExecute) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof CommandNotFound && y instanceof CommandNotFound) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof CommandNotFound) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof CommandNotFound) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof InvalidExitArgument && y instanceof InvalidExitArgument) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof InvalidExitArgument) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof InvalidExitArgument) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof SIGHUP && y instanceof SIGHUP) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof SIGHUP) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof SIGHUP) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof SIGINT && y instanceof SIGINT) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof SIGINT) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof SIGINT) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof SIGQUIT && y instanceof SIGQUIT) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof SIGQUIT) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof SIGQUIT) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof SIGILL && y instanceof SIGILL) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof SIGILL) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof SIGILL) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof SIGABRT && y instanceof SIGABRT) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof SIGABRT) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof SIGABRT) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof SIGFPE && y instanceof SIGFPE) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof SIGFPE) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof SIGFPE) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof SIGKILL && y instanceof SIGKILL) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof SIGKILL) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof SIGKILL) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof SIGSEGV && y instanceof SIGSEGV) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof SIGSEGV) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof SIGSEGV) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof SIGPIPE && y instanceof SIGPIPE) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof SIGPIPE) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof SIGPIPE) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof SIGALRM && y instanceof SIGALRM) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof SIGALRM) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof SIGALRM) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof SIGTERM && y instanceof SIGTERM) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at ExitCodes line 47, column 8 - line 47, column 44: " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var enumExitCode = new Data_Enum.Enum(function () {
      return ordExitCode;
  }, function (v) {
      if (v instanceof Success) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof $$Error) {
          return new Data_Maybe.Just(Success.value);
      };
      if (v instanceof MisuseOfShellBuiltins) {
          return new Data_Maybe.Just($$Error.value);
      };
      if (v instanceof CLIUsageError) {
          return new Data_Maybe.Just(MisuseOfShellBuiltins.value);
      };
      if (v instanceof DataFormatError) {
          return new Data_Maybe.Just(CLIUsageError.value);
      };
      if (v instanceof CannotOpenInput) {
          return new Data_Maybe.Just(DataFormatError.value);
      };
      if (v instanceof AddresseeUnknown) {
          return new Data_Maybe.Just(CannotOpenInput.value);
      };
      if (v instanceof HostNameUnknown) {
          return new Data_Maybe.Just(AddresseeUnknown.value);
      };
      if (v instanceof ServiceUnavailable) {
          return new Data_Maybe.Just(HostNameUnknown.value);
      };
      if (v instanceof InternalSoftwareError) {
          return new Data_Maybe.Just(ServiceUnavailable.value);
      };
      if (v instanceof SystemError) {
          return new Data_Maybe.Just(InternalSoftwareError.value);
      };
      if (v instanceof CriticalOSFileMissing) {
          return new Data_Maybe.Just(SystemError.value);
      };
      if (v instanceof CannotCreateOutputFile) {
          return new Data_Maybe.Just(CriticalOSFileMissing.value);
      };
      if (v instanceof IOError) {
          return new Data_Maybe.Just(CannotCreateOutputFile.value);
      };
      if (v instanceof TemporaryFailure) {
          return new Data_Maybe.Just(IOError.value);
      };
      if (v instanceof RemoteError) {
          return new Data_Maybe.Just(TemporaryFailure.value);
      };
      if (v instanceof PermissionDenied) {
          return new Data_Maybe.Just(RemoteError.value);
      };
      if (v instanceof ConfigurationError) {
          return new Data_Maybe.Just(PermissionDenied.value);
      };
      if (v instanceof CannotExecute) {
          return new Data_Maybe.Just(ConfigurationError.value);
      };
      if (v instanceof CommandNotFound) {
          return new Data_Maybe.Just(CannotExecute.value);
      };
      if (v instanceof InvalidExitArgument) {
          return new Data_Maybe.Just(CommandNotFound.value);
      };
      if (v instanceof SIGHUP) {
          return new Data_Maybe.Just(InvalidExitArgument.value);
      };
      if (v instanceof SIGINT) {
          return new Data_Maybe.Just(SIGHUP.value);
      };
      if (v instanceof SIGQUIT) {
          return new Data_Maybe.Just(SIGINT.value);
      };
      if (v instanceof SIGILL) {
          return new Data_Maybe.Just(SIGQUIT.value);
      };
      if (v instanceof SIGABRT) {
          return new Data_Maybe.Just(SIGILL.value);
      };
      if (v instanceof SIGFPE) {
          return new Data_Maybe.Just(SIGABRT.value);
      };
      if (v instanceof SIGKILL) {
          return new Data_Maybe.Just(SIGFPE.value);
      };
      if (v instanceof SIGSEGV) {
          return new Data_Maybe.Just(SIGKILL.value);
      };
      if (v instanceof SIGPIPE) {
          return new Data_Maybe.Just(SIGSEGV.value);
      };
      if (v instanceof SIGALRM) {
          return new Data_Maybe.Just(SIGPIPE.value);
      };
      if (v instanceof SIGTERM) {
          return new Data_Maybe.Just(SIGALRM.value);
      };
      throw new Error("Failed pattern match at ExitCodes line 87, column 1 - line 87, column 39: " + [ v.constructor.name ]);
  }, function (v) {
      if (v instanceof Success) {
          return new Data_Maybe.Just($$Error.value);
      };
      if (v instanceof $$Error) {
          return new Data_Maybe.Just(MisuseOfShellBuiltins.value);
      };
      if (v instanceof MisuseOfShellBuiltins) {
          return new Data_Maybe.Just(CLIUsageError.value);
      };
      if (v instanceof CLIUsageError) {
          return new Data_Maybe.Just(DataFormatError.value);
      };
      if (v instanceof DataFormatError) {
          return new Data_Maybe.Just(CannotOpenInput.value);
      };
      if (v instanceof CannotOpenInput) {
          return new Data_Maybe.Just(AddresseeUnknown.value);
      };
      if (v instanceof AddresseeUnknown) {
          return new Data_Maybe.Just(HostNameUnknown.value);
      };
      if (v instanceof HostNameUnknown) {
          return new Data_Maybe.Just(ServiceUnavailable.value);
      };
      if (v instanceof ServiceUnavailable) {
          return new Data_Maybe.Just(InternalSoftwareError.value);
      };
      if (v instanceof InternalSoftwareError) {
          return new Data_Maybe.Just(SystemError.value);
      };
      if (v instanceof SystemError) {
          return new Data_Maybe.Just(CriticalOSFileMissing.value);
      };
      if (v instanceof CriticalOSFileMissing) {
          return new Data_Maybe.Just(CannotCreateOutputFile.value);
      };
      if (v instanceof CannotCreateOutputFile) {
          return new Data_Maybe.Just(IOError.value);
      };
      if (v instanceof IOError) {
          return new Data_Maybe.Just(TemporaryFailure.value);
      };
      if (v instanceof TemporaryFailure) {
          return new Data_Maybe.Just(RemoteError.value);
      };
      if (v instanceof RemoteError) {
          return new Data_Maybe.Just(PermissionDenied.value);
      };
      if (v instanceof PermissionDenied) {
          return new Data_Maybe.Just(ConfigurationError.value);
      };
      if (v instanceof ConfigurationError) {
          return new Data_Maybe.Just(CannotExecute.value);
      };
      if (v instanceof CannotExecute) {
          return new Data_Maybe.Just(CommandNotFound.value);
      };
      if (v instanceof CommandNotFound) {
          return new Data_Maybe.Just(InvalidExitArgument.value);
      };
      if (v instanceof InvalidExitArgument) {
          return new Data_Maybe.Just(SIGHUP.value);
      };
      if (v instanceof SIGHUP) {
          return new Data_Maybe.Just(SIGINT.value);
      };
      if (v instanceof SIGINT) {
          return new Data_Maybe.Just(SIGQUIT.value);
      };
      if (v instanceof SIGQUIT) {
          return new Data_Maybe.Just(SIGILL.value);
      };
      if (v instanceof SIGILL) {
          return new Data_Maybe.Just(SIGABRT.value);
      };
      if (v instanceof SIGABRT) {
          return new Data_Maybe.Just(SIGFPE.value);
      };
      if (v instanceof SIGFPE) {
          return new Data_Maybe.Just(SIGKILL.value);
      };
      if (v instanceof SIGKILL) {
          return new Data_Maybe.Just(SIGSEGV.value);
      };
      if (v instanceof SIGSEGV) {
          return new Data_Maybe.Just(SIGPIPE.value);
      };
      if (v instanceof SIGPIPE) {
          return new Data_Maybe.Just(SIGALRM.value);
      };
      if (v instanceof SIGALRM) {
          return new Data_Maybe.Just(SIGTERM.value);
      };
      if (v instanceof SIGTERM) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at ExitCodes line 87, column 1 - line 87, column 39: " + [ v.constructor.name ]);
  });
  var boundedExitCode = new Data_Bounded.Bounded(function () {
      return ordExitCode;
  }, Success.value, SIGTERM.value);
  var boundedEnumExitCode = new Data_Enum.BoundedEnum(function () {
      return boundedExitCode;
  }, function () {
      return enumExitCode;
  }, 32, function (v) {
      if (v instanceof Success) {
          return 0;
      };
      if (v instanceof $$Error) {
          return 1;
      };
      if (v instanceof MisuseOfShellBuiltins) {
          return 2;
      };
      if (v instanceof CLIUsageError) {
          return 64;
      };
      if (v instanceof DataFormatError) {
          return 65;
      };
      if (v instanceof CannotOpenInput) {
          return 66;
      };
      if (v instanceof AddresseeUnknown) {
          return 67;
      };
      if (v instanceof HostNameUnknown) {
          return 68;
      };
      if (v instanceof ServiceUnavailable) {
          return 69;
      };
      if (v instanceof InternalSoftwareError) {
          return 70;
      };
      if (v instanceof SystemError) {
          return 71;
      };
      if (v instanceof CriticalOSFileMissing) {
          return 72;
      };
      if (v instanceof CannotCreateOutputFile) {
          return 73;
      };
      if (v instanceof IOError) {
          return 74;
      };
      if (v instanceof TemporaryFailure) {
          return 75;
      };
      if (v instanceof RemoteError) {
          return 76;
      };
      if (v instanceof PermissionDenied) {
          return 77;
      };
      if (v instanceof ConfigurationError) {
          return 78;
      };
      if (v instanceof CannotExecute) {
          return 126;
      };
      if (v instanceof CommandNotFound) {
          return 127;
      };
      if (v instanceof InvalidExitArgument) {
          return 128;
      };
      if (v instanceof SIGHUP) {
          return 128 + 1 | 0;
      };
      if (v instanceof SIGINT) {
          return 128 + 2 | 0;
      };
      if (v instanceof SIGQUIT) {
          return 128 + 3 | 0;
      };
      if (v instanceof SIGILL) {
          return 128 + 4 | 0;
      };
      if (v instanceof SIGABRT) {
          return 128 + 6 | 0;
      };
      if (v instanceof SIGFPE) {
          return 128 + 8 | 0;
      };
      if (v instanceof SIGKILL) {
          return 128 + 9 | 0;
      };
      if (v instanceof SIGSEGV) {
          return 128 + 11 | 0;
      };
      if (v instanceof SIGPIPE) {
          return 128 + 13 | 0;
      };
      if (v instanceof SIGALRM) {
          return 128 + 14 | 0;
      };
      if (v instanceof SIGTERM) {
          return 128 + 15 | 0;
      };
      throw new Error("Failed pattern match at ExitCodes line 153, column 1 - line 153, column 53: " + [ v.constructor.name ]);
  }, function (v) {
      if (v === 0) {
          return new Data_Maybe.Just(Success.value);
      };
      if (v === 1) {
          return new Data_Maybe.Just($$Error.value);
      };
      if (v === 2) {
          return new Data_Maybe.Just(MisuseOfShellBuiltins.value);
      };
      if (v === 64) {
          return new Data_Maybe.Just(CLIUsageError.value);
      };
      if (v === 65) {
          return new Data_Maybe.Just(DataFormatError.value);
      };
      if (v === 66) {
          return new Data_Maybe.Just(CannotOpenInput.value);
      };
      if (v === 67) {
          return new Data_Maybe.Just(AddresseeUnknown.value);
      };
      if (v === 68) {
          return new Data_Maybe.Just(HostNameUnknown.value);
      };
      if (v === 69) {
          return new Data_Maybe.Just(ServiceUnavailable.value);
      };
      if (v === 70) {
          return new Data_Maybe.Just(InternalSoftwareError.value);
      };
      if (v === 71) {
          return new Data_Maybe.Just(SystemError.value);
      };
      if (v === 72) {
          return new Data_Maybe.Just(CriticalOSFileMissing.value);
      };
      if (v === 73) {
          return new Data_Maybe.Just(CannotCreateOutputFile.value);
      };
      if (v === 74) {
          return new Data_Maybe.Just(IOError.value);
      };
      if (v === 75) {
          return new Data_Maybe.Just(TemporaryFailure.value);
      };
      if (v === 76) {
          return new Data_Maybe.Just(RemoteError.value);
      };
      if (v === 77) {
          return new Data_Maybe.Just(PermissionDenied.value);
      };
      if (v === 78) {
          return new Data_Maybe.Just(ConfigurationError.value);
      };
      if (v === 126) {
          return new Data_Maybe.Just(CannotExecute.value);
      };
      if (v === 127) {
          return new Data_Maybe.Just(CommandNotFound.value);
      };
      if (v === 128) {
          return new Data_Maybe.Just(InvalidExitArgument.value);
      };
      if (v === 129) {
          return new Data_Maybe.Just(SIGHUP.value);
      };
      if (v === 130) {
          return new Data_Maybe.Just(SIGINT.value);
      };
      if (v === 131) {
          return new Data_Maybe.Just(SIGQUIT.value);
      };
      if (v === 132) {
          return new Data_Maybe.Just(SIGILL.value);
      };
      if (v === 134) {
          return new Data_Maybe.Just(SIGABRT.value);
      };
      if (v === 136) {
          return new Data_Maybe.Just(SIGFPE.value);
      };
      if (v === 137) {
          return new Data_Maybe.Just(SIGKILL.value);
      };
      if (v === 139) {
          return new Data_Maybe.Just(SIGSEGV.value);
      };
      if (v === 141) {
          return new Data_Maybe.Just(SIGPIPE.value);
      };
      if (v === 142) {
          return new Data_Maybe.Just(SIGALRM.value);
      };
      if (v === 143) {
          return new Data_Maybe.Just(SIGTERM.value);
      };
      return Data_Maybe.Nothing.value;
  });
  exports["Success"] = Success;
  exports["Error"] = $$Error;
  exports["MisuseOfShellBuiltins"] = MisuseOfShellBuiltins;
  exports["CLIUsageError"] = CLIUsageError;
  exports["DataFormatError"] = DataFormatError;
  exports["CannotOpenInput"] = CannotOpenInput;
  exports["AddresseeUnknown"] = AddresseeUnknown;
  exports["HostNameUnknown"] = HostNameUnknown;
  exports["ServiceUnavailable"] = ServiceUnavailable;
  exports["InternalSoftwareError"] = InternalSoftwareError;
  exports["SystemError"] = SystemError;
  exports["CriticalOSFileMissing"] = CriticalOSFileMissing;
  exports["CannotCreateOutputFile"] = CannotCreateOutputFile;
  exports["IOError"] = IOError;
  exports["TemporaryFailure"] = TemporaryFailure;
  exports["RemoteError"] = RemoteError;
  exports["PermissionDenied"] = PermissionDenied;
  exports["ConfigurationError"] = ConfigurationError;
  exports["CannotExecute"] = CannotExecute;
  exports["CommandNotFound"] = CommandNotFound;
  exports["InvalidExitArgument"] = InvalidExitArgument;
  exports["SIGHUP"] = SIGHUP;
  exports["SIGINT"] = SIGINT;
  exports["SIGQUIT"] = SIGQUIT;
  exports["SIGILL"] = SIGILL;
  exports["SIGABRT"] = SIGABRT;
  exports["SIGFPE"] = SIGFPE;
  exports["SIGKILL"] = SIGKILL;
  exports["SIGSEGV"] = SIGSEGV;
  exports["SIGPIPE"] = SIGPIPE;
  exports["SIGALRM"] = SIGALRM;
  exports["SIGTERM"] = SIGTERM;
  exports["eqExitCode"] = eqExitCode;
  exports["ordExitCode"] = ordExitCode;
  exports["boundedExitCode"] = boundedExitCode;
  exports["enumExitCode"] = enumExitCode;
  exports["boundedEnumExitCode"] = boundedEnumExitCode;
})(PS["ExitCodes"] = PS["ExitCodes"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Prelude = PS["Prelude"];                 
  var CatQueue = (function () {
      function CatQueue(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatQueue.create = function (value0) {
          return function (value1) {
              return new CatQueue(value0, value1);
          };
      };
      return CatQueue;
  })();
  var uncons = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return Data_Maybe.Nothing.value;
          };
          if (v.value0 instanceof Data_List_Types.Nil) {
              $copy_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);
              return;
          };
          if (v.value0 instanceof Data_List_Types.Cons) {
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
          };
          throw new Error("Failed pattern match at Data.CatQueue line 83, column 1 - line 83, column 63: " + [ v.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var snoc = function (v) {
      return function (a) {
          return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));
      };
  };
  var $$null = function (v) {
      if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };                                                                                                
  var empty = new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
  exports["CatQueue"] = CatQueue;
  exports["empty"] = empty;
  exports["null"] = $$null;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
})(PS["Data.CatQueue"] = PS["Data.CatQueue"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_CatQueue = PS["Data.CatQueue"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Prelude = PS["Prelude"];                 
  var CatNil = (function () {
      function CatNil() {

      };
      CatNil.value = new CatNil();
      return CatNil;
  })();
  var CatCons = (function () {
      function CatCons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatCons.create = function (value0) {
          return function (value1) {
              return new CatCons(value0, value1);
          };
      };
      return CatCons;
  })();
  var link = function (v) {
      return function (v1) {
          if (v instanceof CatNil) {
              return v1;
          };
          if (v1 instanceof CatNil) {
              return v;
          };
          if (v instanceof CatCons) {
              return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.CatList line 109, column 1 - line 109, column 54: " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var foldr = function (k) {
      return function (b) {
          return function (q) {
              var foldl = function ($copy_v) {
                  return function ($copy_c) {
                      return function ($copy_v1) {
                          var $tco_var_v = $copy_v;
                          var $tco_var_c = $copy_c;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v, c, v1) {
                              if (v1 instanceof Data_List_Types.Nil) {
                                  $tco_done = true;
                                  return c;
                              };
                              if (v1 instanceof Data_List_Types.Cons) {
                                  $tco_var_v = v;
                                  $tco_var_c = v(c)(v1.value0);
                                  $copy_v1 = v1.value1;
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.CatList line 125, column 3 - line 125, column 59: " + [ v.constructor.name, c.constructor.name, v1.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v, $tco_var_c, $copy_v1);
                          };
                          return $tco_result;
                      };
                  };
              };
              var go = function ($copy_xs) {
                  return function ($copy_ys) {
                      var $tco_var_xs = $copy_xs;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(xs, ys) {
                          var v = Data_CatQueue.uncons(xs);
                          if (v instanceof Data_Maybe.Nothing) {
                              $tco_done = true;
                              return foldl(function (x) {
                                  return function (i) {
                                      return i(x);
                                  };
                              })(b)(ys);
                          };
                          if (v instanceof Data_Maybe.Just) {
                              $tco_var_xs = v.value0.value1;
                              $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);
                              return;
                          };
                          throw new Error("Failed pattern match at Data.CatList line 121, column 14 - line 123, column 67: " + [ v.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_xs, $copy_ys);
                      };
                      return $tco_result;
                  };
              };
              return go(q)(Data_List_Types.Nil.value);
          };
      };
  };
  var uncons = function (v) {
      if (v instanceof CatNil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof CatCons) {
          return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, (function () {
              var $44 = Data_CatQueue["null"](v.value1);
              if ($44) {
                  return CatNil.value;
              };
              return foldr(link)(CatNil.value)(v.value1);
          })()));
      };
      throw new Error("Failed pattern match at Data.CatList line 100, column 1 - line 100, column 61: " + [ v.constructor.name ]);
  };
  var empty = CatNil.value;
  var append = link;
  var semigroupCatList = new Data_Semigroup.Semigroup(append);
  var snoc = function (cat) {
      return function (a) {
          return append(cat)(new CatCons(a, Data_CatQueue.empty));
      };
  };
  exports["CatNil"] = CatNil;
  exports["CatCons"] = CatCons;
  exports["empty"] = empty;
  exports["append"] = append;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
  exports["semigroupCatList"] = semigroupCatList;
})(PS["Data.CatList"] = PS["Data.CatList"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_CatList = PS["Data.CatList"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Free = (function () {
      function Free(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Free.create = function (value0) {
          return function (value1) {
              return new Free(value0, value1);
          };
      };
      return Free;
  })();
  var Return = (function () {
      function Return(value0) {
          this.value0 = value0;
      };
      Return.create = function (value0) {
          return new Return(value0);
      };
      return Return;
  })();
  var Bind = (function () {
      function Bind(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bind.create = function (value0) {
          return function (value1) {
              return new Bind(value0, value1);
          };
      };
      return Bind;
  })();
  var toView = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          var runExpF = function (v2) {
              return v2;
          };
          var concatF = function (v2) {
              return function (r) {
                  return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
              };
          };
          if (v.value0 instanceof Return) {
              var v2 = Data_CatList.uncons(v.value1);
              if (v2 instanceof Data_Maybe.Nothing) {
                  $tco_done = true;
                  return new Return(v.value0.value0);
              };
              if (v2 instanceof Data_Maybe.Just) {
                  $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
                  return;
              };
              throw new Error("Failed pattern match at Control.Monad.Free line 220, column 7 - line 224, column 64: " + [ v2.constructor.name ]);
          };
          if (v.value0 instanceof Bind) {
              $tco_done = true;
              return new Bind(v.value0.value0, function (a) {
                  return concatF(v.value0.value1(a))(v.value1);
              });
          };
          throw new Error("Failed pattern match at Control.Monad.Free line 218, column 3 - line 226, column 56: " + [ v.value0.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var resume$prime = function (k) {
      return function (j) {
          return function (f) {
              var v = toView(f);
              if (v instanceof Return) {
                  return j(v.value0);
              };
              if (v instanceof Bind) {
                  return k(v.value0)(v.value1);
              };
              throw new Error("Failed pattern match at Control.Monad.Free line 206, column 17 - line 208, column 20: " + [ v.constructor.name ]);
          };
      };
  };
  var fromView = function (f) {
      return new Free(f, Data_CatList.empty);
  };
  var freeMonad = new Control_Monad.Monad(function () {
      return freeApplicative;
  }, function () {
      return freeBind;
  });
  var freeFunctor = new Data_Functor.Functor(function (k) {
      return function (f) {
          return Control_Bind.bindFlipped(freeBind)(function ($118) {
              return Control_Applicative.pure(freeApplicative)(k($118));
          })(f);
      };
  });
  var freeBind = new Control_Bind.Bind(function () {
      return freeApply;
  }, function (v) {
      return function (k) {
          return new Free(v.value0, Data_CatList.snoc(v.value1)(k));
      };
  });
  var freeApply = new Control_Apply.Apply(function () {
      return freeFunctor;
  }, Control_Monad.ap(freeMonad));
  var freeApplicative = new Control_Applicative.Applicative(function () {
      return freeApply;
  }, function ($119) {
      return fromView(Return.create($119));
  });
  var freeMonadRec = new Control_Monad_Rec_Class.MonadRec(function () {
      return freeMonad;
  }, function (k) {
      return function (a) {
          return Control_Bind.bind(freeBind)(k(a))(function (v) {
              if (v instanceof Control_Monad_Rec_Class.Loop) {
                  return Control_Monad_Rec_Class.tailRecM(freeMonadRec)(k)(v.value0);
              };
              if (v instanceof Control_Monad_Rec_Class.Done) {
                  return Control_Applicative.pure(freeApplicative)(v.value0);
              };
              throw new Error("Failed pattern match at Control.Monad.Free line 85, column 26 - line 87, column 21: " + [ v.constructor.name ]);
          });
      };
  });
  var liftF = function (f) {
      return fromView(new Bind(f, function ($120) {
          return Control_Applicative.pure(freeApplicative)($120);
      }));
  };
  exports["liftF"] = liftF;
  exports["resume'"] = resume$prime;
  exports["freeFunctor"] = freeFunctor;
  exports["freeBind"] = freeBind;
  exports["freeApplicative"] = freeApplicative;
  exports["freeApply"] = freeApply;
  exports["freeMonad"] = freeMonad;
  exports["freeMonadRec"] = freeMonadRec;
})(PS["Control.Monad.Free"] = PS["Control.Monad.Free"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                 
  var runExists = Unsafe_Coerce.unsafeCoerce;
  var mkExists = Unsafe_Coerce.unsafeCoerce;
  exports["mkExists"] = mkExists;
  exports["runExists"] = runExists;
})(PS["Data.Exists"] = PS["Data.Exists"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_String = PS["Data.String"];
  var Data_String_CodePoints = PS["Data.String.CodePoints"];
  var Data_String_Common = PS["Data.String.Common"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var whitespaceRegex = (function () {
      var v = Data_String_Regex.regex("\\s+")(Data_String_Regex_Flags.noFlags);
      if (v instanceof Data_Either.Left) {
          return Partial_Unsafe.unsafeCrashWith("whitespaceRegex: `\\s+` seems to be invlaid, err: " + v.value0);
      };
      if (v instanceof Data_Either.Right) {
          return v.value0;
      };
      throw new Error("Failed pattern match at Options.Applicative.Internal.Utils line 39, column 19 - line 41, column 15: " + [ v.constructor.name ]);
  })();
  var words = function (v) {
      if (v === "") {
          return [  ];
      };
      return Data_String_Regex.split(whitespaceRegex)(v);
  };
  var unWords = function (dictFoldable) {
      return Data_Foldable.intercalate(dictFoldable)(Data_Monoid.monoidString)(" ");
  };
  var unLines = function (dictFoldable) {
      return Data_Foldable.intercalate(dictFoldable)(Data_Monoid.monoidString)("\x0a");
  };
  var startsWith = function (p) {
      return function (s) {
          return Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(Data_String_CodePoints.indexOf(p)(s))(new Data_Maybe.Just(0));
      };
  };
  var lines = function (v) {
      if (v === "") {
          return [  ];
      };
      return Data_String_Common.split("\x0a")(v);
  };
  var apApplyFlipped = function (dictApply) {
      return Control_Apply.lift2(dictApply)(Data_Function.applyFlipped);
  };
  exports["unLines"] = unLines;
  exports["unWords"] = unWords;
  exports["lines"] = lines;
  exports["words"] = words;
  exports["whitespaceRegex"] = whitespaceRegex;
  exports["startsWith"] = startsWith;
  exports["apApplyFlipped"] = apApplyFlipped;
})(PS["Options.Applicative.Internal.Utils"] = PS["Options.Applicative.Internal.Utils"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int = PS["Data.Int"];
  var Data_List = PS["Data.List"];
  var Data_List_Lazy = PS["Data.List.Lazy"];
  var Data_List_Lazy_Types = PS["Data.List.Lazy.Types"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_CodePoints = PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Data_String_Common = PS["Data.String.Common"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var SFail = (function () {
      function SFail() {

      };
      SFail.value = new SFail();
      return SFail;
  })();
  var SEmpty = (function () {
      function SEmpty() {

      };
      SEmpty.value = new SEmpty();
      return SEmpty;
  })();
  var SChar = (function () {
      function SChar(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SChar.create = function (value0) {
          return function (value1) {
              return new SChar(value0, value1);
          };
      };
      return SChar;
  })();
  var SText = (function () {
      function SText(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      SText.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new SText(value0, value1, value2);
              };
          };
      };
      return SText;
  })();
  var SLine = (function () {
      function SLine(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SLine.create = function (value0) {
          return function (value1) {
              return new SLine(value0, value1);
          };
      };
      return SLine;
  })();
  var Fail = (function () {
      function Fail() {

      };
      Fail.value = new Fail();
      return Fail;
  })();
  var Empty = (function () {
      function Empty() {

      };
      Empty.value = new Empty();
      return Empty;
  })();
  var Char = (function () {
      function Char(value0) {
          this.value0 = value0;
      };
      Char.create = function (value0) {
          return new Char(value0);
      };
      return Char;
  })();
  var Text = (function () {
      function Text(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Text.create = function (value0) {
          return function (value1) {
              return new Text(value0, value1);
          };
      };
      return Text;
  })();
  var Line = (function () {
      function Line() {

      };
      Line.value = new Line();
      return Line;
  })();
  var FlatAlt = (function () {
      function FlatAlt(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      FlatAlt.create = function (value0) {
          return function (value1) {
              return new FlatAlt(value0, value1);
          };
      };
      return FlatAlt;
  })();
  var Cat = (function () {
      function Cat(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cat.create = function (value0) {
          return function (value1) {
              return new Cat(value0, value1);
          };
      };
      return Cat;
  })();
  var Nest = (function () {
      function Nest(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Nest.create = function (value0) {
          return function (value1) {
              return new Nest(value0, value1);
          };
      };
      return Nest;
  })();
  var Union = (function () {
      function Union(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Union.create = function (value0) {
          return function (value1) {
              return new Union(value0, value1);
          };
      };
      return Union;
  })();
  var Column = (function () {
      function Column(value0) {
          this.value0 = value0;
      };
      Column.create = function (value0) {
          return new Column(value0);
      };
      return Column;
  })();
  var Columns = (function () {
      function Columns(value0) {
          this.value0 = value0;
      };
      Columns.create = function (value0) {
          return new Columns(value0);
      };
      return Columns;
  })();
  var Nesting = (function () {
      function Nesting(value0) {
          this.value0 = value0;
      };
      Nesting.create = function (value0) {
          return new Nesting(value0);
      };
      return Nesting;
  })();
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Cons(value0, value1, value2);
              };
          };
      };
      return Cons;
  })();
  var text = function (v) {
      if (v === "") {
          return Empty.value;
      };
      return new Text(Data_String_CodePoints.length(v), v);
  };                         
  var spaces = function (n) {
      if (n <= 0) {
          return "";
      };
      if (Data_Boolean.otherwise) {
          return Data_String_CodeUnits.fromCharArray(Data_Array.replicate(n)(" "));
      };
      throw new Error("Failed pattern match at Text.PrettyPrint.Leijen line 892, column 1 - line 892, column 24: " + [ n.constructor.name ]);
  };
  var space = new Char(" ");
  var rparen = new Char(")");
  var renderFits = function (fits) {
      return function (rfrac) {
          return function (w) {
              return function (headNode) {
                  var r = Data_Ord.max(Data_Ord.ordInt)(0)(Data_Ord.min(Data_Ord.ordInt)(w)(Data_Int.round(Data_Int.toNumber(w) * rfrac)));
                  var nicest$prime = function (n) {
                      return function (k) {
                          return function (i) {
                              return function (ds) {
                                  return function (x) {
                                      return function (y) {
                                          var x$prime = best(n)(k)(new Cons(i, x, ds));
                                          var width$prime = Data_Ord.min(Data_Ord.ordInt)(w - k | 0)((r - k | 0) + n | 0);
                                          var $108 = fits(w)(Data_Ord.min(Data_Ord.ordInt)(n)(k))(width$prime)(x$prime);
                                          if ($108) {
                                              return x$prime;
                                          };
                                          var y$prime = best(n)(k)(new Cons(i, y, ds));
                                          return y$prime;
                                      };
                                  };
                              };
                          };
                      };
                  };
                  var best = function (n) {
                      return function (k) {
                          return function (v) {
                              if (v instanceof Nil) {
                                  return SEmpty.value;
                              };
                              if (v instanceof Cons) {
                                  if (v.value1 instanceof Fail) {
                                      return SFail.value;
                                  };
                                  if (v.value1 instanceof Empty) {
                                      return best(n)(k)(v.value2);
                                  };
                                  if (v.value1 instanceof Char) {
                                      var k$prime = k + 1 | 0;
                                      return new SChar(v.value1.value0, best(n)(k$prime)(v.value2));
                                  };
                                  if (v.value1 instanceof Text) {
                                      var k$prime = k + v.value1.value0 | 0;
                                      return new SText(v.value1.value0, v.value1.value1, best(n)(k$prime)(v.value2));
                                  };
                                  if (v.value1 instanceof Line) {
                                      return new SLine(v.value0, best(v.value0)(v.value0)(v.value2));
                                  };
                                  if (v.value1 instanceof FlatAlt) {
                                      return best(n)(k)(new Cons(v.value0, v.value1.value0, v.value2));
                                  };
                                  if (v.value1 instanceof Cat) {
                                      return best(n)(k)(new Cons(v.value0, v.value1.value0, new Cons(v.value0, v.value1.value1, v.value2)));
                                  };
                                  if (v.value1 instanceof Nest) {
                                      var i$prime = v.value0 + v.value1.value0 | 0;
                                      return best(n)(k)(new Cons(i$prime, v.value1.value1, v.value2));
                                  };
                                  if (v.value1 instanceof Union) {
                                      return nicest$prime(n)(k)(v.value0)(v.value2)(v.value1.value0)(v.value1.value1);
                                  };
                                  if (v.value1 instanceof Column) {
                                      return best(n)(k)(new Cons(v.value0, v.value1.value0(k), v.value2));
                                  };
                                  if (v.value1 instanceof Columns) {
                                      return best(n)(k)(new Cons(v.value0, v.value1.value0(new Data_Maybe.Just(w)), v.value2));
                                  };
                                  if (v.value1 instanceof Nesting) {
                                      return best(n)(k)(new Cons(v.value0, v.value1.value0(v.value0), v.value2));
                                  };
                                  throw new Error("Failed pattern match at Text.PrettyPrint.Leijen line 772, column 11 - line 786, column 56: " + [ v.value1.constructor.name ]);
                              };
                              throw new Error("Failed pattern match at Text.PrettyPrint.Leijen line 770, column 7 - line 770, column 28: " + [ n.constructor.name, k.constructor.name, v.constructor.name ]);
                          };
                      };
                  };
                  return best(0)(0)(new Cons(0, headNode, Nil.value));
              };
          };
      };
  };   
  var rbracket = new Char("]");
  var nesting = function (f) {
      return new Nesting(f);
  };
  var nest = function (i) {
      return function (x) {
          return new Nest(i, x);
      };
  };
  var lparen = new Char("(");
  var line = new FlatAlt(Line.value, space);
  var lbracket = new Char("[");
  var indentation = function (n) {
      return spaces(n);
  }; 
  var foldr1 = function (dictMonoid) {
      return function (f) {
          return function ($233) {
              return (function (v) {
                  if (v instanceof Data_Maybe.Nothing) {
                      return Data_Monoid.mempty(dictMonoid);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(v.value0.last)(v.value0.init);
                  };
                  throw new Error("Failed pattern match at Text.PrettyPrint.Leijen line 121, column 29 - line 123, column 43: " + [ v.constructor.name ]);
              })(Data_Array.unsnoc($233));
          };
      };
  };
  var flatten = function (v) {
      if (v instanceof FlatAlt) {
          return v.value1;
      };
      if (v instanceof Cat) {
          return new Cat(flatten(v.value0), flatten(v.value1));
      };
      if (v instanceof Nest) {
          return new Nest(v.value0, flatten(v.value1));
      };
      if (v instanceof Line) {
          return Fail.value;
      };
      if (v instanceof Union) {
          return flatten(v.value0);
      };
      if (v instanceof Column) {
          return new Column(function ($234) {
              return flatten(v.value0($234));
          });
      };
      if (v instanceof Columns) {
          return new Columns(function ($235) {
              return flatten(v.value0($235));
          });
      };
      if (v instanceof Nesting) {
          return new Nesting(function ($236) {
              return flatten(v.value0($236));
          });
      };
      return v;
  };
  var group = function (x) {
      return new Union(flatten(x), x);
  };
  var softline = group(line);         
  var fits1 = function ($copy_v) {
      return function ($copy_v1) {
          return function ($copy_w) {
              return function ($copy_v2) {
                  var $tco_var_v = $copy_v;
                  var $tco_var_v1 = $copy_v1;
                  var $tco_var_w = $copy_w;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(v, v1, w, v2) {
                      if (w < 0) {
                          $tco_done = true;
                          return false;
                      };
                      if (v2 instanceof SFail) {
                          $tco_done = true;
                          return false;
                      };
                      if (v2 instanceof SEmpty) {
                          $tco_done = true;
                          return true;
                      };
                      if (v2 instanceof SChar) {
                          $tco_var_v = v;
                          $tco_var_v1 = v1;
                          $tco_var_w = w - 1 | 0;
                          $copy_v2 = v2.value1;
                          return;
                      };
                      if (v2 instanceof SText) {
                          $tco_var_v = v;
                          $tco_var_v1 = v1;
                          $tco_var_w = w - v2.value0 | 0;
                          $copy_v2 = v2.value2;
                          return;
                      };
                      if (v2 instanceof SLine) {
                          $tco_done = true;
                          return true;
                      };
                      throw new Error("Failed pattern match at Text.PrettyPrint.Leijen line 803, column 1 - line 803, column 51: " + [ v.constructor.name, v1.constructor.name, w.constructor.name, v2.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $tco_var_w, $copy_v2);
                  };
                  return $tco_result;
              };
          };
      };
  };
  var renderPretty = renderFits(fits1);
  var empty = Empty.value;
  var linebreak = new FlatAlt(Line.value, empty);
  var displayS = function (v) {
      if (v instanceof SFail) {
          return Partial_Unsafe.unsafeCrashWith("@SFail@ can not appear uncaught in a rendered @SimpleDoc@");
      };
      if (v instanceof SEmpty) {
          return "";
      };
      if (v instanceof SChar) {
          return Data_String_CodeUnits.fromCharArray([ v.value0 ]) + displayS(v.value1);
      };
      if (v instanceof SText) {
          return v.value1 + displayS(v.value2);
      };
      if (v instanceof SLine) {
          return "\x0a" + (indentation(v.value0) + displayS(v.value1));
      };
      throw new Error("Failed pattern match at Text.PrettyPrint.Leijen line 877, column 1 - line 877, column 32: " + [ v.constructor.name ]);
  };
  var column = function (f) {
      return new Column(f);
  };                        
  var $$char = function (v) {
      if (v === "\x0a") {
          return line;
      };
      return new Char(v);
  };
  var beside = function (x) {
      return function (y) {
          return new Cat(x, y);
      };
  };
  var docSemigroup = new Data_Semigroup.Semigroup(beside);
  var docMonoid = new Data_Monoid.Monoid(function () {
      return docSemigroup;
  }, empty);
  var string = function ($238) {
      return Data_Foldable.intercalate(Data_Foldable.foldableArray)(docMonoid)(line)(Data_Functor.map(Data_Functor.functorArray)(text)(Data_String_Common.split("\x0a")($238)));
  };
  var enclose = function (l) {
      return function (r) {
          return function (x) {
              return Data_Semigroup.append(docSemigroup)(l)(Data_Semigroup.append(docSemigroup)(x)(r));
          };
      };
  };                                   
  var brackets = enclose(lbracket)(rbracket);
  var parens = enclose(lparen)(rparen);
  var width = function (d) {
      return function (f) {
          return column(function (k1) {
              return Data_Semigroup.append(docSemigroup)(d)(column(function (k2) {
                  return f(k2 - k1 | 0);
              }));
          });
      };
  };
  var fillBreak = function (f) {
      return function (x) {
          return width(x)(function (w) {
              var $229 = w > f;
              if ($229) {
                  return nest(f)(linebreak);
              };
              return text(spaces(f - w | 0));
          });
      };
  };                             
  var appendWithSpace = function (x) {
      return function (y) {
          return Data_Semigroup.append(docSemigroup)(x)(Data_Semigroup.append(docSemigroup)(space)(y));
      };
  };
  var hsep = foldr1(docMonoid)(appendWithSpace);
  var appendWithSoftline = function (x) {
      return function (y) {
          return Data_Semigroup.append(docSemigroup)(x)(Data_Semigroup.append(docSemigroup)(softline)(y));
      };
  };                                                   
  var appendWithLinebreak = function (x) {
      return function (y) {
          return Data_Semigroup.append(docSemigroup)(x)(Data_Semigroup.append(docSemigroup)(linebreak)(y));
      };
  };
  var vcat = foldr1(docMonoid)(appendWithLinebreak);
  var appendWithLine = function (x) {
      return function (y) {
          return Data_Semigroup.append(docSemigroup)(x)(Data_Semigroup.append(docSemigroup)(line)(y));
      };
  };                                   
  var align = function (d) {
      return column(function (k) {
          return nesting(function (i) {
              return nest(k - i | 0)(d);
          });
      });
  };                                             
  var hang = function (i) {
      return function (d) {
          return align(nest(i)(d));
      };
  };
  var indent = function (i) {
      return function (d) {
          return hang(i)(Data_Semigroup.append(docSemigroup)(text(spaces(i)))(d));
      };
  };
  exports["foldr1"] = foldr1;
  exports["hsep"] = hsep;
  exports["vcat"] = vcat;
  exports["appendWithSpace"] = appendWithSpace;
  exports["appendWithSoftline"] = appendWithSoftline;
  exports["appendWithLine"] = appendWithLine;
  exports["appendWithLinebreak"] = appendWithLinebreak;
  exports["softline"] = softline;
  exports["parens"] = parens;
  exports["brackets"] = brackets;
  exports["enclose"] = enclose;
  exports["lparen"] = lparen;
  exports["rparen"] = rparen;
  exports["lbracket"] = lbracket;
  exports["rbracket"] = rbracket;
  exports["space"] = space;
  exports["string"] = string;
  exports["fillBreak"] = fillBreak;
  exports["width"] = width;
  exports["indent"] = indent;
  exports["hang"] = hang;
  exports["align"] = align;
  exports["Fail"] = Fail;
  exports["Empty"] = Empty;
  exports["Char"] = Char;
  exports["Text"] = Text;
  exports["Line"] = Line;
  exports["FlatAlt"] = FlatAlt;
  exports["Cat"] = Cat;
  exports["Nest"] = Nest;
  exports["Union"] = Union;
  exports["Column"] = Column;
  exports["Columns"] = Columns;
  exports["Nesting"] = Nesting;
  exports["SFail"] = SFail;
  exports["SEmpty"] = SEmpty;
  exports["SChar"] = SChar;
  exports["SText"] = SText;
  exports["SLine"] = SLine;
  exports["empty"] = empty;
  exports["char"] = $$char;
  exports["text"] = text;
  exports["line"] = line;
  exports["linebreak"] = linebreak;
  exports["beside"] = beside;
  exports["nest"] = nest;
  exports["column"] = column;
  exports["nesting"] = nesting;
  exports["group"] = group;
  exports["flatten"] = flatten;
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["renderPretty"] = renderPretty;
  exports["renderFits"] = renderFits;
  exports["fits1"] = fits1;
  exports["displayS"] = displayS;
  exports["spaces"] = spaces;
  exports["indentation"] = indentation;
  exports["docSemigroup"] = docSemigroup;
  exports["docMonoid"] = docMonoid;
})(PS["Text.PrettyPrint.Leijen"] = PS["Text.PrettyPrint.Leijen"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Tuple = PS["Data.Tuple"];
  var Options_Applicative_Help_Pretty = PS["Options.Applicative.Help.Pretty"];
  var Options_Applicative_Internal_Utils = PS["Options.Applicative.Internal.Utils"];
  var Prelude = PS["Prelude"];
  var Text_PrettyPrint_Leijen = PS["Text.PrettyPrint.Leijen"];                 
  var Chunk = function (x) {
      return x;
  };
  var chunked = function (v) {
      return function (v1) {
          return function (v2) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return v2;
              };
              if (v2 instanceof Data_Maybe.Nothing) {
                  return v1;
              };
              if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) {
                  return new Data_Maybe.Just(v(v1.value0)(v2.value0));
              };
              throw new Error("Failed pattern match at Options.Applicative.Help.Chunk line 59, column 1 - line 60, column 41: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var chunkSemigroup = function (dictSemigroup) {
      return new Data_Semigroup.Semigroup(chunked(Data_Semigroup.append(dictSemigroup)));
  };
  var chunkNewtype = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Chunk);
  var extractChunk = function (dictMonoid) {
      return function ($34) {
          return Data_Maybe.fromMaybe(Data_Monoid.mempty(dictMonoid))(Data_Newtype.un(chunkNewtype)(Chunk)($34));
      };
  };
  var isEmpty = function ($35) {
      return Data_Maybe.isNothing(Data_Newtype.un(chunkNewtype)(Chunk)($35));
  };
  var chunkMonoid = function (dictSemigroup) {
      return new Data_Monoid.Monoid(function () {
          return chunkSemigroup(dictSemigroup);
      }, Data_Maybe.Nothing.value);
  };
  var vcatChunks = Data_Foldable.foldr(Data_Foldable.foldableArray)(chunked(Text_PrettyPrint_Leijen.appendWithLine))(Data_Monoid.mempty(chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup)));
  var vsepChunks = Data_Foldable.foldr(Data_Foldable.foldableArray)(chunked(function (x) {
      return function (y) {
          return Text_PrettyPrint_Leijen.appendWithLine(x)(Text_PrettyPrint_Leijen.appendWithLine(Data_Monoid.mempty(Text_PrettyPrint_Leijen.docMonoid))(y));
      };
  }))(Data_Monoid.mempty(chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup)));
  var chunkFunctor = Data_Maybe.functorMaybe;
  var chunkBesideOrBelow = chunked(Text_PrettyPrint_Leijen.appendWithSoftline);
  var chunkBeside = chunked(Text_PrettyPrint_Leijen.appendWithSpace);
  var chunkApply = Data_Maybe.applyMaybe;
  var chunkApplicative = Data_Maybe.applicativeMaybe;
  var listToChunk = function (dictMonoid) {
      return function (v) {
          if (v.length === 0) {
              return Data_Monoid.mempty(chunkMonoid(dictMonoid.Semigroup0()));
          };
          return Control_Applicative.pure(chunkApplicative)(Data_Foldable.fold(Data_Foldable.foldableArray)(dictMonoid)(v));
      };
  };
  var stringChunk = function (v) {
      if (v === "") {
          return Data_Monoid.mempty(chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup));
      };
      return Control_Applicative.pure(chunkApplicative)(Text_PrettyPrint_Leijen.text(v));
  };
  var paragraph = function ($36) {
      return Data_Foldable.foldr(Data_Foldable.foldableArray)(function ($37) {
          return chunked(Text_PrettyPrint_Leijen.appendWithSoftline)(stringChunk($37));
      })(Data_Monoid.mempty(chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup)))(Options_Applicative_Internal_Utils.words($36));
  };
  var tabulate$prime = function (v) {
      return function (v1) {
          if (v1.length === 0) {
              return Data_Monoid.mempty(chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup));
          };
          return Control_Applicative.pure(chunkApplicative)(Text_PrettyPrint_Leijen.vcat(Data_Functor.mapFlipped(Data_Functor.functorArray)(v1)(function (v2) {
              return Text_PrettyPrint_Leijen.indent(2)(Text_PrettyPrint_Leijen.appendWithSpace(Text_PrettyPrint_Leijen.fillBreak(v)(v2.value0))(v2.value1));
          })));
      };
  };
  var tabulate = tabulate$prime(24);
  exports["Chunk"] = Chunk;
  exports["chunked"] = chunked;
  exports["listToChunk"] = listToChunk;
  exports["chunkBeside"] = chunkBeside;
  exports["chunkBesideOrBelow"] = chunkBesideOrBelow;
  exports["vcatChunks"] = vcatChunks;
  exports["vsepChunks"] = vsepChunks;
  exports["isEmpty"] = isEmpty;
  exports["stringChunk"] = stringChunk;
  exports["paragraph"] = paragraph;
  exports["extractChunk"] = extractChunk;
  exports["tabulate"] = tabulate;
  exports["chunkNewtype"] = chunkNewtype;
  exports["chunkFunctor"] = chunkFunctor;
  exports["chunkApply"] = chunkApply;
  exports["chunkApplicative"] = chunkApplicative;
  exports["chunkSemigroup"] = chunkSemigroup;
  exports["chunkMonoid"] = chunkMonoid;
})(PS["Options.Applicative.Help.Chunk"] = PS["Options.Applicative.Help.Chunk"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Options_Applicative_Help_Chunk = PS["Options.Applicative.Help.Chunk"];
  var Options_Applicative_Help_Pretty = PS["Options.Applicative.Help.Pretty"];
  var Prelude = PS["Prelude"];
  var Text_PrettyPrint_Leijen = PS["Text.PrettyPrint.Leijen"];                 
  var ParserHelp = function (x) {
      return x;
  }
  var parserHelpMonoid = Data_Monoid.monoidRecord()(Data_Monoid.monoidRecordCons(new Data_Symbol.IsSymbol(function () {
      return "helpBody";
  }))(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup))()(Data_Monoid.monoidRecordCons(new Data_Symbol.IsSymbol(function () {
      return "helpError";
  }))(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup))()(Data_Monoid.monoidRecordCons(new Data_Symbol.IsSymbol(function () {
      return "helpFooter";
  }))(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup))()(Data_Monoid.monoidRecordCons(new Data_Symbol.IsSymbol(function () {
      return "helpHeader";
  }))(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup))()(Data_Monoid.monoidRecordCons(new Data_Symbol.IsSymbol(function () {
      return "helpSuggestions";
  }))(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup))()(Data_Monoid.monoidRecordCons(new Data_Symbol.IsSymbol(function () {
      return "helpUsage";
  }))(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup))()(Data_Monoid.monoidRecordNil)))))));
  var newtypeParserHelp = new Data_Newtype.Newtype(function (n) {
      return n;
  }, ParserHelp);
  var helpText = function (v) {
      return Options_Applicative_Help_Chunk.extractChunk(Text_PrettyPrint_Leijen.docMonoid)(Options_Applicative_Help_Chunk.vsepChunks([ v.helpError, v.helpSuggestions, v.helpHeader, v.helpUsage, v.helpBody, v.helpFooter ]));
  };
  var renderHelp = function (cols) {
      return function ($5) {
          return Text_PrettyPrint_Leijen.displayS(Text_PrettyPrint_Leijen.renderPretty(1.0)(cols)(helpText($5)));
      };
  };
  exports["ParserHelp"] = ParserHelp;
  exports["renderHelp"] = renderHelp;
  exports["newtypeParserHelp"] = newtypeParserHelp;
  exports["parserHelpMonoid"] = parserHelpMonoid;
})(PS["Options.Applicative.Help.Types"] = PS["Options.Applicative.Help.Types"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Exists = PS["Data.Exists"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var ExitCodes = PS["ExitCodes"];
  var Options_Applicative_Help_Chunk = PS["Options.Applicative.Help.Chunk"];
  var Options_Applicative_Help_Pretty = PS["Options.Applicative.Help.Pretty"];
  var Options_Applicative_Help_Types = PS["Options.Applicative.Help.Types"];
  var Prelude = PS["Prelude"];
  var Text_PrettyPrint_Leijen = PS["Text.PrettyPrint.Leijen"];                 
  var ParserFailure = function (x) {
      return x;
  };
  var Internal = (function () {
      function Internal() {

      };
      Internal.value = new Internal();
      return Internal;
  })();
  var Hidden = (function () {
      function Hidden() {

      };
      Hidden.value = new Hidden();
      return Hidden;
  })();
  var Visible = (function () {
      function Visible() {

      };
      Visible.value = new Visible();
      return Visible;
  })();
  var Leaf = (function () {
      function Leaf(value0) {
          this.value0 = value0;
      };
      Leaf.create = function (value0) {
          return new Leaf(value0);
      };
      return Leaf;
  })();
  var MultNode = (function () {
      function MultNode(value0) {
          this.value0 = value0;
      };
      MultNode.create = function (value0) {
          return new MultNode(value0);
      };
      return MultNode;
  })();
  var AltNode = (function () {
      function AltNode(value0) {
          this.value0 = value0;
      };
      AltNode.create = function (value0) {
          return new AltNode(value0);
      };
      return AltNode;
  })();
  var OptProperties = function (x) {
      return x;
  };
  var OptShort = (function () {
      function OptShort(value0) {
          this.value0 = value0;
      };
      OptShort.create = function (value0) {
          return new OptShort(value0);
      };
      return OptShort;
  })();
  var OptLong = (function () {
      function OptLong(value0) {
          this.value0 = value0;
      };
      OptLong.create = function (value0) {
          return new OptLong(value0);
      };
      return OptLong;
  })();
  var OptHelpInfo = function (x) {
      return x;
  };
  var CmdStart = (function () {
      function CmdStart() {

      };
      CmdStart.value = new CmdStart();
      return CmdStart;
  })();
  var CmdCont = (function () {
      function CmdCont() {

      };
      CmdCont.value = new CmdCont();
      return CmdCont;
  })();
  var CompletionResult = function (x) {
      return x;
  };
  var Success = (function () {
      function Success(value0) {
          this.value0 = value0;
      };
      Success.create = function (value0) {
          return new Success(value0);
      };
      return Success;
  })();
  var Failure = (function () {
      function Failure(value0) {
          this.value0 = value0;
      };
      Failure.create = function (value0) {
          return new Failure(value0);
      };
      return Failure;
  })();
  var CompletionInvoked = (function () {
      function CompletionInvoked(value0) {
          this.value0 = value0;
      };
      CompletionInvoked.create = function (value0) {
          return new CompletionInvoked(value0);
      };
      return CompletionInvoked;
  })();
  var Completer = function (x) {
      return x;
  };
  var Backtrack = (function () {
      function Backtrack() {

      };
      Backtrack.value = new Backtrack();
      return Backtrack;
  })();
  var NoBacktrack = (function () {
      function NoBacktrack() {

      };
      NoBacktrack.value = new NoBacktrack();
      return NoBacktrack;
  })();
  var SubparserInline = (function () {
      function SubparserInline() {

      };
      SubparserInline.value = new SubparserInline();
      return SubparserInline;
  })();
  var ParserPrefs = function (x) {
      return x;
  };
  var Intersperse = (function () {
      function Intersperse() {

      };
      Intersperse.value = new Intersperse();
      return Intersperse;
  })();
  var NoIntersperse = (function () {
      function NoIntersperse() {

      };
      NoIntersperse.value = new NoIntersperse();
      return NoIntersperse;
  })();
  var AllPositionals = (function () {
      function AllPositionals() {

      };
      AllPositionals.value = new AllPositionals();
      return AllPositionals;
  })();
  var ForwardOptions = (function () {
      function ForwardOptions() {

      };
      ForwardOptions.value = new ForwardOptions();
      return ForwardOptions;
  })();
  var ParserInfo = function (x) {
      return x;
  };
  var NilP = (function () {
      function NilP(value0) {
          this.value0 = value0;
      };
      NilP.create = function (value0) {
          return new NilP(value0);
      };
      return NilP;
  })();
  var OptP = (function () {
      function OptP(value0) {
          this.value0 = value0;
      };
      OptP.create = function (value0) {
          return new OptP(value0);
      };
      return OptP;
  })();
  var MultP = (function () {
      function MultP(value0) {
          this.value0 = value0;
      };
      MultP.create = function (value0) {
          return new MultP(value0);
      };
      return MultP;
  })();
  var AltP = (function () {
      function AltP(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AltP.create = function (value0) {
          return function (value1) {
              return new AltP(value0, value1);
          };
      };
      return AltP;
  })();
  var BindP = (function () {
      function BindP(value0) {
          this.value0 = value0;
      };
      BindP.create = function (value0) {
          return new BindP(value0);
      };
      return BindP;
  })();
  var Option = function (x) {
      return x;
  };
  var OptReader = (function () {
      function OptReader(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      OptReader.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new OptReader(value0, value1, value2);
              };
          };
      };
      return OptReader;
  })();
  var FlagReader = (function () {
      function FlagReader(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      FlagReader.create = function (value0) {
          return function (value1) {
              return new FlagReader(value0, value1);
          };
      };
      return FlagReader;
  })();
  var ArgReader = (function () {
      function ArgReader(value0) {
          this.value0 = value0;
      };
      ArgReader.create = function (value0) {
          return new ArgReader(value0);
      };
      return ArgReader;
  })();
  var CmdReader = (function () {
      function CmdReader(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      CmdReader.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new CmdReader(value0, value1, value2);
              };
          };
      };
      return CmdReader;
  })();
  var CReader = function (x) {
      return x;
  };
  var ReadM = function (x) {
      return x;
  };
  var ErrorMsg = (function () {
      function ErrorMsg(value0) {
          this.value0 = value0;
      };
      ErrorMsg.create = function (value0) {
          return new ErrorMsg(value0);
      };
      return ErrorMsg;
  })();
  var InfoMsg = (function () {
      function InfoMsg(value0) {
          this.value0 = value0;
      };
      InfoMsg.create = function (value0) {
          return new InfoMsg(value0);
      };
      return InfoMsg;
  })();
  var ShowHelpText = (function () {
      function ShowHelpText() {

      };
      ShowHelpText.value = new ShowHelpText();
      return ShowHelpText;
  })();
  var UnknownError = (function () {
      function UnknownError() {

      };
      UnknownError.value = new UnknownError();
      return UnknownError;
  })();
  var MissingError = (function () {
      function MissingError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      MissingError.create = function (value0) {
          return function (value1) {
              return new MissingError(value0, value1);
          };
      };
      return MissingError;
  })();
  var ExpectsArgError = (function () {
      function ExpectsArgError(value0) {
          this.value0 = value0;
      };
      ExpectsArgError.create = function (value0) {
          return new ExpectsArgError(value0);
      };
      return ExpectsArgError;
  })();
  var UnexpectedError = (function () {
      function UnexpectedError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      UnexpectedError.create = function (value0) {
          return function (value1) {
              return new UnexpectedError(value0, value1);
          };
      };
      return UnexpectedError;
  })();
  var SomeParser = (function () {
      function SomeParser(value0) {
          this.value0 = value0;
      };
      SomeParser.create = function (value0) {
          return new SomeParser(value0);
      };
      return SomeParser;
  })();
  var MultPE = (function () {
      function MultPE(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      MultPE.create = function (value0) {
          return function (value1) {
              return new MultPE(value0, value1);
          };
      };
      return MultPE;
  })();
  var Context = (function () {
      function Context(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Context.create = function (value0) {
          return function (value1) {
              return new Context(value0, value1);
          };
      };
      return Context;
  })();
  var ParserM = function (x) {
      return x;
  };
  var readerAsk = Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)));
  var readerAbort = function ($280) {
      return ReadM(Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity))(Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity))($280)));
  };
  var readerError = function ($281) {
      return readerAbort(ErrorMsg.create($281));
  };
  var readMNewtype = new Data_Newtype.Newtype(function (n) {
      return n;
  }, ReadM);
  var readMFunctor = new Data_Functor.Functor(function (f) {
      return function (v) {
          return Data_Functor.map(Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity)))(f)(v);
      };
  });
  var readMApply = new Control_Apply.Apply(function () {
      return readMFunctor;
  }, function (v) {
      return function (v1) {
          return ReadM(Control_Apply.apply(Control_Monad_Reader_Trans.applyReaderT(Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity)))(v)(v1));
      };
  });
  var readMBind = new Control_Bind.Bind(function () {
      return readMApply;
  }, function (v) {
      return function (f) {
          return ReadM(Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity)))(v)(function ($282) {
              return Data_Newtype.un(readMNewtype)(ReadM)(f($282));
          }));
      };
  });
  var readMApplicative = new Control_Applicative.Applicative(function () {
      return readMApply;
  }, function ($283) {
      return ReadM(Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)))($283));
  });
  var parserPrefsNewtype = new Data_Newtype.Newtype(function (n) {
      return n;
  }, ParserPrefs);
  var parserMMonadRec = Control_Monad_Free.freeMonadRec;
  var parserMBind = Control_Monad_Free.freeBind;  
  var parserMApplicative = Control_Monad_Free.freeApplicative;
  var parserInfoNewtype = new Data_Newtype.Newtype(function (n) {
      return n;
  }, ParserInfo);
  var parseErrorSemigroup = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          if (v1 instanceof UnknownError) {
              return v;
          };
          return v1;
      };
  });
  var parseErrorMonoid = new Data_Monoid.Monoid(function () {
      return parseErrorSemigroup;
  }, UnknownError.value);
  var optionNewtype = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Option);
  var optVisibilityEq = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Internal && y instanceof Internal) {
              return true;
          };
          if (x instanceof Hidden && y instanceof Hidden) {
              return true;
          };
          if (x instanceof Visible && y instanceof Visible) {
              return true;
          };
          return false;
      };
  });
  var optVisibilityOrd = new Data_Ord.Ord(function () {
      return optVisibilityEq;
  }, function (x) {
      return function (y) {
          if (x instanceof Internal && y instanceof Internal) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Internal) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Internal) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Hidden && y instanceof Hidden) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Hidden) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Hidden) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Visible && y instanceof Visible) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Options.Applicative.Types line 164, column 8 - line 164, column 54: " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var optPropertiesNewtype = new Data_Newtype.Newtype(function (n) {
      return n;
  }, OptProperties);
  var optShowDefault = function ($284) {
      return (function (v) {
          return v.propShowDefault;
      })(Data_Newtype.un(optPropertiesNewtype)(OptProperties)((function (v) {
          return v.optProps;
      })(Data_Newtype.un(optionNewtype)(Option)($284))));
  };
  var optVisibility = function ($285) {
      return (function (v) {
          return v.propVisibility;
      })(Data_Newtype.un(optPropertiesNewtype)(OptProperties)((function (v) {
          return v.optProps;
      })(Data_Newtype.un(optionNewtype)(Option)($285))));
  };     
  var optNameEq = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof OptShort && y instanceof OptShort) {
              return x.value0 === y.value0;
          };
          if (x instanceof OptLong && y instanceof OptLong) {
              return x.value0 === y.value0;
          };
          return false;
      };
  });
  var optNameOrd = new Data_Ord.Ord(function () {
      return optNameEq;
  }, function (x) {
      return function (y) {
          if (x instanceof OptShort && y instanceof OptShort) {
              return Data_Ord.compare(Data_Ord.ordChar)(x.value0)(y.value0);
          };
          if (x instanceof OptShort) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof OptShort) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof OptLong && y instanceof OptLong) {
              return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
          };
          throw new Error("Failed pattern match at Options.Applicative.Types line 152, column 8 - line 152, column 42: " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var optMetaVar = function ($286) {
      return (function (v) {
          return v.propMetaVar;
      })(Data_Newtype.un(optPropertiesNewtype)(OptProperties)((function (v) {
          return v.optProps;
      })(Data_Newtype.un(optionNewtype)(Option)($286))));
  }; 
  var optHelp = function ($287) {
      return (function (v) {
          return v.propHelp;
      })(Data_Newtype.un(optPropertiesNewtype)(OptProperties)((function (v) {
          return v.optProps;
      })(Data_Newtype.un(optionNewtype)(Option)($287))));
  };
  var optDescMod = function ($288) {
      return (function (v) {
          return v.propDescMod;
      })(Data_Newtype.un(optPropertiesNewtype)(OptProperties)((function (v) {
          return v.optProps;
      })(Data_Newtype.un(optionNewtype)(Option)($288))));
  };
  var oneM = function ($289) {
      return ParserM(Control_Monad_Free.liftF($289));
  };
  var newtypeParserFailure = new Data_Newtype.Newtype(function (n) {
      return n;
  }, ParserFailure);
  var newtypeOptHelpInfo = new Data_Newtype.Newtype(function (n) {
      return n;
  }, OptHelpInfo);
  var newtypeCompletionResult = new Data_Newtype.Newtype(function (n) {
      return n;
  }, CompletionResult);
  var newtypeCompleter = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Completer);
  var newtypeCReader = new Data_Newtype.Newtype(function (n) {
      return n;
  }, CReader);
  var fromM = function (v) {
      return new BindP(v);
  };
  var completerSemigroup = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return Completer(function (s) {
              return Control_Apply.apply(Effect.applyEffect)(Data_Functor.map(Effect.functorEffect)(Data_Semigroup.append(Data_Semigroup.semigroupArray))(v(s)))(v1(s));
          });
      };
  });
  var completerMonoid = new Data_Monoid.Monoid(function () {
      return completerSemigroup;
  }, Completer(function (v) {
      return Control_Applicative.pure(Effect.applicativeEffect)([  ]);
  }));
  var cReaderFunctor = new Data_Functor.Functor(function (f) {
      return Data_Newtype.over(newtypeCReader)(newtypeCReader)(CReader)(function (r) {
          return {
              crReader: Data_Functor.map(readMFunctor)(f)(r.crReader),
              crCompleter: r.crCompleter
          };
      });
  });
  var parserInfoFunctor = new Data_Functor.Functor(function (f) {
      return Data_Newtype.over(parserInfoNewtype)(parserInfoNewtype)(ParserInfo)(function (i) {
          return {
              infoParser: Data_Functor.map(parserFunctor)(f)(i.infoParser),
              infoFailureCode: i.infoFailureCode,
              infoFooter: i.infoFooter,
              infoFullDesc: i.infoFullDesc,
              infoHeader: i.infoHeader,
              infoPolicy: i.infoPolicy,
              infoProgDesc: i.infoProgDesc
          };
      });
  });
  var parserFunctor = new Data_Functor.Functor(function (f) {
      return function (v) {
          if (v instanceof NilP) {
              return new NilP(Data_Functor.map(Data_Maybe.functorMaybe)(f)(v.value0));
          };
          if (v instanceof OptP) {
              return new OptP(Data_Functor.map(optionFunctor)(f)(v.value0));
          };
          if (v instanceof MultP) {
              return Data_Exists.runExists(function (v1) {
                  return MultP.create(Data_Exists.mkExists(new MultPE(Data_Functor.map(parserFunctor)(function (v2) {
                      return function ($290) {
                          return f(v2($290));
                      };
                  })(v1.value0), v1.value1)));
              })(v.value0);
          };
          if (v instanceof AltP) {
              return new AltP(Data_Functor.map(parserFunctor)(f)(v.value0), Data_Functor.map(parserFunctor)(f)(v.value1));
          };
          if (v instanceof BindP) {
              return BindP.create(Data_Functor.map(Control_Monad_Free.freeFunctor)(f)(v.value0));
          };
          throw new Error("Failed pattern match at Options.Applicative.Types line 329, column 1 - line 329, column 41: " + [ f.constructor.name, v.constructor.name ]);
      };
  });
  var optionFunctor = new Data_Functor.Functor(function (f) {
      return Data_Newtype.over(optionNewtype)(optionNewtype)(Option)(function (o) {
          return {
              optMain: Data_Functor.map(optReaderFunctor)(f)(o.optMain),
              optProps: o.optProps
          };
      });
  });
  var optReaderFunctor = new Data_Functor.Functor(function (f) {
      return function (v) {
          if (v instanceof OptReader) {
              return new OptReader(v.value0, Data_Functor.map(cReaderFunctor)(f)(v.value1), v.value2);
          };
          if (v instanceof FlagReader) {
              return new FlagReader(v.value0, f(v.value1));
          };
          if (v instanceof ArgReader) {
              return new ArgReader(Data_Functor.map(cReaderFunctor)(f)(v.value0));
          };
          if (v instanceof CmdReader) {
              return new CmdReader(v.value0, v.value1, function ($291) {
                  return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Functor.map(parserInfoFunctor)(f))(v.value2($291));
              });
          };
          throw new Error("Failed pattern match at Options.Applicative.Types line 276, column 1 - line 276, column 47: " + [ f.constructor.name, v.constructor.name ]);
      };
  });
  var parserAlt = new Control_Alt.Alt(function () {
      return parserFunctor;
  }, AltP.create);
  var parserPlus = new Control_Plus.Plus(function () {
      return parserAlt;
  }, new NilP(Data_Maybe.Nothing.value));
  var parserApply = new Control_Apply.Apply(function () {
      return parserFunctor;
  }, function (a) {
      return function (b) {
          return new MultP(Data_Exists.mkExists(new MultPE(a, b)));
      };
  });
  var parserApplicative = new Control_Applicative.Applicative(function () {
      return parserApply;
  }, function ($292) {
      return NilP.create(Data_Maybe.Just.create($292));
  });
  var manyM = function (p) {
      var go = function (acc) {
          return Control_Bind.bind(parserMBind)(oneM(Control_Alt.alt(parserAlt)(Data_Functor.map(parserFunctor)(Control_Monad_Rec_Class.Loop.create)(p))(Control_Applicative.pure(parserApplicative)(new Control_Monad_Rec_Class.Done(Data_Unit.unit)))))(function (v) {
              return Control_Applicative.pure(parserMApplicative)(Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep)(function (v1) {
                  return new Data_List_Types.Cons(v1, acc);
              })(function (v1) {
                  return Data_List.reverse(acc);
              })(v));
          });
      };
      return Control_Monad_Rec_Class.tailRecM(parserMMonadRec)(go)(Data_List_Types.Nil.value);
  };
  var many = function ($293) {
      return fromM(manyM($293));
  };       
  var argPolicyEq = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Intersperse && y instanceof Intersperse) {
              return true;
          };
          if (x instanceof NoIntersperse && y instanceof NoIntersperse) {
              return true;
          };
          if (x instanceof AllPositionals && y instanceof AllPositionals) {
              return true;
          };
          if (x instanceof ForwardOptions && y instanceof ForwardOptions) {
              return true;
          };
          return false;
      };
  });
  exports["ErrorMsg"] = ErrorMsg;
  exports["InfoMsg"] = InfoMsg;
  exports["ShowHelpText"] = ShowHelpText;
  exports["UnknownError"] = UnknownError;
  exports["MissingError"] = MissingError;
  exports["ExpectsArgError"] = ExpectsArgError;
  exports["UnexpectedError"] = UnexpectedError;
  exports["ParserInfo"] = ParserInfo;
  exports["ParserPrefs"] = ParserPrefs;
  exports["Option"] = Option;
  exports["OptShort"] = OptShort;
  exports["OptLong"] = OptLong;
  exports["OptReader"] = OptReader;
  exports["FlagReader"] = FlagReader;
  exports["ArgReader"] = ArgReader;
  exports["CmdReader"] = CmdReader;
  exports["OptProperties"] = OptProperties;
  exports["Internal"] = Internal;
  exports["Hidden"] = Hidden;
  exports["Visible"] = Visible;
  exports["Backtrack"] = Backtrack;
  exports["NoBacktrack"] = NoBacktrack;
  exports["SubparserInline"] = SubparserInline;
  exports["ReadM"] = ReadM;
  exports["readerAsk"] = readerAsk;
  exports["readerAbort"] = readerAbort;
  exports["readerError"] = readerError;
  exports["CReader"] = CReader;
  exports["NilP"] = NilP;
  exports["OptP"] = OptP;
  exports["MultP"] = MultP;
  exports["AltP"] = AltP;
  exports["BindP"] = BindP;
  exports["MultPE"] = MultPE;
  exports["Completer"] = Completer;
  exports["CompletionResult"] = CompletionResult;
  exports["ParserFailure"] = ParserFailure;
  exports["Success"] = Success;
  exports["Failure"] = Failure;
  exports["CompletionInvoked"] = CompletionInvoked;
  exports["Intersperse"] = Intersperse;
  exports["NoIntersperse"] = NoIntersperse;
  exports["AllPositionals"] = AllPositionals;
  exports["ForwardOptions"] = ForwardOptions;
  exports["OptHelpInfo"] = OptHelpInfo;
  exports["Leaf"] = Leaf;
  exports["MultNode"] = MultNode;
  exports["AltNode"] = AltNode;
  exports["SomeParser"] = SomeParser;
  exports["Context"] = Context;
  exports["CmdStart"] = CmdStart;
  exports["CmdCont"] = CmdCont;
  exports["optVisibility"] = optVisibility;
  exports["optMetaVar"] = optMetaVar;
  exports["optHelp"] = optHelp;
  exports["optShowDefault"] = optShowDefault;
  exports["optDescMod"] = optDescMod;
  exports["many"] = many;
  exports["parseErrorMonoid"] = parseErrorMonoid;
  exports["parseErrorSemigroup"] = parseErrorSemigroup;
  exports["parserInfoNewtype"] = parserInfoNewtype;
  exports["parserInfoFunctor"] = parserInfoFunctor;
  exports["parserPrefsNewtype"] = parserPrefsNewtype;
  exports["optNameEq"] = optNameEq;
  exports["optNameOrd"] = optNameOrd;
  exports["optVisibilityEq"] = optVisibilityEq;
  exports["optVisibilityOrd"] = optVisibilityOrd;
  exports["optPropertiesNewtype"] = optPropertiesNewtype;
  exports["optionNewtype"] = optionNewtype;
  exports["optionFunctor"] = optionFunctor;
  exports["readMNewtype"] = readMNewtype;
  exports["readMFunctor"] = readMFunctor;
  exports["readMApply"] = readMApply;
  exports["readMApplicative"] = readMApplicative;
  exports["readMBind"] = readMBind;
  exports["newtypeCReader"] = newtypeCReader;
  exports["cReaderFunctor"] = cReaderFunctor;
  exports["optReaderFunctor"] = optReaderFunctor;
  exports["parserFunctor"] = parserFunctor;
  exports["parserApply"] = parserApply;
  exports["parserApplicative"] = parserApplicative;
  exports["parserAlt"] = parserAlt;
  exports["parserPlus"] = parserPlus;
  exports["newtypeCompleter"] = newtypeCompleter;
  exports["completerSemigroup"] = completerSemigroup;
  exports["completerMonoid"] = completerMonoid;
  exports["newtypeCompletionResult"] = newtypeCompletionResult;
  exports["newtypeParserFailure"] = newtypeParserFailure;
  exports["argPolicyEq"] = argPolicyEq;
  exports["newtypeOptHelpInfo"] = newtypeOptHelpInfo;
})(PS["Options.Applicative.Types"] = PS["Options.Applicative.Types"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Reader = PS["Control.Monad.Reader"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Exists = PS["Data.Exists"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Options_Applicative_Types = PS["Options.Applicative.Types"];
  var Prelude = PS["Prelude"];                 
  var TNil = (function () {
      function TNil() {

      };
      TNil.value = new TNil();
      return TNil;
  })();
  var TCons = (function () {
      function TCons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TCons.create = function (value0) {
          return function (value1) {
              return new TCons(value0, value1);
          };
      };
      return TCons;
  })();
  var P = function (x) {
      return x;
  };
  var ListT = function (x) {
      return x;
  };
  var NondetT = function (x) {
      return x;
  };
  var ComplParser = (function () {
      function ComplParser(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ComplParser.create = function (value0) {
          return function (value1) {
              return new ComplParser(value0, value1);
          };
      };
      return ComplParser;
  })();
  var ComplOption = (function () {
      function ComplOption(value0) {
          this.value0 = value0;
      };
      ComplOption.create = function (value0) {
          return new ComplOption(value0);
      };
      return ComplOption;
  })();
  var ComplResult = (function () {
      function ComplResult(value0) {
          this.value0 = value0;
      };
      ComplResult.create = function (value0) {
          return new ComplResult(value0);
      };
      return ComplResult;
  })();
  var Completion = function (x) {
      return x;
  };
  var MonadP = function (MonadPlus0, enterContext, errorP, exitContext, exitP, getPrefs, missingArgP) {
      this.MonadPlus0 = MonadPlus0;
      this.enterContext = enterContext;
      this.errorP = errorP;
      this.exitContext = exitContext;
      this.exitP = exitP;
      this.getPrefs = getPrefs;
      this.missingArgP = missingArgP;
  };
  var withReadM = function (f) {
      var f$prime = function (v) {
          if (v instanceof Options_Applicative_Types.ErrorMsg) {
              return new Options_Applicative_Types.ErrorMsg(f(v.value0));
          };
          return v;
      };
      return function ($148) {
          return Options_Applicative_Types.ReadM(Control_Monad_Reader_Trans.mapReaderT(Control_Monad_Except.withExcept(f$prime))(Data_Newtype.un(Options_Applicative_Types.readMNewtype)(Options_Applicative_Types.ReadM)($148)));
      };
  };
  var stepListT = function (v) {
      return v;
  };
  var runP = function (v) {
      return Control_Monad_Reader.runReader(Data_Function.flip(Control_Monad_State_Trans.runStateT)([  ])(Control_Monad_Except_Trans.runExceptT(v)));
  };
  var runNondetT = function (v) {
      return v;
  };
  var runListT = function (dictMonad) {
      return function (xs) {
          return Control_Bind.bind(dictMonad.Bind1())(stepListT(xs))(function (v) {
              if (v instanceof TNil) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Types.Nil.value);
              };
              if (v instanceof TCons) {
                  return Control_Monad.liftM1(dictMonad)(Data_List_Types.Cons.create(v.value0))(runListT(dictMonad)(v.value1));
              };
              throw new Error("Failed pattern match at Options.Applicative.Internal line 215, column 3 - line 217, column 53: " + [ v.constructor.name ]);
          });
      };
  };
  var runCompletion = function (v) {
      return function (prefs) {
          var v1 = Control_Monad_Reader_Trans.runReaderT(Control_Monad_Except_Trans.runExceptT(v))(prefs);
          if (v1 instanceof ComplResult) {
              return Data_Maybe.Nothing.value;
          };
          if (v1 instanceof ComplParser) {
              return Data_Maybe.Just.create(new Data_Either.Left(new Data_Tuple.Tuple(v1.value0, v1.value1)));
          };
          if (v1 instanceof ComplOption) {
              return Data_Maybe.Just.create(new Data_Either.Right(v1.value0));
          };
          throw new Error("Failed pattern match at Options.Applicative.Internal line 185, column 38 - line 188, column 42: " + [ v1.constructor.name ]);
      };
  };
  var pFunctor = new Data_Functor.Functor(function (f) {
      return function (v) {
          return P(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Control_Monad_State_Trans.functorStateT(Control_Monad_Reader_Trans.functorReaderT(Data_Identity.functorIdentity))))(f)(v));
      };
  });
  var pApply = new Control_Apply.Apply(function () {
      return pFunctor;
  }, function (v) {
      return function (v1) {
          return P(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Control_Monad_State_Trans.monadStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity))))(v)(v1));
      };
  });
  var pBind = new Control_Bind.Bind(function () {
      return pApply;
  }, function (v) {
      return function (k) {
          return P(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity))))(v)(function (a) {
              var v1 = k(a);
              return v1;
          }));
      };
  });
  var pApplicative = new Control_Applicative.Applicative(function () {
      return pApply;
  }, function (a) {
      return P(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity))))(a));
  });
  var pMonad = new Control_Monad.Monad(function () {
      return pApplicative;
  }, function () {
      return pBind;
  });
  var pAlt = new Control_Alt.Alt(function () {
      return pFunctor;
  }, function (v) {
      return function (v1) {
          return P(Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Options_Applicative_Types.parseErrorSemigroup)(Control_Monad_State_Trans.monadStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity))))(v)(v1));
      };
  });
  var pPlus = new Control_Plus.Plus(function () {
      return pAlt;
  }, Control_Plus.empty(Control_Monad_Except_Trans.plusExceptT(Options_Applicative_Types.parseErrorMonoid)(Control_Monad_State_Trans.monadStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity)))));
  var pAlternative = new Control_Alternative.Alternative(function () {
      return pApplicative;
  }, function () {
      return pPlus;
  });
  var pMonadZero = new Control_MonadZero.MonadZero(function () {
      return pAlternative;
  }, function () {
      return pMonad;
  });
  var pMonadPlus = new Control_MonadPlus.MonadPlus(function () {
      return pMonadZero;
  });
  var missingArgP = function (dict) {
      return dict.missingArgP;
  };
  var hoistMaybe = function (dictMonadPlus) {
      return Data_Maybe.maybe(Control_Plus.empty(((dictMonadPlus.MonadZero0()).Alternative1()).Plus1()))(Control_Applicative.pure(((dictMonadPlus.MonadZero0()).Alternative1()).Applicative0()));
  };
  var getPrefs = function (dict) {
      return dict.getPrefs;
  };
  var exitP = function (dict) {
      return dict.exitP;
  };
  var exitContext = function (dict) {
      return dict.exitContext;
  };
  var errorP = function (dict) {
      return dict.errorP;
  };
  var hoistEither = function (dictMonadP) {
      return Data_Either.either(errorP(dictMonadP))(Control_Applicative.pure((((dictMonadP.MonadPlus0()).MonadZero0()).Alternative1()).Applicative0()));
  };
  var runReadM = function (dictMonadP) {
      return function (v) {
          return function (s) {
              return hoistEither(dictMonadP)(Control_Monad_Except.runExcept(Control_Monad_Reader_Trans.runReaderT(v)(s)));
          };
      };
  };
  var pMonadP = new MonadP(function () {
      return pMonadPlus;
  }, function (name) {
      return function (pinfo) {
          return P(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity)))(Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity)))(Data_Array.cons(new Options_Applicative_Types.Context(name, Data_Exists.mkExists(pinfo))))));
      };
  }, function ($149) {
      return P(Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_State_Trans.monadStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity))))($149));
  }, P(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity)))(Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity)))(Data_Array.drop(1)))), function (i) {
      return function (v) {
          return function (p) {
              return function ($150) {
                  return P(Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_State_Trans.monadStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity))))(Options_Applicative_Types.MissingError.create(i)(Options_Applicative_Types.SomeParser.create(Data_Exists.mkExists(p)))))(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity)))))($150));
              };
          };
      };
  }, P(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity)))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Control_Monad_Reader_Trans.monadReaderT(Data_Identity.monadIdentity))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Identity.monadIdentity))))), function (e) {
      return function (v) {
          return errorP(pMonadP)(e);
      };
  });
  var enterContext = function (dict) {
      return dict.enterContext;
  };
  var contextNames = function (ns) {
      var go = function (v) {
          return v.value0;
      };
      return Data_Array.reverse(Data_Functor.map(Data_Functor.functorArray)(go)(ns));
  };
  var complResultMonad = new Control_Monad.Monad(function () {
      return complResultApplicative;
  }, function () {
      return complResultBind;
  });
  var complResultFunctor = new Data_Functor.Functor(Control_Monad.liftM1(complResultMonad));
  var complResultBind = new Control_Bind.Bind(function () {
      return complResultApply;
  }, function (m) {
      return function (f) {
          if (m instanceof ComplResult) {
              return f(m.value0);
          };
          if (m instanceof ComplParser) {
              return new ComplParser(m.value0, m.value1);
          };
          if (m instanceof ComplOption) {
              return new ComplOption(m.value0);
          };
          throw new Error("Failed pattern match at Options.Applicative.Internal line 143, column 14 - line 146, column 35: " + [ m.constructor.name ]);
      };
  });
  var complResultApply = new Control_Apply.Apply(function () {
      return complResultFunctor;
  }, Control_Monad.ap(complResultMonad));
  var complResultApplicative = new Control_Applicative.Applicative(function () {
      return complResultApply;
  }, ComplResult.create);
  var completionFunctor = new Data_Functor.Functor(function (f) {
      return function (v) {
          return Completion(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Reader_Trans.functorReaderT(complResultFunctor)))(f)(v));
      };
  });
  var completionAlt = new Control_Alt.Alt(function () {
      return completionFunctor;
  }, function (v) {
      return function (v1) {
          return Completion(Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Options_Applicative_Types.parseErrorSemigroup)(Control_Monad_Reader_Trans.monadReaderT(complResultMonad)))(v)(v1));
      };
  });
  var completionApply = new Control_Apply.Apply(function () {
      return completionFunctor;
  }, function (v) {
      return function (v1) {
          return Completion(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Control_Monad_Reader_Trans.monadReaderT(complResultMonad)))(v)(v1));
      };
  });
  var completionApplicative = new Control_Applicative.Applicative(function () {
      return completionApply;
  }, function (a) {
      return Completion(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Reader_Trans.monadReaderT(complResultMonad)))(a));
  });
  var completionBind = new Control_Bind.Bind(function () {
      return completionApply;
  }, function (v) {
      return function (k) {
          return Completion(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(complResultMonad)))(v)(function (a) {
              var v1 = k(a);
              return v1;
          }));
      };
  });
  var completionMonad = new Control_Monad.Monad(function () {
      return completionApplicative;
  }, function () {
      return completionBind;
  });
  var completionPlus = new Control_Plus.Plus(function () {
      return completionAlt;
  }, Control_Plus.empty(Control_Monad_Except_Trans.plusExceptT(Options_Applicative_Types.parseErrorMonoid)(Control_Monad_Reader_Trans.monadReaderT(complResultMonad))));
  var completionAlternative = new Control_Alternative.Alternative(function () {
      return completionApplicative;
  }, function () {
      return completionPlus;
  });
  var completionMonadZero = new Control_MonadZero.MonadZero(function () {
      return completionAlternative;
  }, function () {
      return completionMonad;
  });
  var completionMonadPlus = new Control_MonadPlus.MonadPlus(function () {
      return completionMonadZero;
  });
  var completionMonadP = new MonadP(function () {
      return completionMonadPlus;
  }, function (v) {
      return function (v1) {
          return Control_Applicative.pure(completionApplicative)(Data_Unit.unit);
      };
  }, function ($151) {
      return Completion(Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_Reader_Trans.monadReaderT(complResultMonad)))($151));
  }, Control_Applicative.pure(completionApplicative)(Data_Unit.unit), function (v) {
      return function (a) {
          return function (p) {
              return function (v1) {
                  return Completion(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Reader_Trans.monadReaderT(complResultMonad))(Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(complResultMonad)(new ComplParser(Options_Applicative_Types.SomeParser.create(Data_Exists.mkExists(p)), a))));
              };
          };
      };
  }, Completion(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Reader_Trans.monadReaderT(complResultMonad))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(complResultMonad)))), function (v) {
      return function ($152) {
          return Completion(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Reader_Trans.monadReaderT(complResultMonad))(Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(complResultMonad)(ComplOption.create($152))));
      };
  });
  var bimapTStep = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof TNil) {
                  return TNil.value;
              };
              if (v2 instanceof TCons) {
                  return new TCons(v(v2.value0), v1(v2.value1));
              };
              throw new Error("Failed pattern match at Options.Applicative.Internal line 201, column 1 - line 201, column 77: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var listTFunctor = function (dictMonad) {
      return new Data_Functor.Functor(function (f) {
          return function ($153) {
              return ListT(Control_Monad.liftM1(dictMonad)(bimapTStep(f)(Data_Functor.map(listTFunctor(dictMonad))(f)))(stepListT($153)));
          };
      });
  };
  var listTAlt = function (dictMonad) {
      return new Control_Alt.Alt(function () {
          return listTFunctor(dictMonad);
      }, function (xs) {
          return function (ys) {
              return ListT(Control_Bind.bind(dictMonad.Bind1())(stepListT(xs))(function (v) {
                  if (v instanceof TNil) {
                      return stepListT(ys);
                  };
                  if (v instanceof TCons) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(new TCons(v.value0, Control_Alt.alt(listTAlt(dictMonad))(v.value1)(ys)));
                  };
                  throw new Error("Failed pattern match at Options.Applicative.Internal line 242, column 5 - line 244, column 49: " + [ v.constructor.name ]);
              }));
          };
      });
  };
  var listTPlus = function (dictMonad) {
      return new Control_Plus.Plus(function () {
          return listTAlt(dictMonad);
      }, Control_Applicative.pure(dictMonad.Applicative0())(TNil.value));
  };
  var hoistList = function (dictMonad) {
      return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (x) {
          return function (xt) {
              return Control_Applicative.pure(dictMonad.Applicative0())(new TCons(x, xt));
          };
      })(Control_Plus.empty(listTPlus(dictMonad)));
  };
  var listTMonadTrans = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      return function ($154) {
          return ListT(Control_Monad.liftM1(dictMonad)(function (v) {
              return new TCons(v, Control_Plus.empty(listTPlus(dictMonad)));
          })($154));
      };
  });
  var cut = function (dictMonad) {
      return NondetT(Control_Monad_Trans_Class.lift(listTMonadTrans)(Control_Monad_State_Trans.monadStateT(dictMonad))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(dictMonad))(true)));
  };
  var nondetTMonadTrans = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      return function ($155) {
          return NondetT(Control_Monad_Trans_Class.lift(listTMonadTrans)(Control_Monad_State_Trans.monadStateT(dictMonad))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(dictMonad)($155)));
      };
  });
  var listTMonad = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return listTApplicative(dictMonad);
      }, function () {
          return listTBind(dictMonad);
      });
  };
  var listTBind = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return listTApply(dictMonad);
      }, function (xs) {
          return function (f) {
              return ListT(Control_Bind.bind(dictMonad.Bind1())(stepListT(xs))(function (v) {
                  if (v instanceof TNil) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(TNil.value);
                  };
                  if (v instanceof TCons) {
                      return stepListT(Control_Alt.alt(listTAlt(dictMonad))(f(v.value0))(Control_Bind.bind(listTBind(dictMonad))(v.value1)(f)));
                  };
                  throw new Error("Failed pattern match at Options.Applicative.Internal line 233, column 5 - line 235, column 53: " + [ v.constructor.name ]);
              }));
          };
      });
  };
  var listTApply = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return listTFunctor(dictMonad);
      }, Control_Monad.ap(listTMonad(dictMonad)));
  };
  var listTApplicative = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return listTApply(dictMonad);
      }, function ($156) {
          return hoistList(dictMonad)(Control_Applicative.pure(Control_Applicative.applicativeArray)($156));
      });
  };
  var listTAlternative = function (dictMonad) {
      return new Control_Alternative.Alternative(function () {
          return listTApplicative(dictMonad);
      }, function () {
          return listTPlus(dictMonad);
      });
  };
  var listTMonadZero = function (dictMonad) {
      return new Control_MonadZero.MonadZero(function () {
          return listTAlternative(dictMonad);
      }, function () {
          return listTMonad(dictMonad);
      });
  };
  var nondetTAltOp = function (dictMonad) {
      return function (m1) {
          return function (m2) {
              return NondetT(Control_Alt.alt(listTAlt(Control_Monad_State_Trans.monadStateT(dictMonad)))(runNondetT(m1))(Control_Bind.bind(listTBind(Control_Monad_State_Trans.monadStateT(dictMonad)))(Control_Monad_Trans_Class.lift(listTMonadTrans)(Control_Monad_State_Trans.monadStateT(dictMonad))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(dictMonad))))(function (v) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(listTBind(Control_Monad_State_Trans.monadStateT(dictMonad)))(Control_MonadZero.guard(listTMonadZero(Control_Monad_State_Trans.monadStateT(dictMonad)))(!v))(function () {
                      return runNondetT(m2);
                  });
              })));
          };
      };
  };
  var nondetTFunctor = function (dictMonad) {
      return new Data_Functor.Functor(function (f) {
          return function ($157) {
              return NondetT(Data_Functor.map(listTFunctor(Control_Monad_State_Trans.monadStateT(dictMonad)))(f)(runNondetT($157)));
          };
      });
  };
  var nondetTAlt = function (dictMonad) {
      return new Control_Alt.Alt(function () {
          return nondetTFunctor(dictMonad);
      }, function (v) {
          return function (v1) {
              return Control_Alt.alt(listTAlt(Control_Monad_State_Trans.monadStateT(dictMonad)))(v)(v1);
          };
      });
  };
  var nondetTPlus = function (dictMonad) {
      return new Control_Plus.Plus(function () {
          return nondetTAlt(dictMonad);
      }, Control_Plus.empty(listTPlus(Control_Monad_State_Trans.monadStateT(dictMonad))));
  };
  var nondetTApply = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return nondetTFunctor(dictMonad);
      }, function (v) {
          return function (v1) {
              return Control_Apply.apply(listTApply(Control_Monad_State_Trans.monadStateT(dictMonad)))(v)(v1);
          };
      });
  };
  var nondetTApplicative = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return nondetTApply(dictMonad);
      }, function ($158) {
          return NondetT(Control_Applicative.pure(listTApplicative(Control_Monad_State_Trans.monadStateT(dictMonad)))($158));
      });
  };
  var nondetTBind = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return nondetTApply(dictMonad);
      }, function (v) {
          return function (f) {
              return NondetT(Control_Bind.bind(listTBind(Control_Monad_State_Trans.monadStateT(dictMonad)))(v)(function ($159) {
                  return runNondetT(f($159));
              }));
          };
      });
  };
  var takeListT = function (dictMonad) {
      return function (v) {
          if (v === 0) {
              return Data_Function["const"](Control_Plus.empty(listTPlus(dictMonad)));
          };
          return function ($160) {
              return ListT(Control_Monad.liftM1(dictMonad)(bimapTStep(Control_Category.identity(Control_Category.categoryFn))(takeListT(dictMonad)(v - 1 | 0)))(stepListT($160)));
          };
      };
  };
  var disamb = function (dictMonad) {
      return function (allow_amb) {
          return function (xs) {
              return Control_Bind.bind(dictMonad.Bind1())((function (v) {
                  return Control_Monad_State_Trans.evalStateT(((dictMonad.Bind1()).Apply0()).Functor0())(v)(false);
              })(runListT(Control_Monad_State_Trans.monadStateT(dictMonad))(takeListT(Control_Monad_State_Trans.monadStateT(dictMonad))((function () {
                  if (allow_amb) {
                      return 1;
                  };
                  return 2;
              })())(runNondetT(xs)))))(function (v) {
                  return Control_Applicative.pure(dictMonad.Applicative0())((function () {
                      if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                          return new Data_Maybe.Just(v.value0);
                      };
                      return Data_Maybe.Nothing.value;
                  })());
              });
          };
      };
  };
  exports["MonadP"] = MonadP;
  exports["enterContext"] = enterContext;
  exports["exitContext"] = exitContext;
  exports["getPrefs"] = getPrefs;
  exports["missingArgP"] = missingArgP;
  exports["errorP"] = errorP;
  exports["exitP"] = exitP;
  exports["hoistMaybe"] = hoistMaybe;
  exports["hoistEither"] = hoistEither;
  exports["runReadM"] = runReadM;
  exports["withReadM"] = withReadM;
  exports["runP"] = runP;
  exports["runCompletion"] = runCompletion;
  exports["contextNames"] = contextNames;
  exports["takeListT"] = takeListT;
  exports["runListT"] = runListT;
  exports["cut"] = cut;
  exports["nondetTAltOp"] = nondetTAltOp;
  exports["disamb"] = disamb;
  exports["pFunctor"] = pFunctor;
  exports["pApply"] = pApply;
  exports["pApplicative"] = pApplicative;
  exports["pAlt"] = pAlt;
  exports["pPlus"] = pPlus;
  exports["pAlternative"] = pAlternative;
  exports["pBind"] = pBind;
  exports["pMonad"] = pMonad;
  exports["pMonadZero"] = pMonadZero;
  exports["pMonadPlus"] = pMonadPlus;
  exports["pMonadP"] = pMonadP;
  exports["completionFunctor"] = completionFunctor;
  exports["completionApply"] = completionApply;
  exports["completionApplicative"] = completionApplicative;
  exports["completionAlt"] = completionAlt;
  exports["completionPlus"] = completionPlus;
  exports["completionAlternative"] = completionAlternative;
  exports["completionBind"] = completionBind;
  exports["completionMonad"] = completionMonad;
  exports["completionMonadZero"] = completionMonadZero;
  exports["completionMonadPlus"] = completionMonadPlus;
  exports["completionMonadP"] = completionMonadP;
  exports["listTFunctor"] = listTFunctor;
  exports["listTApply"] = listTApply;
  exports["listTApplicative"] = listTApplicative;
  exports["listTBind"] = listTBind;
  exports["listTMonad"] = listTMonad;
  exports["listTAlt"] = listTAlt;
  exports["listTPlus"] = listTPlus;
  exports["listTAlternative"] = listTAlternative;
  exports["listTMonadTrans"] = listTMonadTrans;
  exports["listTMonadZero"] = listTMonadZero;
  exports["nondetTFunctor"] = nondetTFunctor;
  exports["nondetTApply"] = nondetTApply;
  exports["nondetTApplicative"] = nondetTApplicative;
  exports["nondetTBind"] = nondetTBind;
  exports["nondetTAlt"] = nondetTAlt;
  exports["nondetTPlus"] = nondetTPlus;
  exports["nondetTMonadTrans"] = nondetTMonadTrans;
})(PS["Options.Applicative.Internal"] = PS["Options.Applicative.Internal"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Exists = PS["Data.Exists"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_String = PS["Data.String"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Options_Applicative_Internal = PS["Options.Applicative.Internal"];
  var Options_Applicative_Internal_Utils = PS["Options.Applicative.Internal.Utils"];
  var Options_Applicative_Types = PS["Options.Applicative.Types"];
  var Prelude = PS["Prelude"];                 
  var OptWord = (function () {
      function OptWord(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      OptWord.create = function (value0) {
          return function (value1) {
              return new OptWord(value0, value1);
          };
      };
      return OptWord;
  })();
  var simplify = function (v) {
      if (v instanceof Options_Applicative_Types.Leaf) {
          return new Options_Applicative_Types.Leaf(v.value0);
      };
      if (v instanceof Options_Applicative_Types.MultNode) {
          var remove_mult = function (v1) {
              if (v1 instanceof Options_Applicative_Types.MultNode) {
                  return v1.value0;
              };
              return [ v1 ];
          };
          var v1 = Control_Bind.bind(Control_Bind.bindArray)(v.value0)(function ($230) {
              return remove_mult(simplify($230));
          });
          if (v1.length === 1) {
              return v1[0];
          };
          return new Options_Applicative_Types.MultNode(v1);
      };
      if (v instanceof Options_Applicative_Types.AltNode) {
          var remove_alt = function (v1) {
              if (v1 instanceof Options_Applicative_Types.AltNode) {
                  return v1.value0;
              };
              if (v1 instanceof Options_Applicative_Types.MultNode && v1.value0.length === 0) {
                  return [  ];
              };
              return [ v1 ];
          };
          var v1 = Control_Bind.bind(Control_Bind.bindArray)(v.value0)(function ($231) {
              return remove_alt(simplify($231));
          });
          if (v1.length === 0) {
              return new Options_Applicative_Types.MultNode([  ]);
          };
          if (v1.length === 1) {
              return v1[0];
          };
          return new Options_Applicative_Types.AltNode(v1);
      };
      throw new Error("Failed pattern match at Options.Applicative.Common line 279, column 1 - line 279, column 45: " + [ v.constructor.name ]);
  };
  var showOption = function (v) {
      if (v instanceof Options_Applicative_Types.OptLong) {
          return "--" + v.value0;
      };
      if (v instanceof Options_Applicative_Types.OptShort) {
          return Data_String_CodeUnits.fromCharArray([ "-", v.value0 ]);
      };
      throw new Error("Failed pattern match at Options.Applicative.Common line 42, column 1 - line 42, column 32: " + [ v.constructor.name ]);
  };
  var parseWord = (function () {
      var go = function (v) {
          if (v instanceof Data_List_Types.Cons && (v.value0 === "-" && (v.value1 instanceof Data_List_Types.Cons && v.value1.value0 === "-"))) {
              return Data_Maybe.Just.create((function () {
                  var v1 = (function () {
                      var v2 = Data_List.span(function (v3) {
                          return v3 !== "=";
                      })(v.value1.value1);
                      if (v2.rest instanceof Data_List_Types.Nil) {
                          return new Data_Tuple.Tuple(v.value1.value1, Data_Maybe.Nothing.value);
                      };
                      if (v2.rest instanceof Data_List_Types.Cons) {
                          return new Data_Tuple.Tuple(v2.init, new Data_Maybe.Just(v2.rest.value1));
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Common line 106, column 23 - line 108, column 70: " + [ v2.constructor.name ]);
                  })();
                  return new OptWord(new Options_Applicative_Types.OptLong(Data_String_CodeUnits.fromCharArray(Data_Array.fromFoldable(Data_List_Types.foldableList)(v1.value0))), Data_Functor.map(Data_Maybe.functorMaybe)(function ($232) {
                      return Data_String_CodeUnits.fromCharArray(Data_Array.fromFoldable(Data_List_Types.foldableList)($232));
                  })(v1.value1));
              })());
          };
          if (v instanceof Data_List_Types.Cons && v.value0 === "-") {
              if (v.value1 instanceof Data_List_Types.Nil) {
                  return Data_Maybe.Nothing.value;
              };
              if (v.value1 instanceof Data_List_Types.Cons) {
                  return Data_Maybe.Just.create((function () {
                      var arg = Data_Functor.voidRight(Data_Maybe.functorMaybe)(v.value1.value1)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(!Data_List["null"](v.value1.value1)));
                      return new OptWord(new Options_Applicative_Types.OptShort(v.value1.value0), Data_Functor.map(Data_Maybe.functorMaybe)(function ($233) {
                          return Data_String_CodeUnits.fromCharArray(Data_Array.fromFoldable(Data_List_Types.foldableList)($233));
                      })(arg));
                  })());
              };
              throw new Error("Failed pattern match at Options.Applicative.Common line 110, column 25 - line 114, column 79: " + [ v.value1.constructor.name ]);
          };
          return Data_Maybe.Nothing.value;
      };
      return function ($234) {
          return go(Data_List.fromFoldable(Data_Foldable.foldableArray)(Data_String_CodeUnits.toCharArray($234)));
      };
  })();
  var parseError = function (dictMonadP) {
      return function (arg) {
          return function (p) {
              return Options_Applicative_Internal.errorP(dictMonadP)(Options_Applicative_Types.UnexpectedError.create(arg)(Options_Applicative_Types.SomeParser.create(Data_Exists.mkExists(p))));
          };
      };
  };
  var optionNames = function (v) {
      if (v instanceof Options_Applicative_Types.OptReader) {
          return v.value0;
      };
      if (v instanceof Options_Applicative_Types.FlagReader) {
          return v.value0;
      };
      return [  ];
  };
  var liftOpt = Options_Applicative_Types.OptP.create;
  var isOptionPrefix = function (v) {
      return function (v1) {
          if (v instanceof Options_Applicative_Types.OptShort && v1 instanceof Options_Applicative_Types.OptShort) {
              return v.value0 === v1.value0;
          };
          if (v instanceof Options_Applicative_Types.OptLong && v1 instanceof Options_Applicative_Types.OptLong) {
              return Options_Applicative_Internal_Utils.startsWith(v.value0)(v1.value0);
          };
          return false;
      };
  };
  var optMatches = function (dictMonadP) {
      return function (disambiguate) {
          return function (opt) {
              return function (v) {
                  var is_short = function (v1) {
                      if (v1 instanceof Options_Applicative_Types.OptShort) {
                          return true;
                      };
                      if (v1 instanceof Options_Applicative_Types.OptLong) {
                          return false;
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Common line 89, column 5 - line 89, column 33: " + [ v1.constructor.name ]);
                  };
                  var has_name = function (a) {
                      if (disambiguate) {
                          return Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(isOptionPrefix(a));
                      };
                      if (Data_Boolean.otherwise) {
                          return Data_Foldable.elem(Data_Foldable.foldableArray)(Options_Applicative_Types.optNameEq)(a);
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Common line 92, column 5 - line 94, column 27: " + [ a.constructor.name ]);
                  };
                  var errorFor = function (name) {
                      return function (msg) {
                          return "option " + (showOption(name) + (": " + msg));
                      };
                  };
                  if (opt instanceof Options_Applicative_Types.OptReader) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(has_name(v.value0)(opt.value0)))(function () {
                          return Data_Maybe.Just.create(Control_Bind.bind(Control_Monad_State_Trans.bindStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0())))(function (v1) {
                              var missing_arg = Options_Applicative_Internal.missingArgP(dictMonadP)(opt.value2(showOption(v.value0)))((Data_Newtype.un(Options_Applicative_Types.newtypeCReader)(Options_Applicative_Types.CReader)(opt.value1)).crCompleter);
                              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()))((function () {
                                  var v2 = Data_Maybe.maybe(v1)(function (v3) {
                                      return new Data_List_Types.Cons(v3, v1);
                                  })(v.value1);
                                  if (v2 instanceof Data_List_Types.Nil) {
                                      return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0())(missing_arg);
                                  };
                                  if (v2 instanceof Data_List_Types.Cons) {
                                      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()))(new Data_Tuple.Tuple(v2.value0, v2.value1));
                                  };
                                  throw new Error("Failed pattern match at Options.Applicative.Common line 67, column 27 - line 69, column 56: " + [ v2.constructor.name ]);
                              })())(function (v2) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()))(v2.value1))(function () {
                                      return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0())(Options_Applicative_Internal.runReadM(dictMonadP)(Options_Applicative_Internal.withReadM(errorFor(v.value0))((Data_Newtype.un(Options_Applicative_Types.newtypeCReader)(Options_Applicative_Types.CReader)(opt.value1)).crReader))(v2.value0));
                                  });
                              });
                          }));
                      });
                  };
                  if (opt instanceof Options_Applicative_Types.FlagReader) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(has_name(v.value0)(opt.value0)))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(is_short(v.value0) || Data_Maybe.isNothing(v.value1)))(function () {
                              return Data_Maybe.Just.create(Control_Bind.bind(Control_Monad_State_Trans.bindStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0())))(function (v1) {
                                  var val$prime = Data_Functor.map(Data_Maybe.functorMaybe)(function ($235) {
                                      return (function (s) {
                                          return Data_Array.cons("-")(s);
                                      })(Data_String_CodeUnits.toCharArray($235));
                                  })(v.value1);
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()))(Data_Maybe.maybe(v1)(function ($236) {
                                      return Data_Function.flip(Data_List_Types.Cons.create)(v1)(Data_String_CodeUnits.fromCharArray($236));
                                  })(val$prime)))(function () {
                                      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()))(opt.value1);
                                  });
                              }));
                          });
                      });
                  };
                  return Data_Maybe.Nothing.value;
              };
          };
      };
  };
  var isArg = function (v) {
      if (v instanceof Options_Applicative_Types.ArgReader) {
          return true;
      };
      return false;
  };
  var evalParser = function (v) {
      if (v instanceof Options_Applicative_Types.NilP) {
          return v.value0;
      };
      if (v instanceof Options_Applicative_Types.OptP) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Options_Applicative_Types.MultP) {
          return Data_Exists.runExists(function (v1) {
              return Control_Apply.apply(Data_Maybe.applyMaybe)(evalParser(v1.value0))(evalParser(v1.value1));
          })(v.value0);
      };
      if (v instanceof Options_Applicative_Types.AltP) {
          return Control_Alt.alt(Data_Maybe.altMaybe)(evalParser(v.value0))(evalParser(v.value1));
      };
      if (v instanceof Options_Applicative_Types.BindP) {
          return Control_Monad_Free["resume'"](function (p) {
              return function (k) {
                  return Control_Bind.bind(Data_Maybe.bindMaybe)(evalParser(p))(function ($237) {
                      return evalParser(Options_Applicative_Types.BindP.create(k($237)));
                  });
              };
          })(Data_Maybe.Just.create)(v.value0);
      };
      throw new Error("Failed pattern match at Options.Applicative.Common line 219, column 1 - line 219, column 44: " + [ v.constructor.name ]);
  };
  var searchParser = function (dictMonad) {
      return function (v) {
          return function (v1) {
              if (v1 instanceof Options_Applicative_Types.NilP) {
                  return Control_Plus.empty(Options_Applicative_Internal.nondetTPlus(dictMonad));
              };
              if (v1 instanceof Options_Applicative_Types.OptP) {
                  return v(v1.value0);
              };
              if (v1 instanceof Options_Applicative_Types.MultP) {
                  return Data_Exists.runExists(function (v2) {
                      var b = Data_Functor.mapFlipped(Options_Applicative_Internal.nondetTFunctor(dictMonad))(searchParser(dictMonad)(v)(v2.value1))(function (p2$prime) {
                          return Control_Apply.apply(Options_Applicative_Types.parserApply)(v2.value0)(p2$prime);
                      });
                      var a = Data_Functor.mapFlipped(Options_Applicative_Internal.nondetTFunctor(dictMonad))(searchParser(dictMonad)(v)(v2.value0))(function (p1$prime) {
                          return Control_Apply.apply(Options_Applicative_Types.parserApply)(p1$prime)(v2.value1);
                      });
                      return Options_Applicative_Internal.nondetTAltOp(dictMonad)(a)(b);
                  })(v1.value0);
              };
              if (v1 instanceof Options_Applicative_Types.AltP) {
                  return Data_Foldable.oneOf(Data_Foldable.foldableArray)(Options_Applicative_Internal.nondetTPlus(dictMonad))([ searchParser(dictMonad)(v)(v1.value0), searchParser(dictMonad)(v)(v1.value1) ]);
              };
              if (v1 instanceof Options_Applicative_Types.BindP) {
                  return Control_Monad_Free["resume'"](function (p) {
                      return function (k) {
                          return Data_Foldable.oneOf(Data_Foldable.foldableArray)(Options_Applicative_Internal.nondetTPlus(dictMonad))([ Data_Functor.mapFlipped(Options_Applicative_Internal.nondetTFunctor(dictMonad))(searchParser(dictMonad)(v)(p))(function (p$prime) {
                              return Options_Applicative_Types.BindP.create(Control_Bind.bind(Control_Monad_Free.freeBind)(Control_Monad_Free.liftF(p$prime))(k));
                          }), (function () {
                              var v2 = evalParser(p);
                              if (v2 instanceof Data_Maybe.Nothing) {
                                  return Control_Plus.empty(Options_Applicative_Internal.nondetTPlus(dictMonad));
                              };
                              if (v2 instanceof Data_Maybe.Just) {
                                  return searchParser(dictMonad)(v)(Options_Applicative_Types.BindP.create(k(v2.value0)));
                              };
                              throw new Error("Failed pattern match at Options.Applicative.Common line 134, column 7 - line 136, column 49: " + [ v2.constructor.name ]);
                          })() ]);
                      };
                  })(Data_Function["const"](Control_Plus.empty(Options_Applicative_Internal.nondetTPlus(dictMonad))))(v1.value0);
              };
              throw new Error("Failed pattern match at Options.Applicative.Common line 117, column 1 - line 119, column 49: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var searchOpt = function (dictMonadP) {
      return function (pprefs) {
          return function (w) {
              return searchParser(Control_Monad_State_Trans.monadStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()))(function (opt) {
                  var disambiguate = (Data_Newtype.un(Options_Applicative_Types.parserPrefsNewtype)(Options_Applicative_Types.ParserPrefs)(pprefs)).prefDisambiguate && Data_Ord.greaterThan(Options_Applicative_Types.optVisibilityOrd)(Options_Applicative_Types.optVisibility(opt))(Options_Applicative_Types.Internal.value);
                  var v = optMatches(dictMonadP)(disambiguate)((Data_Newtype.un(Options_Applicative_Types.optionNewtype)(Options_Applicative_Types.Option)(opt)).optMain)(w);
                  if (v instanceof Data_Maybe.Just) {
                      return Control_Monad_Trans_Class.lift(Options_Applicative_Internal.nondetTMonadTrans)(Control_Monad_State_Trans.monadStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()))(Data_Functor.map(Control_Monad_State_Trans.functorStateT((((((dictMonadP.MonadPlus0()).MonadZero0()).Alternative1()).Plus1()).Alt0()).Functor0()))(Control_Applicative.pure(Options_Applicative_Types.parserApplicative))(v.value0));
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      return Control_Plus.empty(Options_Applicative_Internal.nondetTPlus(Control_Monad_State_Trans.monadStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0())));
                  };
                  throw new Error("Failed pattern match at Options.Applicative.Common line 143, column 3 - line 145, column 21: " + [ v.constructor.name ]);
              });
          };
      };
  };
  var stepParser = function (dictMonadP) {
      return function (pprefs) {
          return function (v) {
              return function (arg) {
                  return function (p) {
                      if (v instanceof Options_Applicative_Types.AllPositionals) {
                          return searchArg(dictMonadP)(pprefs)(arg)(p);
                      };
                      if (v instanceof Options_Applicative_Types.ForwardOptions) {
                          var v1 = parseWord(arg);
                          if (v1 instanceof Data_Maybe.Just) {
                              return Control_Alt.alt(Options_Applicative_Internal.nondetTAlt(Control_Monad_State_Trans.monadStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0())))(searchOpt(dictMonadP)(pprefs)(v1.value0)(p))(searchArg(dictMonadP)(pprefs)(arg)(p));
                          };
                          if (v1 instanceof Data_Maybe.Nothing) {
                              return searchArg(dictMonadP)(pprefs)(arg)(p);
                          };
                          throw new Error("Failed pattern match at Options.Applicative.Common line 173, column 42 - line 175, column 36: " + [ v1.constructor.name ]);
                      };
                      var v1 = parseWord(arg);
                      if (v1 instanceof Data_Maybe.Just) {
                          return searchOpt(dictMonadP)(pprefs)(v1.value0)(p);
                      };
                      if (v1 instanceof Data_Maybe.Nothing) {
                          return searchArg(dictMonadP)(pprefs)(arg)(p);
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Common line 176, column 29 - line 178, column 36: " + [ v1.constructor.name ]);
                  };
              };
          };
      };
  };
  var searchArg = function (dictMonadP) {
      return function (prefs) {
          return function (arg) {
              return searchParser(Control_Monad_State_Trans.monadStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()))(function (opt) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Options_Applicative_Internal.nondetTBind(Control_Monad_State_Trans.monadStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0())))(Control_Applicative.when(Options_Applicative_Internal.nondetTApplicative(Control_Monad_State_Trans.monadStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0())))(isArg((Data_Newtype.un(Options_Applicative_Types.optionNewtype)(Options_Applicative_Types.Option)(opt)).optMain))(Options_Applicative_Internal.cut(Control_Monad_State_Trans.monadStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()))))(function () {
                      var v = (Data_Newtype.un(Options_Applicative_Types.optionNewtype)(Options_Applicative_Types.Option)(opt)).optMain;
                      if (v instanceof Options_Applicative_Types.CmdReader) {
                          var v1 = new Data_Tuple.Tuple(v.value2(arg), (Data_Newtype.un(Options_Applicative_Types.parserPrefsNewtype)(Options_Applicative_Types.ParserPrefs)(prefs)).prefBacktrack);
                          if (v1.value0 instanceof Data_Maybe.Just && v1.value1 instanceof Options_Applicative_Types.NoBacktrack) {
                              return Control_Monad_Trans_Class.lift(Options_Applicative_Internal.nondetTMonadTrans)(Control_Monad_State_Trans.monadStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()))(Control_Bind.bind(Control_Monad_State_Trans.bindStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()))(Control_Apply.applyFirst(Control_Monad_State_Trans.applyStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0())))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()))(Data_List_Types.Nil.value)))(function (v2) {
                                  return Data_Functor.map(Control_Monad_State_Trans.functorStateT((((((dictMonadP.MonadPlus0()).MonadZero0()).Alternative1()).Plus1()).Alt0()).Functor0()))(Control_Applicative.pure(Options_Applicative_Types.parserApplicative))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0())(Control_Apply.applyFirst(((((dictMonadP.MonadPlus0()).MonadZero0()).Alternative1()).Applicative0()).Apply0())(Control_Apply.applySecond(((((dictMonadP.MonadPlus0()).MonadZero0()).Alternative1()).Applicative0()).Apply0())(Options_Applicative_Internal.enterContext(dictMonadP)(arg)(v1.value0.value0))(runParserInfo(dictMonadP)(v1.value0.value0)(v2)))(Options_Applicative_Internal.exitContext(dictMonadP))));
                              }));
                          };
                          if (v1.value0 instanceof Data_Maybe.Just && v1.value1 instanceof Options_Applicative_Types.Backtrack) {
                              return Data_Functor.map(Options_Applicative_Internal.nondetTFunctor(Control_Monad_State_Trans.monadStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0())))(Control_Applicative.pure(Options_Applicative_Types.parserApplicative))(Control_Monad_Trans_Class.lift(Options_Applicative_Internal.nondetTMonadTrans)(Control_Monad_State_Trans.monadStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()))(Control_Monad_State_Trans.StateT(function (args) {
                                  return Control_Apply.applyFirst(((((dictMonadP.MonadPlus0()).MonadZero0()).Alternative1()).Applicative0()).Apply0())(Control_Apply.applySecond(((((dictMonadP.MonadPlus0()).MonadZero0()).Alternative1()).Applicative0()).Apply0())(Options_Applicative_Internal.enterContext(dictMonadP)(arg)(v1.value0.value0))(runParser(dictMonadP)((Data_Newtype.un(Options_Applicative_Types.parserInfoNewtype)(Options_Applicative_Types.ParserInfo)(v1.value0.value0)).infoPolicy)(Options_Applicative_Types.CmdStart.value)((Data_Newtype.un(Options_Applicative_Types.parserInfoNewtype)(Options_Applicative_Types.ParserInfo)(v1.value0.value0)).infoParser)(args)))(Options_Applicative_Internal.exitContext(dictMonadP));
                              })));
                          };
                          if (v1.value0 instanceof Data_Maybe.Just && v1.value1 instanceof Options_Applicative_Types.SubparserInline) {
                              return Control_Monad_Trans_Class.lift(Options_Applicative_Internal.nondetTMonadTrans)(Control_Monad_State_Trans.monadStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()))(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0())(Options_Applicative_Internal.enterContext(dictMonadP)(arg)(v1.value0.value0)))(function () {
                                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()))((Data_Newtype.un(Options_Applicative_Types.parserInfoNewtype)(Options_Applicative_Types.ParserInfo)(v1.value0.value0)).infoParser);
                              }));
                          };
                          if (v1.value0 instanceof Data_Maybe.Nothing) {
                              return Control_Plus.empty(Options_Applicative_Internal.nondetTPlus(Control_Monad_State_Trans.monadStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0())));
                          };
                          throw new Error("Failed pattern match at Options.Applicative.Common line 153, column 7 - line 165, column 38: " + [ v1.constructor.name ]);
                      };
                      if (v instanceof Options_Applicative_Types.ArgReader) {
                          return Data_Functor.map(Options_Applicative_Internal.nondetTFunctor(Control_Monad_State_Trans.monadStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0())))(Control_Applicative.pure(Options_Applicative_Types.parserApplicative))(Control_Monad_Trans_Class.lift(Options_Applicative_Internal.nondetTMonadTrans)(Control_Monad_State_Trans.monadStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0())(Options_Applicative_Internal.runReadM(dictMonadP)((Data_Newtype.un(Options_Applicative_Types.newtypeCReader)(Options_Applicative_Types.CReader)(v.value0)).crReader)(arg))));
                      };
                      return Control_Plus.empty(Options_Applicative_Internal.nondetTPlus(Control_Monad_State_Trans.monadStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0())));
                  });
              });
          };
      };
  };
  var runParserInfo = function (dictMonadP) {
      return function (i) {
          return runParserFully(dictMonadP)((Data_Newtype.un(Options_Applicative_Types.parserInfoNewtype)(Options_Applicative_Types.ParserInfo)(i)).infoPolicy)((Data_Newtype.un(Options_Applicative_Types.parserInfoNewtype)(Options_Applicative_Types.ParserInfo)(i)).infoParser);
      };
  };
  var runParserFully = function (dictMonadP) {
      return function (policy) {
          return function (p) {
              return function (args) {
                  return Control_Bind.bind((((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()).Bind1())(runParser(dictMonadP)(policy)(Options_Applicative_Types.CmdStart.value)(p)(args))(function (v) {
                      if (v.value1 instanceof Data_List_Types.Nil) {
                          return Control_Applicative.pure((((dictMonadP.MonadPlus0()).MonadZero0()).Alternative1()).Applicative0())(v.value0);
                      };
                      if (v.value1 instanceof Data_List_Types.Cons) {
                          return parseError(dictMonadP)(v.value1.value0)(Control_Applicative.pure(Options_Applicative_Types.parserApplicative)(Data_Unit.unit));
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Common line 213, column 3 - line 215, column 52: " + [ v.value1.constructor.name ]);
                  });
              };
          };
      };
  };
  var runParser = function (dictMonadP) {
      return function (policy) {
          return function (isCmdStart) {
              return function (p) {
                  return function (args) {
                      var result = Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(evalParser(p)))(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(args));
                      var newPolicy = function (a) {
                          if (policy instanceof Options_Applicative_Types.NoIntersperse) {
                              var $188 = Data_Maybe.isJust(parseWord(a));
                              if ($188) {
                                  return Options_Applicative_Types.NoIntersperse.value;
                              };
                              return Options_Applicative_Types.AllPositionals.value;
                          };
                          return policy;
                      };
                      var do_step = function (prefs) {
                          return function (arg) {
                              return function (argt) {
                                  return (function (v) {
                                      return Control_Monad_State_Trans.runStateT(v)(argt);
                                  })(Options_Applicative_Internal.disamb(Control_Monad_State_Trans.monadStateT(((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()))(!(Data_Newtype.un(Options_Applicative_Types.parserPrefsNewtype)(Options_Applicative_Types.ParserPrefs)(prefs)).prefDisambiguate)(stepParser(dictMonadP)(prefs)(policy)(arg)(p)));
                              };
                          };
                      };
                      if (args instanceof Data_List_Types.Nil) {
                          return Options_Applicative_Internal.exitP(dictMonadP)(isCmdStart)(policy)(p)(result);
                      };
                      if (args instanceof Data_List_Types.Cons && (args.value0 === "--" && Data_Eq.notEq(Options_Applicative_Types.argPolicyEq)(policy)(Options_Applicative_Types.AllPositionals.value))) {
                          return runParser(dictMonadP)(Options_Applicative_Types.AllPositionals.value)(Options_Applicative_Types.CmdCont.value)(p)(args.value1);
                      };
                      if (args instanceof Data_List_Types.Cons) {
                          return Control_Bind.bind((((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()).Bind1())(Options_Applicative_Internal.getPrefs(dictMonadP))(function (v) {
                              return Control_Bind.bind((((dictMonadP.MonadPlus0()).MonadZero0()).Monad0()).Bind1())(do_step(v)(args.value0)(args.value1))(function (v1) {
                                  if (v1.value0 instanceof Data_Maybe.Nothing) {
                                      return Control_Alt.alt(((((dictMonadP.MonadPlus0()).MonadZero0()).Alternative1()).Plus1()).Alt0())(Options_Applicative_Internal.hoistMaybe(dictMonadP.MonadPlus0())(result))(parseError(dictMonadP)(args.value0)(p));
                                  };
                                  if (v1.value0 instanceof Data_Maybe.Just) {
                                      return runParser(dictMonadP)(newPolicy(args.value0))(Options_Applicative_Types.CmdCont.value)(v1.value0.value0)(v1.value1);
                                  };
                                  throw new Error("Failed pattern match at Options.Applicative.Common line 191, column 5 - line 193, column 60: " + [ v1.value0.constructor.name ]);
                              });
                          });
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Common line 185, column 38 - line 193, column 60: " + [ args.constructor.name ]);
                  };
              };
          };
      };
  };
  var treeMapParser = function (g) {
      var has_default = function (p) {
          return Data_Maybe.isJust(evalParser(p));
      };
      var hasArg = function (v) {
          if (v instanceof Options_Applicative_Types.NilP) {
              return false;
          };
          if (v instanceof Options_Applicative_Types.OptP) {
              return isArg((Data_Newtype.un(Options_Applicative_Types.optionNewtype)(Options_Applicative_Types.Option)(v.value0)).optMain);
          };
          if (v instanceof Options_Applicative_Types.MultP) {
              return Data_Exists.runExists(function (v1) {
                  return hasArg(v1.value0) || hasArg(v1.value1);
              })(v.value0);
          };
          if (v instanceof Options_Applicative_Types.AltP) {
              return hasArg(v.value0) || hasArg(v.value1);
          };
          if (v instanceof Options_Applicative_Types.BindP) {
              return Control_Monad_Free["resume'"](function (p) {
                  return function (v1) {
                      return hasArg(p);
                  };
              })(Data_Function["const"](false))(v.value0);
          };
          throw new Error("Failed pattern match at Options.Applicative.Common line 271, column 5 - line 271, column 44: " + [ v.constructor.name ]);
      };
      var go = function (v) {
          return function (v1) {
              return function (v2) {
                  return function (v3) {
                      return function (v4) {
                          if (v4 instanceof Options_Applicative_Types.NilP) {
                              return new Options_Applicative_Types.MultNode([  ]);
                          };
                          if (v4 instanceof Options_Applicative_Types.OptP) {
                              if (Data_Ord.greaterThan(Options_Applicative_Types.optVisibilityOrd)(Options_Applicative_Types.optVisibility(v4.value0))(Options_Applicative_Types.Internal.value)) {
                                  return new Options_Applicative_Types.Leaf(v3({
                                      hinfoMulti: v,
                                      hinfoDefault: v1,
                                      hinfoUnreachableArgs: v2
                                  })(v4.value0));
                              };
                              if (Data_Boolean.otherwise) {
                                  return new Options_Applicative_Types.MultNode([  ]);
                              };
                          };
                          if (v4 instanceof Options_Applicative_Types.MultP) {
                              return Data_Exists.runExists(function (v5) {
                                  var r$prime = v2 || hasArg(v5.value0);
                                  return new Options_Applicative_Types.MultNode([ go(v)(v1)(v2)(v3)(v5.value0), go(v)(v1)(r$prime)(v3)(v5.value1) ]);
                              })(v4.value0);
                          };
                          if (v4 instanceof Options_Applicative_Types.AltP) {
                              var d$prime = v1 || (has_default(v4.value0) || has_default(v4.value1));
                              return new Options_Applicative_Types.AltNode([ go(v)(d$prime)(v2)(v3)(v4.value0), go(v)(d$prime)(v2)(v3)(v4.value1) ]);
                          };
                          if (v4 instanceof Options_Applicative_Types.BindP) {
                              return Control_Monad_Free["resume'"](function (p) {
                                  return function (k) {
                                      var go$prime = go(true)(v1)(v2)(v3)(p);
                                      var v5 = evalParser(p);
                                      if (v5 instanceof Data_Maybe.Nothing) {
                                          return go$prime;
                                      };
                                      if (v5 instanceof Data_Maybe.Just) {
                                          return new Options_Applicative_Types.MultNode([ go$prime, go(true)(v1)(v2)(v3)(Options_Applicative_Types.BindP.create(k(v5.value0))) ]);
                                      };
                                      throw new Error("Failed pattern match at Options.Applicative.Common line 266, column 12 - line 268, column 68: " + [ v5.constructor.name ]);
                                  };
                              })(Data_Function["const"](new Options_Applicative_Types.MultNode([  ])))(v4.value0);
                          };
                          throw new Error("Failed pattern match at Options.Applicative.Common line 247, column 5 - line 250, column 21: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name, v3.constructor.name, v4.constructor.name ]);
                      };
                  };
              };
          };
      };
      return function ($238) {
          return simplify(go(false)(false)(false)(g)($238));
      };
  };
  var mapParser = function (f) {
      var flatten = function (v) {
          if (v instanceof Options_Applicative_Types.Leaf) {
              return [ v.value0 ];
          };
          if (v instanceof Options_Applicative_Types.MultNode) {
              return Control_Bind.bind(Control_Bind.bindArray)(v.value0)(flatten);
          };
          if (v instanceof Options_Applicative_Types.AltNode) {
              return Control_Bind.bind(Control_Bind.bindArray)(v.value0)(flatten);
          };
          throw new Error("Failed pattern match at Options.Applicative.Common line 234, column 5 - line 234, column 27: " + [ v.constructor.name ]);
      };
      return function ($239) {
          return flatten(treeMapParser(f)($239));
      };
  };
  exports["liftOpt"] = liftOpt;
  exports["showOption"] = showOption;
  exports["runParserInfo"] = runParserInfo;
  exports["runParserFully"] = runParserFully;
  exports["runParser"] = runParser;
  exports["evalParser"] = evalParser;
  exports["mapParser"] = mapParser;
  exports["treeMapParser"] = treeMapParser;
  exports["optionNames"] = optionNames;
})(PS["Options.Applicative.Common"] = PS["Options.Applicative.Common"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_Unit = PS["Data.Unit"];
  var Options_Applicative_Common = PS["Options.Applicative.Common"];
  var Options_Applicative_Help_Chunk = PS["Options.Applicative.Help.Chunk"];
  var Options_Applicative_Types = PS["Options.Applicative.Types"];
  var Prelude = PS["Prelude"];
  var Text_PrettyPrint_Leijen = PS["Text.PrettyPrint.Leijen"];                 
  var OptionFields = function (x) {
      return x;
  };
  var FlagFields = function (x) {
      return x;
  };
  var DefaultProp = (function () {
      function DefaultProp(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      DefaultProp.create = function (value0) {
          return function (value1) {
              return new DefaultProp(value0, value1);
          };
      };
      return DefaultProp;
  })();
  var Mod = (function () {
      function Mod(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Mod.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Mod(value0, value1, value2);
              };
          };
      };
      return Mod;
  })();
  var CommandFields = function (x) {
      return x;
  };
  var HasName = function (name) {
      this.name = name;
  };
  var HasValue = function (hasValueDummy) {
      this.hasValueDummy = hasValueDummy;
  };
  var HasMetavar = function (hasMetavarDummy) {
      this.hasMetavarDummy = hasMetavarDummy;
  };
  var optionFieldsHasValue = new HasValue(function (v) {
      return Data_Unit.unit;
  });
  var optionFieldsHasMetavar = new HasMetavar(function (v) {
      return Data_Unit.unit;
  });
  var newtypeOptionFields = new Data_Newtype.Newtype(function (n) {
      return n;
  }, OptionFields);
  var optionFieldsHasName = new HasName(function (n) {
      return Data_Newtype.over(newtypeOptionFields)(newtypeOptionFields)(OptionFields)(function (fields) {
          return {
              optNames: Data_Semigroup.append(Data_Semigroup.semigroupArray)([ n ])(fields.optNames),
              optCompleter: fields.optCompleter,
              optNoArgError: fields.optNoArgError
          };
      });
  });
  var newtypeFlagFields = new Data_Newtype.Newtype(function (n) {
      return n;
  }, FlagFields);
  var newtypeCommandFields = new Data_Newtype.Newtype(function (n) {
      return n;
  }, CommandFields); 
  var name = function (dict) {
      return dict.name;
  };
  var mkCommand = function (m) {
      var v = m.value0({
          cmdCommands: [  ],
          cmdGroup: Data_Maybe.Nothing.value
      });
      return new Data_Tuple.Tuple(v.cmdGroup, new Data_Tuple.Tuple(Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.fst)(v.cmdCommands), new Data_Tuple.Tuple(function (v1) {
          return Data_Tuple.lookup(Data_Foldable.foldableArray)(Data_Eq.eqString)(v1)(v.cmdCommands);
      }, Data_Unit.unit)));
  };
  var hasValueDummy = function (dict) {
      return dict.hasValueDummy;
  };
  var hasMetavarDummy = function (dict) {
      return dict.hasMetavarDummy;
  };
  var flagFieldsHasName = new HasName(function (n) {
      return Data_Newtype.over(newtypeFlagFields)(newtypeFlagFields)(FlagFields)(function (fields) {
          return {
              flagNames: Data_Semigroup.append(Data_Semigroup.semigroupArray)([ n ])(fields.flagNames),
              flagActive: fields.flagActive
          };
      });
  });
  var defaultPropSemigroup = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return new DefaultProp(Control_Alt.alt(Data_Maybe.altMaybe)(v.value0)(v1.value0), Control_Alt.alt(Data_Maybe.altMaybe)(v.value1)(v1.value1));
      };
  });
  var modSemigroup = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return new Mod(function ($61) {
              return v1.value0(v.value0($61));
          }, Data_Semigroup.append(defaultPropSemigroup)(v1.value1)(v.value1), function ($62) {
              return v1.value2(v.value2($62));
          });
      };
  });
  var defaultPropMonoid = new Data_Monoid.Monoid(function () {
      return defaultPropSemigroup;
  }, new DefaultProp(Data_Maybe.Nothing.value, Data_Maybe.Nothing.value));
  var fieldMod = function (f) {
      return new Mod(f, Data_Monoid.mempty(defaultPropMonoid), Control_Category.identity(Control_Category.categoryFn));
  };
  var modMonoid = new Data_Monoid.Monoid(function () {
      return modSemigroup;
  }, new Mod(Control_Category.identity(Control_Category.categoryFn), Data_Monoid.mempty(defaultPropMonoid), Control_Category.identity(Control_Category.categoryFn)));
  var optionMod = Mod.create(Control_Category.identity(Control_Category.categoryFn))(Data_Monoid.mempty(defaultPropMonoid));
  var internal = optionMod(Data_Newtype.over(Options_Applicative_Types.optPropertiesNewtype)(Options_Applicative_Types.optPropertiesNewtype)(Options_Applicative_Types.OptProperties)(function (p) {
      return {
          propVisibility: Options_Applicative_Types.Internal.value,
          propDescMod: p.propDescMod,
          propHelp: p.propHelp,
          propMetaVar: p.propMetaVar,
          propShowDefault: p.propShowDefault
      };
  }));
  var commandFieldsHasMetavar = new HasMetavar(function (v) {
      return Data_Unit.unit;
  });
  var baseProps = {
      propMetaVar: "",
      propVisibility: Options_Applicative_Types.Visible.value,
      propHelp: Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup)),
      propShowDefault: Data_Maybe.Nothing.value,
      propDescMod: Data_Maybe.Nothing.value
  };
  var mkProps = function (v) {
      return function (g) {
          var props = Data_Newtype.over(Options_Applicative_Types.optPropertiesNewtype)(Options_Applicative_Types.optPropertiesNewtype)(Options_Applicative_Types.OptProperties)(function (r) {
              return {
                  propShowDefault: Control_Apply.apply(Data_Maybe.applyMaybe)(v.value1)(v.value0),
                  propDescMod: r.propDescMod,
                  propHelp: r.propHelp,
                  propMetaVar: r.propMetaVar,
                  propVisibility: r.propVisibility
              };
          })(g(baseProps));
          return props;
      };
  };
  var mkOption = function (d) {
      return function (g) {
          return function (rdr) {
              return {
                  optMain: rdr,
                  optProps: mkProps(d)(g)
              };
          };
      };
  };
  var mkParser = function (v) {
      return function (g) {
          return function (rdr) {
              var opt = mkOption(v)(g)(rdr);
              return Control_Alt.alt(Options_Applicative_Types.parserAlt)(Options_Applicative_Common.liftOpt(opt))(Data_Maybe.maybe(Control_Plus.empty(Options_Applicative_Types.parserPlus))(Control_Applicative.pure(Options_Applicative_Types.parserApplicative))(v.value0));
          };
      };
  }; 
  var argumentFieldsHasMetavar = new HasMetavar(function (v) {
      return Data_Unit.unit;
  });
  exports["Mod"] = Mod;
  exports["HasName"] = HasName;
  exports["name"] = name;
  exports["HasValue"] = HasValue;
  exports["hasValueDummy"] = hasValueDummy;
  exports["HasMetavar"] = HasMetavar;
  exports["hasMetavarDummy"] = hasMetavarDummy;
  exports["OptionFields"] = OptionFields;
  exports["FlagFields"] = FlagFields;
  exports["CommandFields"] = CommandFields;
  exports["DefaultProp"] = DefaultProp;
  exports["optionMod"] = optionMod;
  exports["fieldMod"] = fieldMod;
  exports["baseProps"] = baseProps;
  exports["mkCommand"] = mkCommand;
  exports["mkParser"] = mkParser;
  exports["mkOption"] = mkOption;
  exports["mkProps"] = mkProps;
  exports["internal"] = internal;
  exports["newtypeOptionFields"] = newtypeOptionFields;
  exports["newtypeFlagFields"] = newtypeFlagFields;
  exports["newtypeCommandFields"] = newtypeCommandFields;
  exports["optionFieldsHasName"] = optionFieldsHasName;
  exports["flagFieldsHasName"] = flagFieldsHasName;
  exports["optionFieldsHasValue"] = optionFieldsHasValue;
  exports["optionFieldsHasMetavar"] = optionFieldsHasMetavar;
  exports["argumentFieldsHasMetavar"] = argumentFieldsHasMetavar;
  exports["commandFieldsHasMetavar"] = commandFieldsHasMetavar;
  exports["defaultPropMonoid"] = defaultPropMonoid;
  exports["defaultPropSemigroup"] = defaultPropSemigroup;
  exports["modMonoid"] = modMonoid;
  exports["modSemigroup"] = modSemigroup;
})(PS["Options.Applicative.Builder.Internal"] = PS["Options.Applicative.Builder.Internal"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_Common = PS["Data.String.Common"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var ExitCodes = PS["ExitCodes"];
  var Global = PS["Global"];
  var Options_Applicative_Builder_Completer = PS["Options.Applicative.Builder.Completer"];
  var Options_Applicative_Builder_Internal = PS["Options.Applicative.Builder.Internal"];
  var Options_Applicative_Help_Chunk = PS["Options.Applicative.Help.Chunk"];
  var Options_Applicative_Help_Pretty = PS["Options.Applicative.Help.Pretty"];
  var Options_Applicative_Types = PS["Options.Applicative.Types"];
  var Prelude = PS["Prelude"];
  var Text_PrettyPrint_Leijen = PS["Text.PrettyPrint.Leijen"];                 
  var PrefsMod = function (x) {
      return x;
  };
  var InfoMod = function (x) {
      return x;
  };
  var value = function (dictHasValue) {
      return function (x) {
          return new Options_Applicative_Builder_Internal.Mod(Control_Category.identity(Control_Category.categoryFn), new Options_Applicative_Builder_Internal.DefaultProp(new Data_Maybe.Just(x), Data_Maybe.Nothing.value), Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var str = Options_Applicative_Types.readerAsk;
  var showHelpOnEmpty = PrefsMod(Data_Newtype.over(Options_Applicative_Types.parserPrefsNewtype)(Options_Applicative_Types.parserPrefsNewtype)(Options_Applicative_Types.ParserPrefs)(function (p) {
      return {
          prefShowHelpOnEmpty: true,
          prefBacktrack: p.prefBacktrack,
          prefColumns: p.prefColumns,
          prefDisambiguate: p.prefDisambiguate,
          prefMultiSuffix: p.prefMultiSuffix,
          prefShowHelpOnError: p.prefShowHelpOnError
      };
  }));
  var $$short = function (dictHasName) {
      return function ($87) {
          return Options_Applicative_Builder_Internal.fieldMod(Options_Applicative_Builder_Internal.name(dictHasName)(Options_Applicative_Types.OptShort.create($87)));
      };
  };
  var progDesc = function (s) {
      return InfoMod(Data_Newtype.over(Options_Applicative_Types.parserInfoNewtype)(Options_Applicative_Types.parserInfoNewtype)(Options_Applicative_Types.ParserInfo)(function (i) {
          return {
              infoProgDesc: Options_Applicative_Help_Chunk.paragraph(s),
              infoFailureCode: i.infoFailureCode,
              infoFooter: i.infoFooter,
              infoFullDesc: i.infoFullDesc,
              infoHeader: i.infoHeader,
              infoParser: i.infoParser,
              infoPolicy: i.infoPolicy
          };
      }));
  };  
  var noArgError = function (e) {
      return Options_Applicative_Builder_Internal.fieldMod(Data_Newtype.over(Options_Applicative_Builder_Internal.newtypeOptionFields)(Options_Applicative_Builder_Internal.newtypeOptionFields)(Options_Applicative_Builder_Internal.OptionFields)(function (p) {
          return {
              optNoArgError: Data_Function["const"](e),
              optCompleter: p.optCompleter,
              optNames: p.optNames
          };
      }));
  };
  var newtypePrefsMod = new Data_Newtype.Newtype(function (n) {
      return n;
  }, PrefsMod);
  var prefs = function (m) {
      var base = {
          prefMultiSuffix: "",
          prefDisambiguate: false,
          prefShowHelpOnError: false,
          prefShowHelpOnEmpty: false,
          prefBacktrack: Options_Applicative_Types.Backtrack.value,
          prefColumns: 80
      };
      return Data_Newtype.un(newtypePrefsMod)(PrefsMod)(m)(base);
  };                                                         
  var newtypeInfoMod = new Data_Newtype.Newtype(function (n) {
      return n;
  }, InfoMod);
  var metavar = function (dictHasMetavar) {
      return function ($$var) {
          return Options_Applicative_Builder_Internal.optionMod(Data_Newtype.over(Options_Applicative_Types.optPropertiesNewtype)(Options_Applicative_Types.optPropertiesNewtype)(Options_Applicative_Types.OptProperties)(function (p) {
              return {
                  propMetaVar: $$var,
                  propDescMod: p.propDescMod,
                  propHelp: p.propHelp,
                  propShowDefault: p.propShowDefault,
                  propVisibility: p.propVisibility
              };
          }));
      };
  };
  var option = function (r) {
      return function (m) {
          var v = Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(metavar(Options_Applicative_Builder_Internal.optionFieldsHasMetavar)("ARG"))(m);
          var v1 = v.value0({
              optNames: [  ],
              optCompleter: Data_Monoid.mempty(Options_Applicative_Types.completerMonoid),
              optNoArgError: Options_Applicative_Types.ExpectsArgError.create
          });
          var crdr = {
              crCompleter: v1.optCompleter,
              crReader: r
          };
          var rdr = new Options_Applicative_Types.OptReader(v1.optNames, crdr, v1.optNoArgError);
          return Options_Applicative_Builder_Internal.mkParser(v.value1)(v.value2)(rdr);
      };
  };
  var strOption = option(str);
  var $$long = function (dictHasName) {
      return function ($89) {
          return Options_Applicative_Builder_Internal.fieldMod(Options_Applicative_Builder_Internal.name(dictHasName)(Options_Applicative_Types.OptLong.create($89)));
      };
  };                                                         
  var info = function (parser) {
      return function (m) {
          var base = {
              infoParser: parser,
              infoFullDesc: true,
              infoProgDesc: Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup)),
              infoHeader: Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup)),
              infoFooter: Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup)),
              infoFailureCode: ExitCodes["Error"].value,
              infoPolicy: Options_Applicative_Types.Intersperse.value
          };
          return Data_Newtype.un(newtypeInfoMod)(InfoMod)(m)(base);
      };
  };
  var hidden = Options_Applicative_Builder_Internal.optionMod(Data_Newtype.over(Options_Applicative_Types.optPropertiesNewtype)(Options_Applicative_Types.optPropertiesNewtype)(Options_Applicative_Types.OptProperties)(function (p) {
      return {
          propVisibility: Data_Ord.min(Options_Applicative_Types.optVisibilityOrd)(Options_Applicative_Types.Hidden.value)(p.propVisibility),
          propDescMod: p.propDescMod,
          propHelp: p.propHelp,
          propMetaVar: p.propMetaVar,
          propShowDefault: p.propShowDefault
      };
  }));
  var helpDoc = function (doc) {
      return Options_Applicative_Builder_Internal.optionMod(Data_Newtype.over(Options_Applicative_Types.optPropertiesNewtype)(Options_Applicative_Types.optPropertiesNewtype)(Options_Applicative_Types.OptProperties)(function (p) {
          return {
              propHelp: doc,
              propDescMod: p.propDescMod,
              propMetaVar: p.propMetaVar,
              propShowDefault: p.propShowDefault,
              propVisibility: p.propVisibility
          };
      }));
  };
  var help = function (s) {
      return Options_Applicative_Builder_Internal.optionMod(Data_Newtype.over(Options_Applicative_Types.optPropertiesNewtype)(Options_Applicative_Types.optPropertiesNewtype)(Options_Applicative_Types.OptProperties)(function (p) {
          return {
              propHelp: Options_Applicative_Help_Chunk.paragraph(s),
              propDescMod: p.propDescMod,
              propMetaVar: p.propMetaVar,
              propShowDefault: p.propShowDefault,
              propVisibility: p.propVisibility
          };
      }));
  };
  var flag$prime = function (actv) {
      return function (v) {
          var rdr = (function () {
              var v1 = v.value0({
                  flagNames: [  ],
                  flagActive: actv
              });
              return new Options_Applicative_Types.FlagReader(v1.flagNames, v1.flagActive);
          })();
          return Options_Applicative_Builder_Internal.mkParser(v.value1)(v.value2)(rdr);
      };
  };
  var eitherReader = function (f) {
      return Control_Bind.bind(Options_Applicative_Types.readMBind)(Options_Applicative_Types.readerAsk)(function ($91) {
          return Data_Either.either(Options_Applicative_Types.readerError)(Control_Applicative.pure(Options_Applicative_Types.readMApplicative))(f($91));
      });
  };
  var $$int = eitherReader(function (s) {
      var v = Data_Int.fromString(s);
      if (v instanceof Data_Maybe.Nothing) {
          return Data_Either.Left.create("Can't parse as Int: `" + (Data_Show.show(Data_Show.showString)(s) + "`"));
      };
      if (v instanceof Data_Maybe.Just) {
          return new Data_Either.Right(v.value0);
      };
      throw new Error("Failed pattern match at Options.Applicative.Builder line 122, column 28 - line 124, column 20: " + [ v.constructor.name ]);
  });
  var command = function (cmd) {
      return function (pinfo) {
          return Options_Applicative_Builder_Internal.fieldMod(Data_Newtype.over(Options_Applicative_Builder_Internal.newtypeCommandFields)(Options_Applicative_Builder_Internal.newtypeCommandFields)(Options_Applicative_Builder_Internal.CommandFields)(function (p) {
              return {
                  cmdCommands: Data_Semigroup.append(Data_Semigroup.semigroupArray)([ new Data_Tuple.Tuple(cmd, pinfo) ])(p.cmdCommands),
                  cmdGroup: p.cmdGroup
              };
          }));
      };
  }; 
  var argument = function (p) {
      return function (v) {
          var v1 = v.value0(Data_Monoid.mempty(Data_Monoid.monoidRecord()(Data_Monoid.monoidRecordCons(new Data_Symbol.IsSymbol(function () {
              return "argCompleter";
          }))(Options_Applicative_Types.completerMonoid)()(Data_Monoid.monoidRecordNil))));
          var rdr = {
              crCompleter: v1.argCompleter,
              crReader: p
          };
          return Options_Applicative_Builder_Internal.mkParser(v.value1)(v.value2)(new Options_Applicative_Types.ArgReader(rdr));
      };
  };
  var abortOption = function (err) {
      return function (m) {
          return option(Options_Applicative_Types.readerAbort(err))((function (v) {
              return Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(v)(m);
          })(Data_Foldable.fold(Data_Foldable.foldableArray)(Options_Applicative_Builder_Internal.modMonoid)([ noArgError(err), value(Options_Applicative_Builder_Internal.optionFieldsHasValue)(Control_Category.identity(Control_Category.categoryFn)), metavar(Options_Applicative_Builder_Internal.optionFieldsHasMetavar)("") ])));
      };
  };
  var infoOption = function ($95) {
      return abortOption(Options_Applicative_Types.InfoMsg.create($95));
  };
  exports["argument"] = argument;
  exports["flag'"] = flag$prime;
  exports["abortOption"] = abortOption;
  exports["infoOption"] = infoOption;
  exports["strOption"] = strOption;
  exports["option"] = option;
  exports["short"] = $$short;
  exports["long"] = $$long;
  exports["help"] = help;
  exports["helpDoc"] = helpDoc;
  exports["value"] = value;
  exports["metavar"] = metavar;
  exports["noArgError"] = noArgError;
  exports["hidden"] = hidden;
  exports["command"] = command;
  exports["str"] = str;
  exports["int"] = $$int;
  exports["eitherReader"] = eitherReader;
  exports["progDesc"] = progDesc;
  exports["info"] = info;
  exports["showHelpOnEmpty"] = showHelpOnEmpty;
  exports["prefs"] = prefs;
  exports["newtypeInfoMod"] = newtypeInfoMod;
  exports["newtypePrefsMod"] = newtypePrefsMod;
})(PS["Options.Applicative.Builder"] = PS["Options.Applicative.Builder"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Array_NonEmpty = PS["Data.Array.NonEmpty"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Exists = PS["Data.Exists"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Effect = PS["Effect"];
  var Options_Applicative_Builder = PS["Options.Applicative.Builder"];
  var Options_Applicative_Builder_Internal = PS["Options.Applicative.Builder.Internal"];
  var Options_Applicative_Common = PS["Options.Applicative.Common"];
  var Options_Applicative_Help_Chunk = PS["Options.Applicative.Help.Chunk"];
  var Options_Applicative_Help_Pretty = PS["Options.Applicative.Help.Pretty"];
  var Options_Applicative_Internal = PS["Options.Applicative.Internal"];
  var Options_Applicative_Internal_Utils = PS["Options.Applicative.Internal.Utils"];
  var Options_Applicative_Types = PS["Options.Applicative.Types"];
  var Prelude = PS["Prelude"];
  var Text_PrettyPrint_Leijen = PS["Text.PrettyPrint.Leijen"];                 
  var Standard = (function () {
      function Standard() {

      };
      Standard.value = new Standard();
      return Standard;
  })();
  var Enriched = (function () {
      function Enriched(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Enriched.create = function (value0) {
          return function (value1) {
              return new Enriched(value0, value1);
          };
      };
      return Enriched;
  })();
  var zshCompletionScript = function (prog) {
      return function (progn) {
          return Control_Applicative.pure(Effect.applicativeEffect)([ "#compdef " + progn, "", "local request", "local completions", "local word", "local index=$((CURRENT - 1))", "", "request=(--bash-completion-enriched --bash-completion-index $index)", "for arg in ${words[@]}; do", "  request=(${request[@]} --bash-completion-word $arg)", "done", "", "IFS=$'\\n' completions=($( " + (prog + " \"${request[@]}\" ))"), "", "for word in $completions; do", "  local -a parts", "", "  # Split the line at a tab if there is one.", "  IFS=$'\\t' parts=($( echo $word ))", "", "  if [[ -n $parts[2] ]]; then", "     if [[ $word[1] == \"-\" ]]; then", "       local desc=(\"$parts[1] ($parts[2])\")", "       compadd -d desc -- $parts[1]", "     else", "       local desc=($(print -f  \"%-019s -- %s\" $parts[1] $parts[2]))", "       compadd -l -d desc -- $parts[1]", "     fi", "  else", "    compadd -f -- $word", "  fi", "done" ]);
      };
  }; 
  var fishCompletionScript = function (prog) {
      return function (progn) {
          return Control_Applicative.pure(Effect.applicativeEffect)([ " function _" + progn, "    set -l cl (commandline --tokenize --current-process)", "    # Hack around fish issue #3934", "    set -l cn (commandline --tokenize --cut-at-cursor --current-process)", "    set -l cn (count $cn)", "    set -l tmpline --bash-completion-enriched --bash-completion-index $cn", "    for arg in $cl", "      set tmpline $tmpline --bash-completion-word $arg", "    end", "    for opt in (" + (prog + " $tmpline)"), "      if test -d $opt", "        echo -E \"$opt/\"", "      else", "        echo -E \"$opt\"", "      end", "    end", "end", "", "complete --no-files --command " + (progn + (" --arguments '(_" + (progn + ")'"))) ]);
      };
  };
  var bashCompletionScript = function (prog) {
      return function (progn) {
          return Control_Applicative.pure(Effect.applicativeEffect)([ "_" + (progn + "()"), "{", "    local CMDLINE", "    local IFS=$'\\n'", "    CMDLINE=(--bash-completion-index $COMP_CWORD)", "", "    for arg in ${COMP_WORDS[@]}; do", "        CMDLINE=(${CMDLINE[@]} --bash-completion-word $arg)", "    done", "", "    COMPREPLY=( $(" + (prog + " \"${CMDLINE[@]}\") )"), "}", "", "complete -o filenames -F _" + (progn + (" " + progn)) ]);
      };
  };
  var arraySplitAt = function (idx) {
      return function (arr) {
          if (idx === 0) {
              return {
                  init: [  ],
                  rest: arr
              };
          };
          return {
              init: Data_Array.slice(0)(idx)(arr),
              rest: Data_Array.slice(idx)(Data_Array.length(arr))(arr)
          };
      };
  };
  var bashCompletionQuery = function (pinfo) {
      return function (pprefs) {
          return function (richness) {
              return function (ws) {
                  return function (i) {
                      return function (v) {
                          var v1 = arraySplitAt(i)(ws);
                          var run_completer = function (c) {
                              return Data_Newtype.un(Options_Applicative_Types.newtypeCompleter)(Options_Applicative_Types.Completer)(c)(Data_Maybe.fromMaybe("")(Data_Array.head(v1.rest)));
                          };
                          var render_line = function (len) {
                              return function (doc) {
                                  var v2 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Array_NonEmpty.uncons)(Data_Array_NonEmpty.fromArray(Options_Applicative_Internal_Utils.lines(Text_PrettyPrint_Leijen.displayS(Text_PrettyPrint_Leijen.renderPretty(1.0)(len)(doc)))));
                                  if (v2 instanceof Data_Maybe.Nothing) {
                                      return "";
                                  };
                                  if (v2 instanceof Data_Maybe.Just && v2.value0.tail.length === 0) {
                                      return v2.value0.head;
                                  };
                                  if (v2 instanceof Data_Maybe.Just) {
                                      return v2.value0.head + "...";
                                  };
                                  throw new Error("Failed pattern match at Options.Applicative.BashCompletion line 163, column 27 - line 168, column 5: " + [ v2.constructor.name ]);
                              };
                          };
                          var is_completion = (function () {
                              var v2 = Data_Array.head(v1.rest);
                              if (v2 instanceof Data_Maybe.Just) {
                                  return Options_Applicative_Internal_Utils.startsWith(v2.value0);
                              };
                              if (v2 instanceof Data_Maybe.Nothing) {
                                  return Data_Function["const"](true);
                              };
                              throw new Error("Failed pattern match at Options.Applicative.BashCompletion line 176, column 7 - line 178, column 30: " + [ v2.constructor.name ]);
                          })();
                          var filter_names = Data_Array.filter(is_completion);
                          var show_names = function ($84) {
                              return filter_names(Data_Functor.map(Data_Functor.functorArray)(Options_Applicative_Common.showOption)($84));
                          };
                          var compl = Options_Applicative_Common.runParserInfo(Options_Applicative_Internal.completionMonadP)(pinfo)(Data_List.fromFoldable(Data_Foldable.foldableArray)(Data_Array.drop(1)(v1.init)));
                          var add_opt_help = function (dictFunctor) {
                              return function (opt) {
                                  if (richness instanceof Standard) {
                                      return Control_Category.identity(Control_Category.categoryFn);
                                  };
                                  if (richness instanceof Enriched) {
                                      return Data_Functor.map(dictFunctor)(function (o) {
                                          var h = Data_Newtype.un(Options_Applicative_Help_Chunk.chunkNewtype)(Options_Applicative_Help_Chunk.Chunk)(Options_Applicative_Types.optHelp(opt));
                                          return Data_Maybe.maybe(o)(function (h$prime) {
                                              return o + ("\x09" + render_line(richness.value0)(h$prime));
                                          })(h);
                                      });
                                  };
                                  throw new Error("Failed pattern match at Options.Applicative.BashCompletion line 139, column 24 - line 144, column 79: " + [ richness.constructor.name ]);
                              };
                          };
                          var add_cmd_help = function (dictFunctor) {
                              return function (p) {
                                  if (richness instanceof Standard) {
                                      return Control_Category.identity(Control_Category.categoryFn);
                                  };
                                  if (richness instanceof Enriched) {
                                      return Data_Functor.map(dictFunctor)(function (cmd) {
                                          var h = Control_Bind.bind(Data_Maybe.bindMaybe)(p(cmd))(function ($85) {
                                              return Data_Newtype.un(Options_Applicative_Help_Chunk.chunkNewtype)(Options_Applicative_Help_Chunk.Chunk)((function (v2) {
                                                  return v2.infoProgDesc;
                                              })(Data_Newtype.un(Options_Applicative_Types.parserInfoNewtype)(Options_Applicative_Types.ParserInfo)($85)));
                                          });
                                          return Data_Maybe.maybe(cmd)(function (h$prime) {
                                              return cmd + ("\x09" + render_line(richness.value1)(h$prime));
                                          })(h);
                                      });
                                  };
                                  throw new Error("Failed pattern match at Options.Applicative.BashCompletion line 149, column 22 - line 154, column 85: " + [ richness.constructor.name ]);
                              };
                          };
                          var opt_completions = function (argPolicy) {
                              return function (hinfo) {
                                  return function (opt) {
                                      var v2 = (Data_Newtype.un(Options_Applicative_Types.optionNewtype)(Options_Applicative_Types.Option)(opt)).optMain;
                                      if (v2 instanceof Options_Applicative_Types.OptReader) {
                                          if (Data_Eq.notEq(Options_Applicative_Types.argPolicyEq)(argPolicy)(Options_Applicative_Types.AllPositionals.value)) {
                                              return Control_Applicative.pure(Effect.applicativeEffect)(add_opt_help(Data_Functor.functorArray)(opt)(show_names(v2.value0)));
                                          };
                                          if (Data_Boolean.otherwise) {
                                              return Control_Applicative.pure(Effect.applicativeEffect)([  ]);
                                          };
                                      };
                                      if (v2 instanceof Options_Applicative_Types.FlagReader) {
                                          if (Data_Eq.notEq(Options_Applicative_Types.argPolicyEq)(argPolicy)(Options_Applicative_Types.AllPositionals.value)) {
                                              return Control_Applicative.pure(Effect.applicativeEffect)(add_opt_help(Data_Functor.functorArray)(opt)(show_names(v2.value0)));
                                          };
                                          if (Data_Boolean.otherwise) {
                                              return Control_Applicative.pure(Effect.applicativeEffect)([  ]);
                                          };
                                      };
                                      if (v2 instanceof Options_Applicative_Types.ArgReader) {
                                          if ((Data_Newtype.un(Options_Applicative_Types.newtypeOptHelpInfo)(Options_Applicative_Types.OptHelpInfo)(hinfo)).hinfoUnreachableArgs) {
                                              return Control_Applicative.pure(Effect.applicativeEffect)([  ]);
                                          };
                                          if (Data_Boolean.otherwise) {
                                              return run_completer((Data_Newtype.un(Options_Applicative_Types.newtypeCReader)(Options_Applicative_Types.CReader)(v2.value0)).crCompleter);
                                          };
                                      };
                                      if (v2 instanceof Options_Applicative_Types.CmdReader) {
                                          if ((Data_Newtype.un(Options_Applicative_Types.newtypeOptHelpInfo)(Options_Applicative_Types.OptHelpInfo)(hinfo)).hinfoUnreachableArgs) {
                                              return Control_Applicative.pure(Effect.applicativeEffect)([  ]);
                                          };
                                          if (Data_Boolean.otherwise) {
                                              return Control_Applicative.pure(Effect.applicativeEffect)(add_cmd_help(Data_Functor.functorArray)(v2.value2)(filter_names(v2.value1)));
                                          };
                                      };
                                      throw new Error("Failed pattern match at Options.Applicative.BashCompletion line 114, column 43 - line 134, column 53: " + [ v2.constructor.name ]);
                                  };
                              };
                          };
                          var list_options = function (a) {
                              return function ($86) {
                                  return Data_Functor.map(Effect.functorEffect)(Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidArray))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Effect.applicativeEffect)(Options_Applicative_Common.mapParser(opt_completions(a))($86)));
                              };
                          };
                          var v2 = Options_Applicative_Internal.runCompletion(compl)(pprefs);
                          if (v2 instanceof Data_Maybe.Just && v2.value0 instanceof Data_Either.Left) {
                              return Data_Exists.runExists(function (p) {
                                  return list_options(v2.value0.value0.value1)(p);
                              })(v2.value0.value0.value0.value0);
                          };
                          if (v2 instanceof Data_Maybe.Just && v2.value0 instanceof Data_Either.Right) {
                              return run_completer(v2.value0.value0);
                          };
                          if (v2 instanceof Data_Maybe.Nothing) {
                              return Control_Applicative.pure(Effect.applicativeEffect)([  ]);
                          };
                          throw new Error("Failed pattern match at Options.Applicative.BashCompletion line 84, column 52 - line 90, column 15: " + [ v2.constructor.name ]);
                      };
                  };
              };
          };
      };
  };
  var bashCompletionParser = function (pinfo) {
      return function (pprefs) {
          var failure = function (opts) {
              return {
                  execCompletion: function (progn) {
                      return Data_Functor.map(Effect.functorEffect)(Options_Applicative_Internal_Utils.unLines(Data_Foldable.foldableArray))(opts(progn));
                  }
              };
          };
          var complParser = Data_Foldable.oneOf(Data_Foldable.foldableArray)(Options_Applicative_Types.parserPlus)([ Data_Functor.map(Options_Applicative_Types.parserFunctor)(failure)(Control_Apply.apply(Options_Applicative_Types.parserApply)(Control_Apply.apply(Options_Applicative_Types.parserApply)(Data_Functor.map(Options_Applicative_Types.parserFunctor)(bashCompletionQuery(pinfo)(pprefs))(Control_Alt.alt(Options_Applicative_Types.parserAlt)(Control_Apply.apply(Options_Applicative_Types.parserApply)(Control_Apply.apply(Options_Applicative_Types.parserApply)(Options_Applicative_Builder["flag'"](Enriched.create)(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.flagFieldsHasName)("bash-completion-enriched"))(Options_Applicative_Builder_Internal.internal)))(Options_Applicative_Builder.option(Options_Applicative_Builder["int"])(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("bash-completion-option-desc-length"))(Options_Applicative_Builder_Internal.internal))(Options_Applicative_Builder.value(Options_Applicative_Builder_Internal.optionFieldsHasValue)(40)))))(Options_Applicative_Builder.option(Options_Applicative_Builder["int"])(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("bash-completion-command-desc-length"))(Options_Applicative_Builder_Internal.internal))(Options_Applicative_Builder.value(Options_Applicative_Builder_Internal.optionFieldsHasValue)(40)))))(Control_Applicative.pure(Options_Applicative_Types.parserApplicative)(Standard.value))))(Data_Functor.map(Options_Applicative_Types.parserFunctor)(Data_Array.fromFoldable(Data_List_Types.foldableList))(Options_Applicative_Types.many(Options_Applicative_Builder.strOption(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("bash-completion-word"))(Options_Applicative_Builder_Internal.internal))))))(Options_Applicative_Builder.option(Options_Applicative_Builder["int"])(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("bash-completion-index"))(Options_Applicative_Builder_Internal.internal)))), Data_Functor.map(Options_Applicative_Types.parserFunctor)(failure)(Data_Functor.map(Options_Applicative_Types.parserFunctor)(bashCompletionScript)(Options_Applicative_Builder.strOption(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("bash-completion-script"))(Options_Applicative_Builder_Internal.internal)))), Data_Functor.map(Options_Applicative_Types.parserFunctor)(failure)(Data_Functor.map(Options_Applicative_Types.parserFunctor)(fishCompletionScript)(Options_Applicative_Builder.strOption(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("fish-completion-script"))(Options_Applicative_Builder_Internal.internal)))), Data_Functor.map(Options_Applicative_Types.parserFunctor)(failure)(Data_Functor.map(Options_Applicative_Types.parserFunctor)(zshCompletionScript)(Options_Applicative_Builder.strOption(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("zsh-completion-script"))(Options_Applicative_Builder_Internal.internal)))) ]);
          return complParser;
      };
  };
  exports["bashCompletionParser"] = bashCompletionParser;
})(PS["Options.Applicative.BashCompletion"] = PS["Options.Applicative.BashCompletion"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Array_NonEmpty = PS["Data.Array.NonEmpty"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Options_Applicative_Common = PS["Options.Applicative.Common"];
  var Options_Applicative_Help_Chunk = PS["Options.Applicative.Help.Chunk"];
  var Options_Applicative_Help_Pretty = PS["Options.Applicative.Help.Pretty"];
  var Options_Applicative_Help_Types = PS["Options.Applicative.Help.Types"];
  var Options_Applicative_Types = PS["Options.Applicative.Types"];
  var Prelude = PS["Prelude"];
  var Text_PrettyPrint_Leijen = PS["Text.PrettyPrint.Leijen"];                 
  var OptDescStyle = function (x) {
      return x;
  };
  var usageHelp = function (chunk) {
      return Data_Newtype.over(Options_Applicative_Help_Types.newtypeParserHelp)(Options_Applicative_Help_Types.newtypeParserHelp)(Options_Applicative_Help_Types.ParserHelp)(function (v) {
          return {
              helpUsage: chunk,
              helpBody: v.helpBody,
              helpError: v.helpError,
              helpFooter: v.helpFooter,
              helpHeader: v.helpHeader,
              helpSuggestions: v.helpSuggestions
          };
      })(Data_Monoid.mempty(Options_Applicative_Help_Types.parserHelpMonoid));
  };
  var suggestionsHelp = function (chunk) {
      return Data_Newtype.over(Options_Applicative_Help_Types.newtypeParserHelp)(Options_Applicative_Help_Types.newtypeParserHelp)(Options_Applicative_Help_Types.ParserHelp)(function (v) {
          return {
              helpSuggestions: chunk,
              helpBody: v.helpBody,
              helpError: v.helpError,
              helpFooter: v.helpFooter,
              helpHeader: v.helpHeader,
              helpUsage: v.helpUsage
          };
      })(Data_Monoid.mempty(Options_Applicative_Help_Types.parserHelpMonoid));
  };
  var newtypeOptDescStyle = new Data_Newtype.Newtype(function (n) {
      return n;
  }, OptDescStyle);
  var intersperse = function (sep) {
      return function ($35) {
          return Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(Data_Array.mapWithIndex(function (idx) {
              return function (e) {
                  var $18 = idx === 0;
                  if ($18) {
                      return [ e ];
                  };
                  return [ sep, e ];
              };
          })($35));
      };
  };
  var optDesc = function (pprefs) {
      return function (style) {
          return function (info) {
              return function (opt) {
                  var suffix = (function () {
                      if ((Data_Newtype.un(Options_Applicative_Types.newtypeOptHelpInfo)(Options_Applicative_Types.OptHelpInfo)(info)).hinfoMulti) {
                          return Options_Applicative_Help_Chunk.stringChunk((Data_Newtype.un(Options_Applicative_Types.parserPrefsNewtype)(Options_Applicative_Types.ParserPrefs)(pprefs)).prefMultiSuffix);
                      };
                      if (Data_Boolean.otherwise) {
                          return Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup));
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Help.Core line 58, column 7 - line 62, column 17: " + [  ]);
                  })();
                  var show_opt = (function () {
                      if ((Data_Newtype.un(Options_Applicative_Types.newtypeOptHelpInfo)(Options_Applicative_Types.OptHelpInfo)(info)).hinfoDefault && !(Data_Newtype.un(newtypeOptDescStyle)(OptDescStyle)(style)).descOptional) {
                          return false;
                      };
                      if (Data_Eq.eq(Options_Applicative_Types.optVisibilityEq)(Options_Applicative_Types.optVisibility(opt))(Options_Applicative_Types.Hidden.value)) {
                          return (Data_Newtype.un(newtypeOptDescStyle)(OptDescStyle)(style)).descHidden;
                      };
                      if (Data_Boolean.otherwise) {
                          return Data_Eq.eq(Options_Applicative_Types.optVisibilityEq)(Options_Applicative_Types.optVisibility(opt))(Options_Applicative_Types.Visible.value);
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Help.Core line 51, column 7 - line 57, column 39: " + [  ]);
                  })();
                  var ns = Options_Applicative_Common.optionNames((Data_Newtype.un(Options_Applicative_Types.optionNewtype)(Options_Applicative_Types.Option)(opt)).optMain);
                  var mv = Options_Applicative_Help_Chunk.stringChunk(Options_Applicative_Types.optMetaVar(opt));
                  var descs = Data_Functor.map(Data_Functor.functorArray)(function ($36) {
                      return Text_PrettyPrint_Leijen.string(Options_Applicative_Common.showOption($36));
                  })(Data_Array.sort(Options_Applicative_Types.optNameOrd)(ns));
                  var render = function (chunk) {
                      if (!show_opt) {
                          return Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup));
                      };
                      if (Options_Applicative_Help_Chunk.isEmpty(chunk) || !(Data_Newtype.un(newtypeOptDescStyle)(OptDescStyle)(style)).descSurround) {
                          return Data_Semigroup.append(Options_Applicative_Help_Chunk.chunkSemigroup(Text_PrettyPrint_Leijen.docSemigroup))(chunk)(suffix);
                      };
                      if ((Data_Newtype.un(Options_Applicative_Types.newtypeOptHelpInfo)(Options_Applicative_Types.OptHelpInfo)(info)).hinfoDefault) {
                          return Data_Semigroup.append(Options_Applicative_Help_Chunk.chunkSemigroup(Text_PrettyPrint_Leijen.docSemigroup))(Data_Functor.map(Options_Applicative_Help_Chunk.chunkFunctor)(Text_PrettyPrint_Leijen.brackets)(chunk))(suffix);
                      };
                      if (Data_Array["null"](Data_Array.drop(1)(descs))) {
                          return Data_Semigroup.append(Options_Applicative_Help_Chunk.chunkSemigroup(Text_PrettyPrint_Leijen.docSemigroup))(chunk)(suffix);
                      };
                      if (Data_Boolean.otherwise) {
                          return Data_Semigroup.append(Options_Applicative_Help_Chunk.chunkSemigroup(Text_PrettyPrint_Leijen.docSemigroup))(Data_Functor.map(Options_Applicative_Help_Chunk.chunkFunctor)(Text_PrettyPrint_Leijen.parens)(chunk))(suffix);
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Help.Core line 63, column 7 - line 73, column 43: " + [ chunk.constructor.name ]);
                  };
                  var desc$prime = Options_Applicative_Help_Chunk.chunkBeside(Options_Applicative_Help_Chunk.listToChunk(Text_PrettyPrint_Leijen.docMonoid)(intersperse((Data_Newtype.un(newtypeOptDescStyle)(OptDescStyle)(style)).descSep)(descs)))(mv);
                  return Data_Maybe.maybe(Control_Category.identity(Control_Category.categoryFn))(Data_Functor.map(Options_Applicative_Help_Chunk.chunkFunctor))(Options_Applicative_Types.optDescMod(opt))(render(desc$prime));
              };
          };
      };
  };
  var headerHelp = function (chunk) {
      return Data_Newtype.over(Options_Applicative_Help_Types.newtypeParserHelp)(Options_Applicative_Help_Types.newtypeParserHelp)(Options_Applicative_Help_Types.ParserHelp)(function (v) {
          return {
              helpHeader: chunk,
              helpBody: v.helpBody,
              helpError: v.helpError,
              helpFooter: v.helpFooter,
              helpSuggestions: v.helpSuggestions,
              helpUsage: v.helpUsage
          };
      })(Data_Monoid.mempty(Options_Applicative_Help_Types.parserHelpMonoid));
  };
  var fullDesc = function (pprefs) {
      var style = {
          descSep: Text_PrettyPrint_Leijen.string(","),
          descHidden: true,
          descOptional: true,
          descSurround: false
      };
      var doc = function (info) {
          return function (opt) {
              var show_def = function (s) {
                  return Text_PrettyPrint_Leijen.parens(Text_PrettyPrint_Leijen.appendWithSpace(Text_PrettyPrint_Leijen.string("default:"))(Text_PrettyPrint_Leijen.string(s)));
              };
              var n = optDesc(pprefs)(style)(info)(opt);
              var hdef = Options_Applicative_Help_Chunk.Chunk(Data_Functor.map(Data_Maybe.functorMaybe)(show_def)(Options_Applicative_Types.optShowDefault(opt)));
              var h = Options_Applicative_Types.optHelp(opt);
              return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(!Options_Applicative_Help_Chunk.isEmpty(n)))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(!Options_Applicative_Help_Chunk.isEmpty(h)))(function () {
                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(Options_Applicative_Help_Chunk.extractChunk(Text_PrettyPrint_Leijen.docMonoid)(n), Text_PrettyPrint_Leijen.align(Options_Applicative_Help_Chunk.extractChunk(Text_PrettyPrint_Leijen.docMonoid)(Options_Applicative_Help_Chunk.chunkBeside(h)(hdef)))));
                  });
              });
          };
      };
      return function ($37) {
          return Options_Applicative_Help_Chunk.tabulate(Data_Array.catMaybes(Options_Applicative_Common.mapParser(doc)($37)));
      };
  };
  var footerHelp = function (chunk) {
      return Data_Newtype.over(Options_Applicative_Help_Types.newtypeParserHelp)(Options_Applicative_Help_Types.newtypeParserHelp)(Options_Applicative_Help_Types.ParserHelp)(function (v) {
          return {
              helpFooter: chunk,
              helpBody: v.helpBody,
              helpError: v.helpError,
              helpHeader: v.helpHeader,
              helpSuggestions: v.helpSuggestions,
              helpUsage: v.helpUsage
          };
      })(Data_Monoid.mempty(Options_Applicative_Help_Types.parserHelpMonoid));
  };
  var fold_tree = function (v) {
      if (v instanceof Options_Applicative_Types.Leaf) {
          return v.value0;
      };
      if (v instanceof Options_Applicative_Types.MultNode) {
          return Data_Foldable.foldr(Data_Foldable.foldableArray)(function ($38) {
              return Options_Applicative_Help_Chunk.chunkBesideOrBelow(fold_tree($38));
          })(Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup)))(v.value0);
      };
      if (v instanceof Options_Applicative_Types.AltNode) {
          var alt_node = function (v1) {
              if (v1.length === 1) {
                  return v1[0];
              };
              return Data_Functor.map(Options_Applicative_Help_Chunk.chunkFunctor)(Text_PrettyPrint_Leijen.parens)(Data_Foldable.foldr(Data_Foldable.foldableArray)(Options_Applicative_Help_Chunk.chunked(function (x) {
                  return function (y) {
                      return Text_PrettyPrint_Leijen.appendWithSoftline(x)(Text_PrettyPrint_Leijen.appendWithSoftline(Text_PrettyPrint_Leijen["char"]("|"))(y));
                  };
              }))(Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup)))(v1));
          };
          return alt_node(Data_Array.filter(function ($39) {
              return !Options_Applicative_Help_Chunk.isEmpty($39);
          })(Data_Functor.map(Data_Functor.functorArray)(fold_tree)(v.value0)));
      };
      throw new Error("Failed pattern match at Options.Applicative.Help.Core line 116, column 1 - line 116, column 46: " + [ v.constructor.name ]);
  };
  var errorHelp = function (chunk) {
      return Data_Newtype.over(Options_Applicative_Help_Types.newtypeParserHelp)(Options_Applicative_Help_Types.newtypeParserHelp)(Options_Applicative_Help_Types.ParserHelp)(function (v) {
          return {
              helpError: chunk,
              helpBody: v.helpBody,
              helpFooter: v.helpFooter,
              helpHeader: v.helpHeader,
              helpSuggestions: v.helpSuggestions,
              helpUsage: v.helpUsage
          };
      })(Data_Monoid.mempty(Options_Applicative_Help_Types.parserHelpMonoid));
  };
  var cmdDesc = (function () {
      var desc = function (v) {
          return function (opt) {
              var v1 = (Data_Newtype.un(Options_Applicative_Types.optionNewtype)(Options_Applicative_Types.Option)(opt)).optMain;
              if (v1 instanceof Options_Applicative_Types.CmdReader) {
                  return Data_Tuple.Tuple.create(v1.value0)(Options_Applicative_Help_Chunk.tabulate(Control_Bind.bind(Control_Bind.bindArray)(Data_Array.reverse(v1.value1))(function (v2) {
                      return Control_Bind.bind(Control_Bind.bindArray)(Data_Maybe.maybe([  ])(Control_Applicative.pure(Control_Applicative.applicativeArray))(Data_Functor.map(Data_Maybe.functorMaybe)(function ($40) {
                          return (function (v3) {
                              return v3.infoProgDesc;
                          })(Data_Newtype.un(Options_Applicative_Types.parserInfoNewtype)(Options_Applicative_Types.ParserInfo)($40));
                      })(v1.value2(v2))))(function (v3) {
                          return Control_Applicative.pure(Control_Applicative.applicativeArray)(new Data_Tuple.Tuple(Text_PrettyPrint_Leijen.string(v2), Text_PrettyPrint_Leijen.align(Options_Applicative_Help_Chunk.extractChunk(Text_PrettyPrint_Leijen.docMonoid)(v3))));
                      });
                  })));
              };
              return Data_Monoid.mempty(Data_Tuple.monoidTuple(Data_Maybe.monoidMaybe(Data_Semigroup.semigroupString))(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup)));
          };
      };
      return Options_Applicative_Common.mapParser(desc);
  })();
  var briefDesc$prime = function (showOptional) {
      return function (pprefs) {
          var style = {
              descSep: Text_PrettyPrint_Leijen.string("|"),
              descHidden: false,
              descOptional: showOptional,
              descSurround: true
          };
          return function ($41) {
              return fold_tree(Options_Applicative_Common.treeMapParser(optDesc(pprefs)(style))($41));
          };
      };
  };
  var missingDesc = briefDesc$prime(false);
  var briefDesc = briefDesc$prime(true);
  var parserUsage = function (pprefs) {
      return function (p) {
          return function (progn) {
              return Text_PrettyPrint_Leijen.hsep([ Text_PrettyPrint_Leijen.string("Usage:"), Text_PrettyPrint_Leijen.string(progn), Text_PrettyPrint_Leijen.align(Options_Applicative_Help_Chunk.extractChunk(Text_PrettyPrint_Leijen.docMonoid)(briefDesc(pprefs)(p))) ]);
          };
      };
  };
  var bodyHelp = function (chunk) {
      return Data_Newtype.over(Options_Applicative_Help_Types.newtypeParserHelp)(Options_Applicative_Help_Types.newtypeParserHelp)(Options_Applicative_Help_Types.ParserHelp)(function (v) {
          return {
              helpBody: chunk,
              helpError: v.helpError,
              helpFooter: v.helpFooter,
              helpHeader: v.helpHeader,
              helpSuggestions: v.helpSuggestions,
              helpUsage: v.helpUsage
          };
      })(Data_Monoid.mempty(Options_Applicative_Help_Types.parserHelpMonoid));
  };
  var parserHelp = function (pprefs) {
      return function (p) {
          var with_title = function (title) {
              return Data_Functor.map(Options_Applicative_Help_Chunk.chunkFunctor)(function (v) {
                  return Text_PrettyPrint_Leijen.appendWithLine(Text_PrettyPrint_Leijen.string(title))(v);
              });
          };
          var group_title = function (arr) {
              var v = Data_Array_NonEmpty.uncons(arr);
              return with_title(Data_Maybe.fromMaybe("Available commands:")(Data_Tuple.fst(v.head)))(Options_Applicative_Help_Chunk.vcatChunks(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Data_Tuple.snd(v.head) ])(Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.snd)(v.tail))));
          };
          var cs = Data_Array.groupBy(Data_Function.on(Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString)))(Data_Tuple.fst))(cmdDesc(p));
          return bodyHelp(Options_Applicative_Help_Chunk.vsepChunks(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ with_title("Available options:")(fullDesc(pprefs)(p)) ])(Data_Functor.map(Data_Functor.functorArray)(group_title)(cs))));
      };
  };
  exports["cmdDesc"] = cmdDesc;
  exports["briefDesc"] = briefDesc;
  exports["missingDesc"] = missingDesc;
  exports["fold_tree"] = fold_tree;
  exports["fullDesc"] = fullDesc;
  exports["errorHelp"] = errorHelp;
  exports["headerHelp"] = headerHelp;
  exports["suggestionsHelp"] = suggestionsHelp;
  exports["usageHelp"] = usageHelp;
  exports["bodyHelp"] = bodyHelp;
  exports["footerHelp"] = footerHelp;
  exports["parserHelp"] = parserHelp;
  exports["parserUsage"] = parserUsage;
})(PS["Options.Applicative.Help.Core"] = PS["Options.Applicative.Help.Core"] || {});
(function(exports) {
    "use strict";

  exports.defer = function (thunk) {
    var v = null;
    return function() {
      if (thunk === undefined) return v;

      v = thunk();
      thunk = undefined; // eslint-disable-line no-param-reassign
      return v;
    };
  };

  exports.force = function (l) {
    return l();
  };
})(PS["Data.Lazy"] = PS["Data.Lazy"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["Data.Lazy"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var functorLazy = new Data_Functor.Functor(function (f) {
      return function (l) {
          return $foreign.defer(function (v) {
              return f($foreign.force(l));
          });
      };
  });
  var applyLazy = new Control_Apply.Apply(function () {
      return functorLazy;
  }, function (f) {
      return function (x) {
          return $foreign.defer(function (v) {
              return $foreign.force(f)($foreign.force(x));
          });
      };
  });
  var bindLazy = new Control_Bind.Bind(function () {
      return applyLazy;
  }, function (l) {
      return function (f) {
          return $foreign.defer(function (v) {
              return $foreign.force(f($foreign.force(l)));
          });
      };
  });
  exports["functorLazy"] = functorLazy;
  exports["applyLazy"] = applyLazy;
  exports["bindLazy"] = bindLazy;
  exports["defer"] = $foreign.defer;
  exports["force"] = $foreign.force;
})(PS["Data.Lazy"] = PS["Data.Lazy"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Char = PS["Data.Char"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Lazy = PS["Data.Lazy"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var NatTrie = (function () {
      function NatTrie(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      NatTrie.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new NatTrie(value0, value1, value2);
              };
          };
      };
      return NatTrie;
  })();
  var Tabulate = function (tabulate) {
      this.tabulate = tabulate;
  }; 
  var tabulateNat = new Tabulate((function () {
      var tabulateImpl = function (f) {
          var walk = function (v) {
              return function (v1) {
                  if (v instanceof Data_List_Types.Nil) {
                      return v1.value0;
                  };
                  if (v instanceof Data_List_Types.Cons && !v.value0) {
                      return Control_Bind.bind(Data_Lazy.bindLazy)(v1.value1)(walk(v.value1));
                  };
                  if (v instanceof Data_List_Types.Cons && v.value0) {
                      return Control_Bind.bind(Data_Lazy.bindLazy)(v1.value2)(walk(v.value1));
                  };
                  throw new Error("Failed pattern match at Data.Function.Memoize line 137, column 11 - line 137, column 64: " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
          var build = function (n) {
              return new NatTrie(Data_Lazy.defer(function (v) {
                  return f(n);
              }), Data_Lazy.defer(function (v) {
                  return build(n * 2 | 0);
              }), Data_Lazy.defer(function (v) {
                  return build((n * 2 | 0) + 1 | 0);
              }));
          };
          var trie = build(0);
          var bits = (function () {
              var bits$prime = function ($copy_acc) {
                  return function ($copy_v) {
                      var $tco_var_acc = $copy_acc;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(acc, v) {
                          if (v === 0) {
                              $tco_done = true;
                              return acc;
                          };
                          $tco_var_acc = new Data_List_Types.Cons((v & 1) !== 0, acc);
                          $copy_v = v >>> 1;
                          return;
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_acc, $copy_v);
                      };
                      return $tco_result;
                  };
              };
              return bits$prime(Data_List_Types.Nil.value);
          })();
          var go = function (n) {
              return walk(bits(n))(trie);
          };
          return go;
      };
      return tabulateImpl;
  })());
  var tabulate = function (dict) {
      return dict.tabulate;
  };
  var tabulateTuple = function (dictTabulate) {
      return function (dictTabulate1) {
          return new Tabulate(function (f) {
              var f$prime = tabulate(dictTabulate)(function (a) {
                  return tabulate(dictTabulate1)(function (b) {
                      return f(new Data_Tuple.Tuple(a, b));
                  });
              });
              return function (v) {
                  return Control_Bind.bind(Data_Lazy.bindLazy)(f$prime(v.value0))(function (v1) {
                      return v1(v.value1);
                  });
              };
          });
      };
  }; 
  var memoize = function (dictTabulate) {
      return function (f) {
          var f1 = tabulate(dictTabulate)(f);
          return function ($106) {
              return Data_Lazy.force(f1($106));
          };
      };
  };
  var memoize2 = function (dictTabulate) {
      return function (dictTabulate1) {
          return function (f) {
              var f1 = memoize(tabulateTuple(dictTabulate)(dictTabulate1))(Data_Tuple.uncurry(f));
              return Data_Tuple.curry(f1);
          };
      };
  };
  exports["Tabulate"] = Tabulate;
  exports["tabulate"] = tabulate;
  exports["memoize"] = memoize;
  exports["memoize2"] = memoize2;
  exports["tabulateTuple"] = tabulateTuple;
  exports["tabulateNat"] = tabulateNat;
})(PS["Data.Function.Memoize"] = PS["Data.Function.Memoize"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Data_Array = PS["Data.Array"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Memoize = PS["Data.Function.Memoize"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var editDistance = function (dictEq) {
      return function (xs) {
          return function (ys) {
              var dist$prime = Data_Function_Memoize.memoize2(Data_Function_Memoize.tabulateNat)(Data_Function_Memoize.tabulateNat)(function (a) {
                  return function (b) {
                      return dist(a)(b);
                  };
              });
              var dist = function (v) {
                  return function (v1) {
                      if (v === 0) {
                          return v1;
                      };
                      if (v1 === 0) {
                          return v;
                      };
                      return Data_Semigroup_Foldable.minimum(Data_Ord.ordInt)(Data_NonEmpty.foldable1NonEmpty(Data_Foldable.foldableArray))(new Data_NonEmpty.NonEmpty(dist$prime(v - 1 | 0)(v1) + 1 | 0, [ dist$prime(v)(v1 - 1 | 0) + 1 | 0, (function (dictPartial) {
                          var $6 = Data_Eq.eq(dictEq)(xs[v - 1 | 0])(ys[v1 - 1 | 0]);
                          if ($6) {
                              return dist$prime(v - 1 | 0)(v1 - 1 | 0);
                          };
                          return 1 + dist$prime(v - 1 | 0)(v1 - 1 | 0) | 0;
                      })() ]));
                  };
              };
              return dist$prime(Data_Array.length(xs))(Data_Array.length(ys));
          };
      };
  };
  exports["editDistance"] = editDistance;
})(PS["Options.Applicative.Help.Levenshtein"] = PS["Options.Applicative.Help.Levenshtein"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Exists = PS["Data.Exists"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_String = PS["Data.String"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Data_String_Common = PS["Data.String.Common"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var ExitCodes = PS["ExitCodes"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_Process = PS["Node.Process"];
  var Node_Stream = PS["Node.Stream"];
  var Options_Applicative_BashCompletion = PS["Options.Applicative.BashCompletion"];
  var Options_Applicative_Builder = PS["Options.Applicative.Builder"];
  var Options_Applicative_Builder_Internal = PS["Options.Applicative.Builder.Internal"];
  var Options_Applicative_Common = PS["Options.Applicative.Common"];
  var Options_Applicative_Help = PS["Options.Applicative.Help"];
  var Options_Applicative_Help_Chunk = PS["Options.Applicative.Help.Chunk"];
  var Options_Applicative_Help_Core = PS["Options.Applicative.Help.Core"];
  var Options_Applicative_Help_Levenshtein = PS["Options.Applicative.Help.Levenshtein"];
  var Options_Applicative_Help_Types = PS["Options.Applicative.Help.Types"];
  var Options_Applicative_Internal = PS["Options.Applicative.Internal"];
  var Options_Applicative_Internal_Utils = PS["Options.Applicative.Internal.Utils"];
  var Options_Applicative_Types = PS["Options.Applicative.Types"];
  var Prelude = PS["Prelude"];
  var Text_PrettyPrint_Leijen = PS["Text.PrettyPrint.Leijen"];                 
  var renderFailure = function (failure) {
      return function (progn) {
          var v = Data_Newtype.un(Options_Applicative_Types.newtypeParserFailure)(Options_Applicative_Types.ParserFailure)(failure)(progn);
          return new Data_Tuple.Tuple(Options_Applicative_Help_Types.renderHelp(v.value1.value1.value0)(v.value0), v.value1.value0);
      };
  };
  var parserFailure = function (pprefs) {
      return function (pinfo) {
          return function (msg) {
              return function (ctx) {
                  var with_context = function (arr) {
                      return function (i) {
                          return function (f) {
                              var v = Data_Array.head(arr);
                              if (v instanceof Data_Maybe.Nothing) {
                                  return f([  ])(i);
                              };
                              if (v instanceof Data_Maybe.Just) {
                                  return Data_Exists.runExists(function (i$prime) {
                                      return f(Options_Applicative_Internal.contextNames(arr))(i$prime);
                                  })(v.value0.value1);
                              };
                              throw new Error("Failed pattern match at Options.Applicative.Extra line 185, column 28 - line 187, column 73: " + [ v.constructor.name ]);
                          };
                      };
                  };
                  var usage_help = function (progn) {
                      return function (names) {
                          return function (v) {
                              if (msg instanceof Options_Applicative_Types.InfoMsg) {
                                  return Data_Monoid.mempty(Options_Applicative_Help_Types.parserHelpMonoid);
                              };
                              return Options_Applicative_Help_Core.usageHelp(Options_Applicative_Help_Chunk.vcatChunks([ Control_Applicative.pure(Options_Applicative_Help_Chunk.chunkApplicative)(Options_Applicative_Help_Core.parserUsage(pprefs)(v.infoParser)(Options_Applicative_Internal_Utils.unWords(Data_Foldable.foldableArray)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ progn ])(names)))), Data_Functor.map(Options_Applicative_Help_Chunk.chunkFunctor)(Text_PrettyPrint_Leijen.indent(2))(v.infoProgDesc) ]));
                          };
                      };
                  };
                  var suggestion_help = Options_Applicative_Help_Core.suggestionsHelp((function () {
                      if (msg instanceof Options_Applicative_Types.UnexpectedError) {
                          var opt_completions = function (v) {
                              return function (v1) {
                                  if (v1.optMain instanceof Options_Applicative_Types.OptReader) {
                                      return Data_Functor.map(Data_Functor.functorArray)(Options_Applicative_Common.showOption)(v1.optMain.value0);
                                  };
                                  if (v1.optMain instanceof Options_Applicative_Types.FlagReader) {
                                      return Data_Functor.map(Data_Functor.functorArray)(Options_Applicative_Common.showOption)(v1.optMain.value0);
                                  };
                                  if (v1.optMain instanceof Options_Applicative_Types.ArgReader) {
                                      return [  ];
                                  };
                                  if (v1.optMain instanceof Options_Applicative_Types.CmdReader) {
                                      if (v.hinfoUnreachableArgs) {
                                          return [  ];
                                      };
                                      if (Data_Boolean.otherwise) {
                                          return v1.optMain.value1;
                                      };
                                  };
                                  throw new Error("Failed pattern match at Options.Applicative.Extra line 279, column 64 - line 286, column 37: " + [ v1.optMain.constructor.name ]);
                              };
                          };
                          var possibles = Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(Data_Exists.runExists(function (zz) {
                              return Options_Applicative_Common.mapParser(opt_completions)(zz);
                          })(msg.value1.value0));
                          var isClose = function (a) {
                              return Data_Function.on(Options_Applicative_Help_Levenshtein.editDistance(Data_Eq.eqChar))(Data_String_CodeUnits.toCharArray)(a)(msg.value0) < 3;
                          };
                          var good = Data_Array.filter(isClose)(possibles);
                          var prose = (function () {
                              var $47 = Data_Array.length(good) < 2;
                              if ($47) {
                                  return Options_Applicative_Help_Chunk.stringChunk("Did you mean this?");
                              };
                              return Options_Applicative_Help_Chunk.stringChunk("Did you mean one of these?");
                          })();
                          var suggestions = Control_Apply.apply(Options_Applicative_Help_Chunk.chunkApply)(Data_Functor.map(Options_Applicative_Help_Chunk.chunkFunctor)(Text_PrettyPrint_Leijen.appendWithLine)(prose))(Data_Functor.map(Options_Applicative_Help_Chunk.chunkFunctor)(Text_PrettyPrint_Leijen.indent(4))(Options_Applicative_Help_Chunk.vcatChunks(Data_Functor.map(Data_Functor.functorArray)(Options_Applicative_Help_Chunk.stringChunk)(good))));
                          return suggestions;
                      };
                      return Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup));
                  })());
                  var show_full_help = (function () {
                      if (msg instanceof Options_Applicative_Types.ShowHelpText) {
                          return true;
                      };
                      if (msg instanceof Options_Applicative_Types.MissingError && (msg.value0 instanceof Options_Applicative_Types.CmdStart && (Data_Newtype.un(Options_Applicative_Types.parserPrefsNewtype)(Options_Applicative_Types.ParserPrefs)(pprefs)).prefShowHelpOnEmpty)) {
                          return true;
                      };
                      return (Data_Newtype.un(Options_Applicative_Types.parserPrefsNewtype)(Options_Applicative_Types.ParserPrefs)(pprefs)).prefShowHelpOnError;
                  })();
                  var exit_code = (function () {
                      if (msg instanceof Options_Applicative_Types.ErrorMsg) {
                          return (Data_Newtype.un(Options_Applicative_Types.parserInfoNewtype)(Options_Applicative_Types.ParserInfo)(pinfo)).infoFailureCode;
                      };
                      if (msg instanceof Options_Applicative_Types.UnknownError) {
                          return (Data_Newtype.un(Options_Applicative_Types.parserInfoNewtype)(Options_Applicative_Types.ParserInfo)(pinfo)).infoFailureCode;
                      };
                      if (msg instanceof Options_Applicative_Types.MissingError) {
                          return (Data_Newtype.un(Options_Applicative_Types.parserInfoNewtype)(Options_Applicative_Types.ParserInfo)(pinfo)).infoFailureCode;
                      };
                      if (msg instanceof Options_Applicative_Types.ExpectsArgError) {
                          return (Data_Newtype.un(Options_Applicative_Types.parserInfoNewtype)(Options_Applicative_Types.ParserInfo)(pinfo)).infoFailureCode;
                      };
                      if (msg instanceof Options_Applicative_Types.UnexpectedError) {
                          return (Data_Newtype.un(Options_Applicative_Types.parserInfoNewtype)(Options_Applicative_Types.ParserInfo)(pinfo)).infoFailureCode;
                      };
                      if (msg instanceof Options_Applicative_Types.ShowHelpText) {
                          return ExitCodes.Success.value;
                      };
                      if (msg instanceof Options_Applicative_Types.InfoMsg) {
                          return ExitCodes.Success.value;
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Extra line 172, column 17 - line 179, column 44: " + [ msg.constructor.name ]);
                  })();
                  var error_help = Options_Applicative_Help_Core.errorHelp((function () {
                      if (msg instanceof Options_Applicative_Types.ShowHelpText) {
                          return Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup));
                      };
                      if (msg instanceof Options_Applicative_Types.ErrorMsg) {
                          return Options_Applicative_Help_Chunk.stringChunk(msg.value0);
                      };
                      if (msg instanceof Options_Applicative_Types.InfoMsg) {
                          return Options_Applicative_Help_Chunk.stringChunk(msg.value0);
                      };
                      if (msg instanceof Options_Applicative_Types.MissingError && (msg.value0 instanceof Options_Applicative_Types.CmdStart && (Data_Newtype.un(Options_Applicative_Types.parserPrefsNewtype)(Options_Applicative_Types.ParserPrefs)(pprefs)).prefShowHelpOnEmpty)) {
                          return Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup));
                      };
                      if (msg instanceof Options_Applicative_Types.MissingError) {
                          return Data_Exists.runExists(function (x) {
                              return Options_Applicative_Help_Chunk.chunkBeside(Options_Applicative_Help_Chunk.stringChunk("Missing:"))(Options_Applicative_Help_Core.missingDesc(pprefs)(x));
                          })(msg.value1.value0);
                      };
                      if (msg instanceof Options_Applicative_Types.ExpectsArgError) {
                          return Options_Applicative_Help_Chunk.stringChunk("The option `" + (msg.value0 + "` expects an argument."));
                      };
                      if (msg instanceof Options_Applicative_Types.UnexpectedError) {
                          var msg$prime = (function () {
                              var $71 = Options_Applicative_Internal_Utils.startsWith("-")(msg.value0);
                              if ($71) {
                                  return "Invalid option `" + (msg.value0 + "'");
                              };
                              return "Invalid argument `" + (msg.value0 + "'");
                          })();
                          return Options_Applicative_Help_Chunk.stringChunk(msg$prime);
                      };
                      if (msg instanceof Options_Applicative_Types.UnknownError) {
                          return Data_Monoid.mempty(Options_Applicative_Help_Chunk.chunkMonoid(Text_PrettyPrint_Leijen.docSemigroup));
                      };
                      throw new Error("Failed pattern match at Options.Applicative.Extra line 198, column 30 - line 230, column 18: " + [ msg.constructor.name ]);
                  })());
                  var base_help = function (v) {
                      var h = Options_Applicative_Help_Core.headerHelp(v.infoHeader);
                      var f = Options_Applicative_Help_Core.footerHelp(v.infoFooter);
                      if (show_full_help) {
                          return Data_Foldable.fold(Data_Foldable.foldableArray)(Options_Applicative_Help_Types.parserHelpMonoid)([ h, f, Options_Applicative_Help_Core.parserHelp(pprefs)(v.infoParser) ]);
                      };
                      return Data_Monoid.mempty(Options_Applicative_Help_Types.parserHelpMonoid);
                  };
                  return Options_Applicative_Types.ParserFailure(function (progn) {
                      var h = with_context(ctx)(pinfo)(function (names) {
                          return function (pinfo$prime) {
                              return Data_Foldable.fold(Data_Foldable.foldableArray)(Options_Applicative_Help_Types.parserHelpMonoid)([ base_help(pinfo$prime), usage_help(progn)(names)(pinfo$prime), suggestion_help, error_help ]);
                          };
                      });
                      return new Data_Tuple.Tuple(h, new Data_Tuple.Tuple(exit_code, new Data_Tuple.Tuple((Data_Newtype.un(Options_Applicative_Types.parserPrefsNewtype)(Options_Applicative_Types.ParserPrefs)(pprefs)).prefColumns, Data_Unit.unit)));
                  });
              };
          };
      };
  };
  var helper = Options_Applicative_Builder.abortOption(Options_Applicative_Types.ShowHelpText.value)(Data_Foldable.fold(Data_Foldable.foldableArray)(Options_Applicative_Builder_Internal.modMonoid)([ Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("help"), Options_Applicative_Builder["short"](Options_Applicative_Builder_Internal.optionFieldsHasName)("h"), Options_Applicative_Builder.help("Show this help text"), Options_Applicative_Builder.hidden ]));
  var hsubparser = function (m) {
      var v = Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.metavar(Options_Applicative_Builder_Internal.commandFieldsHasMetavar)("COMMAND"))(m);
      var v1 = Options_Applicative_Builder_Internal.mkCommand(m);
      var add_helper = Data_Newtype.over(Options_Applicative_Types.parserInfoNewtype)(Options_Applicative_Types.parserInfoNewtype)(Options_Applicative_Types.ParserInfo)(function (pinfo) {
          return {
              infoParser: Options_Applicative_Internal_Utils.apApplyFlipped(Options_Applicative_Types.parserApply)(pinfo.infoParser)(helper),
              infoFailureCode: pinfo.infoFailureCode,
              infoFooter: pinfo.infoFooter,
              infoFullDesc: pinfo.infoFullDesc,
              infoHeader: pinfo.infoHeader,
              infoPolicy: pinfo.infoPolicy,
              infoProgDesc: pinfo.infoProgDesc
          };
      });
      var rdr = new Options_Applicative_Types.CmdReader(v1.value0, v1.value1.value0, function ($113) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(add_helper)(v1.value1.value1.value0($113));
      });
      return Options_Applicative_Builder_Internal.mkParser(v.value1)(v.value2)(rdr);
  };
  var getProgName = Data_Functor.mapFlipped(Effect.functorEffect)(Node_Process.argv)(function (args) {
      return Data_Maybe.fromMaybe("")(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.index(args)(1))(function (v) {
          return Data_Array.last(Data_String_Common.split("/")(v));
      }));
  });
  var getArgs = Data_Functor.mapFlipped(Effect.functorEffect)(Node_Process.argv)(Data_Array.drop(2));
  var exitWith = function (c) {
      return Node_Process.exit(Data_Enum.fromEnum(ExitCodes.boundedEnumExitCode)(c));
  };
  var exitSuccess = Node_Process.exit(Data_Enum.fromEnum(ExitCodes.boundedEnumExitCode)(ExitCodes.Success.value));
  var handleParseResult = function (v) {
      if (v instanceof Options_Applicative_Types.Success) {
          return Control_Applicative.pure(Effect.applicativeEffect)(v.value0);
      };
      if (v instanceof Options_Applicative_Types.Failure) {
          return function __do() {
              var v1 = getProgName();
              var v2 = renderFailure(v.value0)(v1);
              var stream = (function () {
                  if (v2.value1 instanceof ExitCodes.Success) {
                      return Node_Process.stdout;
                  };
                  return Node_Process.stderr;
              })();
              Data_Functor["void"](Effect.functorEffect)(Node_Stream.writeString(stream)(Node_Encoding.UTF8.value)(v2.value0 + "\x0a")(Data_Monoid.mempty(Effect.monoidEffect(Data_Monoid.monoidUnit))))();
              return exitWith(v2.value1)();
          };
      };
      if (v instanceof Options_Applicative_Types.CompletionInvoked) {
          return function __do() {
              var v1 = getProgName();
              var v2 = (Data_Newtype.un(Options_Applicative_Types.newtypeCompletionResult)(Options_Applicative_Types.CompletionResult)(v.value0)).execCompletion(v1)();
              Data_Functor["void"](Effect.functorEffect)(Node_Stream.writeString(Node_Process.stdout)(Node_Encoding.UTF8.value)(v2)(Data_Monoid.mempty(Effect.monoidEffect(Data_Monoid.monoidUnit))))();
              return exitSuccess();
          };
      };
      throw new Error("Failed pattern match at Options.Applicative.Extra line 111, column 1 - line 111, column 58: " + [ v.constructor.name ]);
  };
  var execParserPure = function (pprefs) {
      return function (pinfo) {
          return function (args) {
              var pinfo$prime = Data_Newtype.over(Options_Applicative_Types.parserInfoNewtype)(Options_Applicative_Types.parserInfoNewtype)(Options_Applicative_Types.ParserInfo)(function (i) {
                  return {
                      infoParser: Control_Alt.alt(Options_Applicative_Types.parserAlt)(Data_Functor.map(Options_Applicative_Types.parserFunctor)(Data_Either.Left.create)(Options_Applicative_BashCompletion.bashCompletionParser(pinfo)(pprefs)))(Data_Functor.map(Options_Applicative_Types.parserFunctor)(Data_Either.Right.create)(i.infoParser)),
                      infoFailureCode: i.infoFailureCode,
                      infoFooter: i.infoFooter,
                      infoFullDesc: i.infoFullDesc,
                      infoHeader: i.infoHeader,
                      infoPolicy: i.infoPolicy,
                      infoProgDesc: i.infoProgDesc
                  };
              })(pinfo);
              var p = Options_Applicative_Common.runParserInfo(Options_Applicative_Internal.pMonadP)(pinfo$prime)(Data_List.fromFoldable(Data_Foldable.foldableArray)(args));
              var v = Options_Applicative_Internal.runP(p)(pprefs);
              if (v.value0 instanceof Data_Either.Right && v.value0.value0 instanceof Data_Either.Right) {
                  return new Options_Applicative_Types.Success(v.value0.value0.value0);
              };
              if (v.value0 instanceof Data_Either.Right && v.value0.value0 instanceof Data_Either.Left) {
                  return new Options_Applicative_Types.CompletionInvoked(v.value0.value0.value0);
              };
              if (v.value0 instanceof Data_Either.Left) {
                  return Options_Applicative_Types.Failure.create(parserFailure(pprefs)(pinfo)(v.value0.value0)(v.value1));
              };
              throw new Error("Failed pattern match at Options.Applicative.Extra line 145, column 3 - line 148, column 73: " + [ v.constructor.name ]);
          };
      };
  };
  var customExecParser = function (pprefs) {
      return function (pinfo) {
          return Control_Bind.bind(Effect.bindEffect)(Data_Functor.map(Effect.functorEffect)(execParserPure(pprefs)(pinfo))(getArgs))(handleParseResult);
      };
  };
  exports["helper"] = helper;
  exports["hsubparser"] = hsubparser;
  exports["customExecParser"] = customExecParser;
  exports["execParserPure"] = execParserPure;
  exports["handleParseResult"] = handleParseResult;
  exports["parserFailure"] = parserFailure;
  exports["renderFailure"] = renderFailure;
})(PS["Options.Applicative.Extra"] = PS["Options.Applicative.Extra"] || {});
(function(exports) {
  // Generated by purs version 0.12.1
  "use strict";
  var $foreign = PS["ChanterelleMain"];
  var Chanterelle = PS["Chanterelle"];
  var Chanterelle_Internal_Logging = PS["Chanterelle.Internal.Logging"];
  var Chanterelle_Internal_Types = PS["Chanterelle.Internal.Types"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Effect = PS["Effect"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Exception = PS["Effect.Exception"];
  var Node_Process = PS["Node.Process"];
  var Options_Applicative = PS["Options.Applicative"];
  var Options_Applicative_Builder = PS["Options.Applicative.Builder"];
  var Options_Applicative_Builder_Internal = PS["Options.Applicative.Builder.Internal"];
  var Options_Applicative_Extra = PS["Options.Applicative.Extra"];
  var Options_Applicative_Internal_Utils = PS["Options.Applicative.Internal.Utils"];
  var Options_Applicative_Types = PS["Options.Applicative.Types"];
  var Prelude = PS["Prelude"];
  var Text_PrettyPrint_Leijen = PS["Text.PrettyPrint.Leijen"];                 
  var version = Options_Applicative_Builder.infoOption("0.0.0")(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("version"))(Options_Applicative_Builder.help("Print version information")));
  var genesisParser = Control_Apply.apply(Options_Applicative_Types.parserApply)(Data_Functor.map(Options_Applicative_Types.parserFunctor)(function (v) {
      return function (v1) {
          return new Chanterelle.GenesisOptions({
              input: v,
              output: v1
          });
      };
  })(Options_Applicative_Builder.strOption(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("input"))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.metavar(Options_Applicative_Builder_Internal.optionFieldsHasMetavar)("INPUT"))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.value(Options_Applicative_Builder_Internal.optionFieldsHasValue)("dist"))(Options_Applicative_Builder.help("path to some json file containing GENESIS_INPUT")))))))(Options_Applicative_Builder.strOption(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("output"))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.metavar(Options_Applicative_Builder_Internal.optionFieldsHasMetavar)("OUTPUT"))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.value(Options_Applicative_Builder_Internal.optionFieldsHasValue)("dist"))(Options_Applicative_Builder.help("path to some json file containing GENESIS_OUTPUT"))))));
  var deployParser = Control_Apply.apply(Options_Applicative_Types.parserApply)(Control_Apply.apply(Options_Applicative_Types.parserApply)(Data_Functor.map(Options_Applicative_Types.parserFunctor)(function (v) {
      return function (v1) {
          return function (v2) {
              return new Chanterelle.DeployOptions({
                  nodeURL: v,
                  timeout: v1,
                  script: v2
              });
          };
      };
  })(Options_Applicative_Builder.strOption(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("node-url"))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.metavar(Options_Applicative_Builder_Internal.optionFieldsHasMetavar)("URL"))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.value(Options_Applicative_Builder_Internal.optionFieldsHasValue)("http://localhost:8545"))(Options_Applicative_Builder.help("node URL")))))))(Options_Applicative_Builder.option(Options_Applicative_Builder["int"])(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("timeout"))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.metavar(Options_Applicative_Builder_Internal.optionFieldsHasMetavar)("SECOND"))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.value(Options_Applicative_Builder_Internal.optionFieldsHasValue)(60))(Options_Applicative_Builder.help("timeout in seconds")))))))(Data_Functor.map(Options_Applicative_Types.parserFunctor)(Chanterelle.SelectCLI.create)(Options_Applicative_Builder.argument(Options_Applicative_Builder.str)(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.metavar(Options_Applicative_Builder_Internal.argumentFieldsHasMetavar)("FILE"))(Options_Applicative_Builder.helpDoc(Data_Maybe.Just.create(Text_PrettyPrint_Leijen.appendWithSoftline(Text_PrettyPrint_Leijen.text("path to compiled output of a module with signature: "))(Text_PrettyPrint_Leijen.indent(2)(Text_PrettyPrint_Leijen.text("{ deploy :: DeployM Unit }")))))))));
  var commonOpts = function (cwd$prime) {
      return Data_Functor.map(Options_Applicative_Types.parserFunctor)(Chanterelle.CommonOpts.create)(Control_Apply.apply(Options_Applicative_Types.parserApply)(Data_Functor.map(Options_Applicative_Types.parserFunctor)(function (v) {
          return function (v1) {
              return {
                  optVerbosity: v,
                  rootPath: v1
              };
          };
      })(Options_Applicative_Builder.strOption(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["short"](Options_Applicative_Builder_Internal.optionFieldsHasName)("v"))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("verbosity"))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.metavar(Options_Applicative_Builder_Internal.optionFieldsHasMetavar)("LEVEL"))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.help("The level of logging"))(Options_Applicative_Builder.value(Options_Applicative_Builder_Internal.optionFieldsHasValue)("info"))))))))(Options_Applicative_Builder.strOption(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["short"](Options_Applicative_Builder_Internal.optionFieldsHasName)("r"))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName)("project-root"))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.metavar(Options_Applicative_Builder_Internal.optionFieldsHasMetavar)("ROOT"))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.help("Override the default project root"))(Options_Applicative_Builder.value(Options_Applicative_Builder_Internal.optionFieldsHasValue)(cwd$prime))))))));
  };
  var parser = function (cwd$prime) {
      return Control_Apply.apply(Options_Applicative_Types.parserApply)(Data_Functor.map(Options_Applicative_Types.parserFunctor)(function (v) {
          return function (v1) {
              return new Chanterelle["Args'"](v, v1);
          };
      })(commonOpts(cwd$prime)))(Options_Applicative_Extra.hsubparser(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.command("build")(Options_Applicative_Builder.info(Control_Applicative.pure(Options_Applicative_Types.parserApplicative)(Chanterelle.Build.value))(Options_Applicative_Builder.progDesc("Build project"))))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.command("compile")(Options_Applicative_Builder.info(Control_Applicative.pure(Options_Applicative_Types.parserApplicative)(Chanterelle.Compile.value))(Options_Applicative_Builder.progDesc("Compile project"))))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.command("codegen")(Options_Applicative_Builder.info(Control_Applicative.pure(Options_Applicative_Types.parserApplicative)(Chanterelle.Codegen.value))(Options_Applicative_Builder.progDesc("generate purescript"))))(Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup)(Options_Applicative_Builder.command("genesis")(Options_Applicative_Builder.info(Data_Functor.map(Options_Applicative_Types.parserFunctor)(Chanterelle.Genesis.create)(genesisParser))(Options_Applicative_Builder.progDesc("generate purescript"))))(Options_Applicative_Builder.command("deploy")(Options_Applicative_Builder.info(Data_Functor.map(Options_Applicative_Types.parserFunctor)(Chanterelle.Deploy.create)(deployParser))(Options_Applicative_Builder.progDesc("run deploy script")))))))));
  };
  var pinfo = function (cwd$prime) {
      return Options_Applicative_Builder.info(Options_Applicative_Internal_Utils.apApplyFlipped(Options_Applicative_Types.parserApply)(parser(cwd$prime))(Control_Apply.lift2(Options_Applicative_Types.parserApply)(Control_Semigroupoid.composeFlipped(Control_Semigroupoid.semigroupoidFn))(version)(Options_Applicative_Extra.helper)))(Options_Applicative_Builder.progDesc("A more functional truffle"));
  };
  var main = Effect_Aff.launchAff_(Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Node_Process.cwd))(function (v) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Options_Applicative_Extra.customExecParser(Options_Applicative_Builder.prefs(Options_Applicative_Builder.showHelpOnEmpty))(pinfo(v))))(function (v1) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Except_Trans.runExceptT(Data_Function.flip(Chanterelle.traverseArgs(Control_Monad_Except_Trans.applicativeExceptT(Effect_Aff.monadAff)))(v1)(function (v2) {
              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Error_Class["try"](Effect_Aff.monadErrorAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)($foreign.loadDeployMFromScriptPath(v2.value0.script.value0)))))(function (v3) {
                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Effect_Aff.monadAff))(new Chanterelle.DeployOptions({
                      nodeURL: v2.value0.nodeURL,
                      timeout: v2.value0.timeout,
                      script: new Chanterelle.SelectPS(v3)
                  }));
              });
          })))(function (v2) {
              if (v2 instanceof Data_Either.Left) {
                  return Chanterelle_Internal_Logging.log(Effect_Aff.monadEffectAff)(Chanterelle_Internal_Logging["Error"].value)("Couldn't load deploy script" + Data_Show.show(Effect_Exception.showError)(v2.value0));
              };
              if (v2 instanceof Data_Either.Right) {
                  return Chanterelle.chanterelle(v2.value0);
              };
              throw new Error("Failed pattern match at ChanterelleMain line 109, column 3 - line 112, column 37: " + [ v2.constructor.name ]);
          });
      });
  }));
  exports["version"] = version;
  exports["parser"] = parser;
  exports["genesisParser"] = genesisParser;
  exports["deployParser"] = deployParser;
  exports["commonOpts"] = commonOpts;
  exports["pinfo"] = pinfo;
  exports["main"] = main;
  exports["loadDeployMFromScriptPath"] = $foreign.loadDeployMFromScriptPath;
})(PS["ChanterelleMain"] = PS["ChanterelleMain"] || {});
PS["ChanterelleMain"].main();